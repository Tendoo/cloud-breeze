{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classes/core-event.class.ts","webpack:///./src/app/classes/validation-generator.class.ts","webpack:///./src/app/components/auth/auth.component.css","webpack:///./src/app/components/auth/auth.component.html","webpack:///./src/app/components/auth/auth.component.ts","webpack:///./src/app/components/auth/login/login.component.css","webpack:///./src/app/components/auth/login/login.component.html","webpack:///./src/app/components/auth/login/login.component.ts","webpack:///./src/app/components/auth/logout/logout.component.css","webpack:///./src/app/components/auth/logout/logout.component.html","webpack:///./src/app/components/auth/logout/logout.component.ts","webpack:///./src/app/components/auth/register/register.component.css","webpack:///./src/app/components/auth/register/register.component.html","webpack:///./src/app/components/auth/register/register.component.ts","webpack:///./src/app/components/dashboard/access-denied/access-denied.component.css","webpack:///./src/app/components/dashboard/access-denied/access-denied.component.html","webpack:///./src/app/components/dashboard/access-denied/access-denied.component.ts","webpack:///./src/app/components/dashboard/crud-create/crud-create.component.css","webpack:///./src/app/components/dashboard/crud-create/crud-create.component.html","webpack:///./src/app/components/dashboard/crud-create/crud-create.component.ts","webpack:///./src/app/components/dashboard/crud-edit/crud-edit.component.css","webpack:///./src/app/components/dashboard/crud-edit/crud-edit.component.html","webpack:///./src/app/components/dashboard/crud-edit/crud-edit.component.ts","webpack:///./src/app/components/dashboard/crud/crud.component.css","webpack:///./src/app/components/dashboard/crud/crud.component.html","webpack:///./src/app/components/dashboard/crud/crud.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/dashboard/home/home.component.css","webpack:///./src/app/components/dashboard/home/home.component.html","webpack:///./src/app/components/dashboard/home/home.component.ts","webpack:///./src/app/components/dashboard/medias-upload/medias-upload.component.css","webpack:///./src/app/components/dashboard/medias-upload/medias-upload.component.html","webpack:///./src/app/components/dashboard/medias-upload/medias-upload.component.ts","webpack:///./src/app/components/dashboard/medias/medias.component.css","webpack:///./src/app/components/dashboard/medias/medias.component.html","webpack:///./src/app/components/dashboard/medias/medias.component.ts","webpack:///./src/app/components/dashboard/modules-upload/modules-upload.component.css","webpack:///./src/app/components/dashboard/modules-upload/modules-upload.component.html","webpack:///./src/app/components/dashboard/modules-upload/modules-upload.component.ts","webpack:///./src/app/components/dashboard/modules/modules.component.css","webpack:///./src/app/components/dashboard/modules/modules.component.html","webpack:///./src/app/components/dashboard/modules/modules.component.ts","webpack:///./src/app/components/dashboard/not-found/not-found.component.css","webpack:///./src/app/components/dashboard/not-found/not-found.component.html","webpack:///./src/app/components/dashboard/not-found/not-found.component.ts","webpack:///./src/app/components/dashboard/profile/profile.component.css","webpack:///./src/app/components/dashboard/profile/profile.component.html","webpack:///./src/app/components/dashboard/profile/profile.component.ts","webpack:///./src/app/components/dashboard/settings/settings.component.css","webpack:///./src/app/components/dashboard/settings/settings.component.html","webpack:///./src/app/components/dashboard/settings/settings.component.ts","webpack:///./src/app/components/dashboard/users-create/users-create.component.css","webpack:///./src/app/components/dashboard/users-create/users-create.component.html","webpack:///./src/app/components/dashboard/users-create/users-create.component.ts","webpack:///./src/app/components/dashboard/users-edit/users-edit.component.css","webpack:///./src/app/components/dashboard/users-edit/users-edit.component.html","webpack:///./src/app/components/dashboard/users-edit/users-edit.component.ts","webpack:///./src/app/components/dashboard/users/users.component.css","webpack:///./src/app/components/dashboard/users/users.component.html","webpack:///./src/app/components/dashboard/users/users.component.ts","webpack:///./src/app/components/do-setup/application/application.component.css","webpack:///./src/app/components/do-setup/application/application.component.html","webpack:///./src/app/components/do-setup/application/application.component.ts","webpack:///./src/app/components/do-setup/database/database.component.css","webpack:///./src/app/components/do-setup/database/database.component.html","webpack:///./src/app/components/do-setup/database/database.component.ts","webpack:///./src/app/components/do-setup/do-setup.component.css","webpack:///./src/app/components/do-setup/do-setup.component.html","webpack:///./src/app/components/do-setup/do-setup.component.ts","webpack:///./src/app/components/do-setup/setup-home/setup-home.component.css","webpack:///./src/app/components/do-setup/setup-home/setup-home.component.html","webpack:///./src/app/components/do-setup/setup-home/setup-home.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/migration-dialog/migration-dialog.component.css","webpack:///./src/app/components/migration-dialog/migration-dialog.component.html","webpack:///./src/app/components/migration-dialog/migration-dialog.component.ts","webpack:///./src/app/guards/app-state.guard.ts","webpack:///./src/app/guards/check-app-installed.guard.ts","webpack:///./src/app/guards/check-registration-status.guard.ts","webpack:///./src/app/guards/crud-create.guard.ts","webpack:///./src/app/guards/crud-edit.guard.ts","webpack:///./src/app/guards/crud-list.guard.ts","webpack:///./src/app/guards/require-logged.guard.ts","webpack:///./src/app/services/http-response-parser.service.ts","webpack:///./src/app/services/loader.service.ts","webpack:///./src/app/services/responsive.service.ts","webpack:///./src/app/services/setup.service.ts","webpack:///./src/app/services/tendoo-auth.service.ts","webpack:///./src/app/services/tendoo-crud.service.ts","webpack:///./src/app/services/tendoo-fields.service.ts","webpack:///./src/app/services/tendoo-forms.service.ts","webpack:///./src/app/services/tendoo-medias.service.ts","webpack:///./src/app/services/tendoo-menu.service.ts","webpack:///./src/app/services/tendoo-modules.service.ts","webpack:///./src/app/services/tendoo-options.service.ts","webpack:///./src/app/services/tendoo-table.service.ts","webpack:///./src/app/services/tendoo-tabs.service.ts","webpack:///./src/app/services/tendoo-users.service.ts","webpack:///./src/app/services/tendoo.service.ts","webpack:///./src/app/shared/confirm-dialog/confirm-dialog.component.css","webpack:///./src/app/shared/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/shared/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/shared/crud-table/crud-table.component.css","webpack:///./src/app/shared/crud-table/crud-table.component.html","webpack:///./src/app/shared/crud-table/crud-table.component.ts","webpack:///./src/app/shared/fields/fields.component.css","webpack:///./src/app/shared/fields/fields.component.html","webpack:///./src/app/shared/fields/fields.component.ts","webpack:///./src/app/shared/menu-list/menu-list.component.css","webpack:///./src/app/shared/menu-list/menu-list.component.html","webpack:///./src/app/shared/menu-list/menu-list.component.ts","webpack:///./src/app/shared/sub-menu-list/sub-menu-list.component.css","webpack:///./src/app/shared/sub-menu-list/sub-menu-list.component.html","webpack:///./src/app/shared/sub-menu-list/sub-menu-list.component.ts","webpack:///./src/app/validators/matches.validator.ts","webpack:///./src/app/validators/number.validator.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/modules/material.module.ts","webpack:///./src/modules/routes.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'tendoo-setup';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/modules/material.module';\r\nimport { SetupHomeComponent } from './components/do-setup/setup-home/setup-home.component';\r\nimport { DatabaseComponent } from './components/do-setup/database/database.component';\r\nimport { ApplicationComponent } from './components/do-setup/application/application.component';\r\nimport { LoginComponent } from './components/auth/login/login.component';\r\nimport { LogoutComponent } from './components/auth/logout/logout.component';\r\nimport { RegisterComponent } from './components/auth/register/register.component';\r\nimport { UsersComponent } from './components/dashboard/users/users.component';\r\nimport { ModulesComponent } from './components/dashboard/modules/modules.component';\r\nimport { SettingsComponent } from './components/dashboard/settings/settings.component';\r\nimport { RoutesModule } from 'src/modules/routes.module';\r\nimport { DashboardHomeComponent } from './components/dashboard/home/home.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FieldsComponent } from './shared/fields/fields.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LoaderService } from './services/loader.service';\r\nimport { DoSetupComponent } from './components/do-setup/do-setup.component';\r\nimport { AuthComponent } from './components/auth/auth.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ModulesUploadComponent } from './components/dashboard/modules-upload/modules-upload.component';\r\nimport { ConfirmDialogComponent } from './shared/confirm-dialog/confirm-dialog.component';\r\nimport { UsersEditComponent } from './components/dashboard/users-edit/users-edit.component';\r\nimport { UsersCreateComponent } from './components/dashboard/users-create/users-create.component';\r\nimport { ProfileComponent } from './components/dashboard/profile/profile.component';\r\nimport { MediasComponent } from './components/dashboard/medias/medias.component';\r\nimport { MediasUploadComponent } from './components/dashboard/medias-upload/medias-upload.component';\r\nimport { MenuListComponent } from './shared/menu-list/menu-list.component';\r\nimport { SubMenuListComponent } from './shared/sub-menu-list/sub-menu-list.component';\r\nimport { CoreEvent } from './classes/core-event.class';\r\nimport { EventEmitter } from 'protractor';\r\nimport { NotFoundComponent } from './components/dashboard/not-found/not-found.component';\r\nimport { CrudComponent } from './components/dashboard/crud/crud.component';\r\nimport { CrudTableComponent } from './shared/crud-table/crud-table.component';\r\nimport { CrudCreateComponent } from './components/dashboard/crud-create/crud-create.component';\r\nimport { CrudEditComponent } from './components/dashboard/crud-edit/crud-edit.component';\r\nimport { MigrationDialogComponent } from './components/migration-dialog/migration-dialog.component';\r\nimport { AccessDeniedComponent } from './components/dashboard/access-denied/access-denied.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        SetupHomeComponent,\r\n        DatabaseComponent,\r\n        ApplicationComponent,\r\n        LoginComponent,\r\n        LogoutComponent,\r\n        RegisterComponent,\r\n        UsersComponent,\r\n        ModulesComponent,\r\n        SettingsComponent,\r\n        DashboardHomeComponent,\r\n        FieldsComponent,\r\n        DoSetupComponent,\r\n        AuthComponent,\r\n        HomeComponent,\r\n        DashboardComponent,\r\n        ModulesUploadComponent,\r\n        ConfirmDialogComponent,\r\n        UsersEditComponent,\r\n        UsersCreateComponent,\r\n        ProfileComponent,\r\n        MediasComponent,\r\n        MediasUploadComponent,\r\n        MenuListComponent,\r\n        SubMenuListComponent,\r\n        NotFoundComponent,\r\n        CrudComponent,\r\n        CrudTableComponent,\r\n        CrudCreateComponent,\r\n        CrudEditComponent,\r\n        MigrationDialogComponent,\r\n        AccessDeniedComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        FlexLayoutModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        MaterialModule,\r\n        RoutesModule,\r\n        FormsModule,\r\n        DropzoneModule\r\n    ],\r\n    entryComponents: [\r\n        ConfirmDialogComponent,\r\n        MigrationDialogComponent\r\n    ],\r\n    providers: [\r\n        LoaderService,\r\n        {\r\n            provide: CoreEvent,\r\n            useValue: new CoreEvent\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { CoreAction } from \"../interfaces/core-action\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CoreEvent extends EventEmitter<CoreAction> {\r\n    constructor() {\r\n        super( true );\r\n    }\r\n}","import { ValidatorFn, Validators, FormControl, AbstractControl, FormGroup } from \"@angular/forms\";\r\nimport { Field } from \"../interfaces/field\";\r\nimport { MatchesValidator } from \"../validators/matches.validator\";\r\nimport { Numbervalidator } from \"../validators/number.validator\";\r\n\r\nexport class ValidationGenerator {\r\n    /**\r\n     * generate a validator from field validation property\r\n     * @param string validation string;\r\n     * @return array of validaiton\r\n     */\r\n    static from( validation: string | any[] ): ValidatorFn[] | null {\r\n\r\n        \r\n        if ( validation ) {\r\n\r\n            /**\r\n             * make sure to skip \r\n             * validation of object\r\n             */\r\n            if ( typeof validation !== 'string' ) {\r\n                validation  =   (<any[]>validation).filter( rule => {\r\n                    return typeof rule === 'string'; \r\n                });\r\n                validation  =   (<any[]>validation).join( '|' );\r\n            }\r\n\r\n            let finalRules          =   [];\r\n            const rules             =   (<string>validation).split( '|' );\r\n            const minRule \t\t\t=\t/(min)\\:([0-9])+/g;\r\n            const maxRule \t\t\t=\t/(max)\\:([0-9])+/g;\r\n            const matchRule         =   /(same):(\\w+)/g;\r\n            let result;\r\n            \r\n            /**\r\n             * Loop and parses the rules\r\n             */\r\n            rules.forEach( rule => {\r\n                if ( rule == 'required' ) {\r\n                    finalRules.push( Validators.required );\r\n                } else if ( rule == 'email' ) {\r\n                    finalRules.push( Validators.email );\r\n                } else if( result =   minRule.exec( rule ) ) {\r\n                    finalRules.push( Validators.minLength( result[2] ) );\r\n                } else if( result = maxRule.exec( rule ) ) {\r\n                    finalRules.push( Validators.maxLength( result[2] ) );\r\n                } else if( result = matchRule.exec( rule ) ) {\r\n                    finalRules.push( MatchesValidator( result[2] ) )\r\n                } else if ( rule == 'number' ) {\r\n                    finalRules.push( Numbervalidator() )\r\n                }\r\n            });\r\n\r\n            return finalRules;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Extract FormControl from Field object\r\n     * @param array fields\r\n     * @return object of FormControl\r\n     */\r\n    static extractControls( fields:Field[], ignoreEmpty = false ): { [key:string] : FormControl } {\r\n        let formControl     =   {};\r\n        fields.forEach( field => {\r\n\r\n            /**\r\n             * the field.control is required in order to extract a control\r\n             * unless if that should ignore empty controls\r\n             */\r\n            if ( field.control === undefined && ignoreEmpty == false ) {\r\n                throw `Unable to use the validation control for the field : \"${field.name}\". Please make sure to define the '.control' property for this field.`\r\n            }\r\n\r\n            if ( field.control ) {\r\n                field.control.setValidators( this.from( field.validation ) );\r\n                formControl[ field.name ]   =   field.control;\r\n            }\r\n        });\r\n\r\n        return formControl;\r\n    }\r\n\r\n    /**\r\n     * Build FormControl from Field object\r\n     * create FormControl if it's not defined and call \r\n     * extractControls to build the FormControl\r\n     * @param Field object\r\n     * @return FormControl\r\n     */\r\n    static buildFormControls( fields: Field[] ): { [ key:string ] : FormControl } {\r\n        let formControls     =   {};\r\n        fields.forEach( ( field:Field ) => {\r\n            if ( field.control == undefined ) {\r\n                field.control   =   new FormControl( field.value ? field.value : null );\r\n            } else {\r\n                field.control.setValue( field.value );\r\n            }\r\n        });\r\n        \r\n        return this.extractControls( fields );\r\n    }\r\n\r\n    /**\r\n     * Build FormControl from Field object.\r\n     * Create FormControl if it's not defined and call \r\n     * extractControls to build the FormControl\r\n     * @param Field object\r\n     * @return FormControl\r\n     */\r\n    static buildFormControl( field: Field ): FormControl {\r\n        if ( field.control == undefined ) {\r\n            field.control   =   new FormControl( field.value || null );\r\n        } else {\r\n            field.control.setValue( field.value || null );\r\n        }\r\n        \r\n        return this.extractControls([ field ])[ field.name ];\r\n    }\r\n\r\n    /**\r\n     * touch all fields of a provided FormGroup\r\n     * @param form \r\n     */\r\n    static touchAllFields( form:FormGroup ) {\r\n        /**\r\n\t\t * Trigger touch even on all fields.\r\n\t\t * Start by looping tabs\r\n\t\t */\r\n\t\tObject.keys( form.controls ).forEach( field => {\r\n            form.get( field ).markAsTouched();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Build From Field Array\r\n     * @param array Field[]\r\n     * @return FormGroup\r\n     */\r\n    static buildFormGroup( fields: Field[] ): { fields: Field[], formGroup: FormGroup } {\r\n        fields.forEach( field => {\r\n            field.control = ValidationGenerator.buildFormControl( field )\r\n        });\r\n\r\n        return {\r\n            fields,\r\n            formGroup   :   new FormGroup( ValidationGenerator.extractControls( fields ) )\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Disable all field provided as an array of Field.\r\n     * @param array Field[]\r\n     * @return void\r\n     */\r\n    static deactivateFields( fields: Field[] ) {\r\n        fields.forEach( field =>  field.control.disable() );\r\n    }\r\n\r\n    /**\r\n     * Enable all field provided as an array of Field.\r\n     * @param array Field[]\r\n     * @return void\r\n     */\r\n    static enableFields( fields: Field[] ) {\r\n        fields.forEach( field => field.control.enable() );\r\n    }\r\n\r\n    /**\r\n     * Throw custom errors on fields and FormGroup\r\n     * @param array Field[]\r\n     * @param error FieldError\r\n     * @return void\r\n     */\r\n    static throwFieldsError( group: FormGroup, fields: Field[], errors ) {\r\n        for( let error in errors ) {\r\n            group.get( error ).setErrors({ error: true });\r\n            fields.forEach( field => {\r\n                if ( field.name === error ) {\r\n                    field.errors    =   errors[ field.name ];\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get valid value from FromGroup.\r\n     * This skip null value from the final object\r\n     * @param object FormGroup value\r\n     * @return object result\r\n     */\r\n    static noNullValue( group: FormGroup ) {\r\n        let finalData   =   {};\r\n        for( let key in group.value ) {\r\n            if ( group.value[ key ] !== null ) {\r\n                finalData[ key ]    =   group.value[ key ];\r\n            }\r\n        }\r\n\r\n        return finalData;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9hdXRoLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-content\\\">\\r\\n    <div \\r\\n        fxLayoutAlign=\\\"center\\\"\\r\\n        fxFlex.xs=\\\"90%\\\" \\r\\n        fxFlex.sm=\\\"70%\\\" \\r\\n        fxFlex.md=\\\"50%\\\" \\r\\n        fxFlex.lg=\\\"30%\\\" \\r\\n        fxFlex.xl=\\\"20%\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-auth',\r\n    templateUrl: './auth.component.html',\r\n    styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n    \r\n    constructor() { }\r\n    \r\n    ngOnInit() {\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form [formGroup]=\\\"loginForm\\\">\\r\\n    <mat-card color=\\\"primary\\\">\\r\\n        <mat-card-title>Authenticating</mat-card-title>\\r\\n        <mat-card-content>\\r\\n            <app-fields [field]=\\\"field\\\" [group]=\\\"loginForm\\\" *ngFor=\\\"let field of fields\\\"></app-fields>\\r\\n        </mat-card-content>\\r\\n        <mat-divider *ngIf=\\\"!tendoo.isLoading\\\"></mat-divider>\\r\\n        <mat-progress-bar *ngIf=\\\"tendoo.auth.isLoading\\\" mode=\\\"indeterminate\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\"></mat-progress-bar>\\r\\n        <mat-card-actions fxLayoutAlign=\\\"space-between\\\">\\r\\n            <button [disabled]=\\\"tendoo.auth.isLoading\\\" (click)=\\\"login()\\\" mat-button=\\\"\\\">\\r\\n                Login\\r\\n            </button>\\r\\n            <button [disabled]=\\\"tendoo.auth.isLoading\\\" routerLink=\\\"/auth/register\\\" mat-button=\\\"\\\">\\r\\n                Register\\r\\n            </button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    fields: Field[]     =   [];\r\n    loginForm: FormGroup;\r\n\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        private snackbar: MatSnackBar,\r\n        private router: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.fields     =   [\r\n            {\r\n                label: 'Username',\r\n                name: 'username',\r\n                type: 'text',\r\n                value: 'admin',\r\n                description: 'Username saved during the registration.',\r\n            }, {\r\n                label: 'Password',\r\n                name: 'password',\r\n                type: 'password',\r\n                value: 'sanches',\r\n                description: 'Only you knows what is the password',\r\n            }\r\n        ];\r\n\r\n        const fields    =   ValidationGenerator.buildFormControls( this.fields );\r\n        this.loginForm  =   new FormGroup( fields );\r\n        // this.login();\r\n    }\r\n\r\n    login() {\r\n        ValidationGenerator.touchAllFields( this.loginForm );\r\n\r\n        if ( ! this.loginForm.valid ) {\r\n            return this.snackbar.open( 'Unable to login, the login form as some erors', 'OK', {\r\n                duration: 3000\r\n            });\r\n        }\r\n\r\n        this.tendoo.auth.login( this.loginForm.value ).subscribe( (result:any) => {\r\n            /**\r\n             * once the user is connected\r\n             * let's save the credential on \r\n             * each outgoing request\r\n             */\r\n            this.tendoo.auth.setCredentials( result.user, result.token );\r\n            this.snackbar.open( result.message, null, {\r\n                duration: 3000\r\n            });\r\n\r\n            /**\r\n             * if the intented has been defined. \r\n             * let's redirect the user to that location\r\n             */\r\n            let path    =   this.tendoo.auth.intented;\r\n            if ( path  !== undefined ) {\r\n                return this.router.navigateByUrl( path );\r\n            }\r\n\r\n            this.router.navigateByUrl( 'dashboard/users' );\r\n\r\n        }, (result: HttpErrorResponse ) => {\r\n            this.snackbar.open( result.error.message );\r\n        })\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9sb2dvdXQvbG9nb3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  logout works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TendooAuthService } from 'src/app/services/tendoo-auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-logout',\r\n    templateUrl: './logout.component.html',\r\n    styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n    \r\n    constructor(\r\n        private auth: TendooAuthService,\r\n        private route: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.auth.logout();\r\n        this.route.navigateByUrl( '/auth/login' );\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" *ngIf=\\\"registerForm\\\">\\r\\n    <mat-card color=\\\"primary\\\">\\r\\n        <mat-card-title>Register</mat-card-title>\\r\\n        <mat-card-content>\\r\\n            <app-fields [field]=\\\"field\\\" [group]=\\\"registerForm\\\" *ngFor=\\\"let field of fields\\\"></app-fields>\\r\\n        </mat-card-content>\\r\\n        <mat-divider *ngIf=\\\"!tendoo.isLoading\\\"></mat-divider>\\r\\n        <mat-progress-bar *ngIf=\\\"tendoo.auth.isLoading\\\" mode=\\\"indeterminate\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\"></mat-progress-bar>\\r\\n        <mat-card-actions fxLayoutAlign=\\\"space-between\\\">\\r\\n            <button [disabled]=\\\"tendoo.auth.isLoading\\\" (click)=\\\"register()\\\" mat-button=\\\"\\\">\\r\\n                Create an account\\r\\n            </button>\\r\\n            <button [disabled]=\\\"tendoo.auth.isLoading\\\" routerLink=\\\"/auth/login\\\" mat-button=\\\"\\\">\\r\\n                Login\\r\\n            </button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</form>\\r\\n<mat-spinner *ngIf=\\\"! registerForm\\\"></mat-spinner>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n    fields: Field[]         =   [];\r\n    registerForm: FormGroup;\r\n\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        public snackbar: MatSnackBar,\r\n        public router: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.tendoo.fields.getPublicFields( 'auth.register' ).subscribe( (fields: Field[]) => {\r\n            this.fields         =   fields;\r\n            const controls      =   ValidationGenerator.buildFormControls( this.fields );\r\n            this.registerForm   =   new FormGroup( controls );\r\n        });\r\n    }\r\n\r\n    register() {\r\n        ValidationGenerator.touchAllFields( this.registerForm );\r\n\r\n        if ( ! this.registerForm.valid ) {\r\n            return this.snackbar.open( 'Unable to proceed, the form is not valid.', 'OK', { duration: 5000 });\r\n        }\r\n\r\n        ValidationGenerator.deactivateFields( this.fields );\r\n\r\n        this.tendoo.auth.register( this.registerForm.value ).subscribe( (result: AsyncResponse ) => {\r\n            \r\n            /**\r\n             * when the registration is successful\r\n             * let's redirect back to the login page.\r\n             */\r\n            this.router.navigateByUrl( 'auth/login' );\r\n            this.snackbar.open( result.message, 'OK', { duration: 5000 });\r\n\r\n        }, (result: HttpErrorResponse ) => {\r\n\r\n            this.snackbar.open( result.error.message, 'OK', { duration: 5000 });\r\n\r\n            ValidationGenerator.enableFields( this.fields );\r\n\r\n            /**\r\n             * loop all the field to show the \r\n             * error on the component.\r\n             */\r\n            for( let error in result.error.errors ) {\r\n                this.registerForm.get( error ).setErrors({ error: true });\r\n                this.fields.forEach( field => {\r\n                    if ( field.name === error ) {\r\n                        field.errors    =   result.error.errors[ field.name ];\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n    \r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvYWNjZXNzLWRlbmllZC9hY2Nlc3MtZGVuaWVkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvYWNjZXNzLWRlbmllZC9hY2Nlc3MtZGVuaWVkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<div fxFlex fxFill fxLayoutAlign=\\\"center center\\\" class=\\\"bg-content\\\">\\n    <div fxFlex=\\\"400px\\\" class=\\\"text-center\\\">\\n        <h1>Oh no !!!</h1>\\n        <p>Looks like you're attempting to access to a page which is not allowed to you. How bad this is... </p>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-access-denied',\n  templateUrl: './access-denied.component.html',\n  styleUrls: ['./access-denied.component.css']\n})\nexport class AccessDeniedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvY3J1ZC1jcmVhdGUvY3J1ZC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7Q0FDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9jcnVkLWNyZWF0ZS9jcnVkLWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"bg-content\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\n    <ng-container *ngIf=\\\"crudConfig\\\">\\n        <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 2px; position: absolute\\\" *ngIf=\\\"tendoo.crud.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n        <div fxLayout=\\\"row\\\" class=\\\"p-3 pb-0\\\">\\n            <div fxFlex>\\n                <h1 class=\\\"mat-display-1 mb-0\\\">{{ crudConfig.labels.create_title }}</h1>\\n                <span class=\\\"mat-title\\\">{{ crudConfig.labels.create_description }}</span>\\n            </div>\\n            <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\n                <button [routerLink]=\\\"crudConfig.links.list\\\" mat-button color=\\\"warn\\\">{{ crudConfig.labels.back_to_list }}</button>\\n            </div>\\n        </div>\\n        <div class=\\\"p-3\\\" fxLayout=\\\"row\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"column\\\">\\n            <mat-card>\\n                <mat-card-title>\\n                    {{ crudConfig.labels.create_title }}\\n                </mat-card-title>\\n                <mat-card-content>\\n                    <form [formGroup]=\\\"crudForm\\\" *ngIf=\\\"crudForm\\\">\\n                        <app-fields *ngFor=\\\"let field of crudConfig.fields\\\" [field]=\\\"field\\\" [group]=\\\"crudForm\\\"></app-fields>\\n                    </form>\\n                </mat-card-content>\\n                <mat-divider></mat-divider>\\n                <mat-card-actions>\\n                    <button [disabled]=\\\"tendoo.crud.isLoading\\\" mat-button (click)=\\\"submit()\\\" color=\\\"primary\\\">Submit</button>\\n                </mat-card-actions>\\n            </mat-card>\\n        </div>\\n    </ng-container>\\n    <div fxFlex fxFill *ngIf=\\\"! crudForm\\\" fxLayoutAlign=\\\"center center\\\">\\n        <mat-spinner [diameter]=\\\"50\\\"></mat-spinner>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TendooService } from 'src/app/services/tendoo.service';\nimport { MatSnackBar } from '@angular/material';\nimport { CrudConfig } from 'src/app/interfaces/crud-config.interface';\nimport { FormGroup } from '@angular/forms';\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Field } from 'src/app/interfaces/field';\n\n@Component({\n    selector: 'app-crud-create',\n    templateUrl: './crud-create.component.html',\n    styleUrls: ['./crud-create.component.css']\n})\nexport class CrudCreateComponent implements OnInit {\n    crudConfig: CrudConfig;\n    crudForm: FormGroup;\n    \n    constructor(\n        private route: ActivatedRoute,\n        public tendoo: TendooService,\n        public snackbar: MatSnackBar,\n        public router: Router\n    ) { }\n    \n    ngOnInit() {\n        this.route.paramMap.subscribe( params => {\n            const namespace         =   params.get( 'namespace' );\n\n            this.tendoo.crud.getCreateConfig( namespace ).subscribe( (config: CrudConfig ) => {\n                this.crudConfig     =   config;\n                const formControls  =   ValidationGenerator.buildFormControls( this.crudConfig.fields );\n                this.crudForm       =   new FormGroup( formControls );\n            });\n        })\n    }\n\n    submit() {\n        ValidationGenerator.touchAllFields( this.crudForm );\n\n        if ( this.crudForm.invalid ) {\n            return this.snackbar.open( this.crudConfig.labels[ 'create_form_invalid' ] || 'Unable to proceed, the form is not valid', 'OK', {\n                duration: 3000\n            });\n        }\n\n        /**\n         * let's disable all the field \n         * before proceed submitting\n         */\n        ValidationGenerator.deactivateFields( this.crudConfig.fields );\n\n        /**\n         * submit the form to the \n         * server\n         */\n        this.tendoo.crud.postForm( \n            this.crudConfig.namespace,\n            this.crudForm.value\n        ).subscribe( (result: AsyncResponse) => {\n            /**\n             * Enable back all disabled fields\n             */\n            ValidationGenerator.enableFields( this.crudConfig.fields );\n\n            /**\n             * generate a notification and \n             * redirect back to the list\n             */\n            this.snackbar.open( result.message, 'OK',  { duration : 3000 });\n            this.router.navigateByUrl( this.crudConfig.links.list );\n\n        }, ( result: HttpErrorResponse ) => {\n            /**\n             * Enable back all disabled fields\n             */\n            ValidationGenerator.enableFields( this.crudConfig.fields );\n            \n            /**\n             * An error has occured, let's show why the \n             * error has occured\n             */\n            this.snackbar.open( result.error.message, 'OK', { duration: 5000 });\n        })\n    }\n    \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2NydWQtZWRpdC9jcnVkLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  crud-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-crud-edit',\n  templateUrl: './crud-edit.component.html',\n  styleUrls: ['./crud-edit.component.css']\n})\nexport class CrudEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvY3J1ZC9jcnVkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvY3J1ZC9jcnVkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<div *ngIf=\\\"crud\\\" class=\\\"bg-content\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\n    <div fxLayout=\\\"row\\\" class=\\\"p-3 pb-0\\\">\\n        <div fxFlex>\\n            <h1 class=\\\"mat-display-1 mb-0\\\">{{ crud.labels.list_title }}</h1>\\n            <span class=\\\"mat-title\\\">{{ crud.labels.list_description }}</span>\\n        </div>\\n    </div>\\n    <div fxFlex class=\\\"p-3\\\">\\n        <app-crud-table\\n            *ngIf=\\\"crud.results.data.length > 0\\\"\\n            [crud]=\\\"crud\\\"\\n\\n            (sort)=\\\"sortData( $event )\\\"\\n            (delete)=\\\"deleteEntries( $event )\\\"\\n            (action)=\\\"doAction( $event )\\\"\\n            (search)=\\\"searh( $event )\\\"\\n        ></app-crud-table>\\n        <div *ngIf=\\\"crud.results.data.length === 0\\\" fxFlex fxFill fxLayoutAlign=\\\"center center\\\">\\n            <div fxFlex=\\\"400px\\\">\\n                <h3 style=\\\"text-align: center\\\">\\n                    {{ crud.labels.no_entry ? crud.labels.no_entry : 'Hum... it\\\\'s quite empty here.' }}. \\n                    <a [routerLink]=\\\"crud?.links.create\\\">{{ crud.labels.create_new ? crud.labels.create_new : 'Create a new entry?' }}</a>\\n                </h3>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"bg-content\\\"  *ngIf=\\\"! crud\\\" fxFlex fxFill fxLayoutAlign=\\\"center center\\\">\\n    <mat-spinner [diameter]=\\\"50\\\"></mat-spinner>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { CrudConfig } from 'src/app/interfaces/crud-config.interface';\nimport { ActivatedRoute } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { TendooService } from 'src/app/services/tendoo.service';\nimport { Observable, forkJoin } from 'rxjs';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n    selector: 'app-crud',\n    templateUrl: './crud.component.html',\n    styleUrls: ['./crud.component.css']\n})\nexport class CrudComponent implements OnInit {\n    crud: CrudConfig;\n    page: number;\n    namespace: string;\n    constructor(\n        private route: ActivatedRoute,\n        public tendoo: TendooService,\n        private snackbar: MatSnackBar\n    ) { }\n    \n    ngOnInit() {\n        \n        this.loadCrud();\n    }\n\n    loadCrud() {\n        this.route.paramMap.subscribe( route => {\n            this.namespace  =   route.get( 'namespace' );\n            this.page       =   +route.get( 'page' );\n\n            this.tendoo.crud.getConfig( this.namespace ).subscribe( (crud: CrudConfig ) => {\n                this.crud   =   crud;\n            }, error => {\n                this.snackbar\n                    .open( 'Unable to load the crud component.', 'TRY AGAIN' )\n                    .afterDismissed()\n                    .subscribe( observer => {\n                        this.loadCrud();\n                })\n            });\n        })\n    }\n    \n    /**\n     * \n    **/\n    sortData( data ) {\n        console.log( data );\n    }\n\n    /**\n     * \n    **/\n    deleteEntries( data ) {\n        console.log( data );\n    }\n\n    /**\n     * \n    **/\n    doAction( data ) {\n        console.log( data );\n    }\n\n    /**\n     * \n    **/\n    searh( data ) {\n        console.log( data );\n    }\n\n}\n","module.exports = \"#aside-nav-list {\\r\\n    padding: 0%;\\r\\n}\\r\\nmat-list-item div > div > i {\\r\\n    margin-right: 16px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0NBQ2Y7QUFDRDtJQUNJLG1CQUFtQjtDQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2FzaWRlLW5hdi1saXN0IHtcclxuICAgIHBhZGRpbmc6IDAlO1xyXG59XHJcbm1hdC1saXN0LWl0ZW0gZGl2ID4gZGl2ID4gaSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFill>\\r\\n    <div>\\r\\n        <mat-toolbar color=\\\"primary\\\" fxFlex fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <div [fxFlex]=\\\"logoWidth + 'px'\\\" fxLayout=\\\"row\\\" \\r\\n                fxLayoutAlign.xl=\\\"center center\\\"\\r\\n                fxLayoutAlign.lg=\\\"center center\\\"\\r\\n                >\\r\\n                <span *ngIf=\\\"showDefaultAside\\\">TRex Server</span>\\r\\n                <span *ngIf=\\\"! showDefaultAside\\\">TRex</span>\\r\\n            </div>\\r\\n            <div>\\r\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"profileMenu\\\">\\r\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">person</mat-icon>\\r\\n                </button>\\r\\n                <mat-menu #profileMenu=\\\"matMenu\\\">\\r\\n                    <button routerLink=\\\"/dashboard/profile\\\" mat-menu-item>Profile</button>\\r\\n                    <button routerLink=\\\"/auth/logout\\\" mat-menu-item>Logout</button>\\r\\n                </mat-menu>\\r\\n            </div>\\r\\n        </mat-toolbar>\\r\\n    </div>\\r\\n    \\r\\n    <div fxFlex fxLayout=\\\"row\\\">\\r\\n        <ng-container *ngIf=\\\"showDefaultAside\\\">\\r\\n            <div fxFlex=\\\"250px\\\"  fxLayout=\\\"column\\\" class=\\\"aside-menu\\\">\\r\\n                <div fxFlex>\\r\\n                    <app-menu-list [menus]=\\\"asideMenus\\\"></app-menu-list>\\r\\n                </div>    \\r\\n            </div>\\r\\n            <mat-divider [vertical]=\\\"true\\\"></mat-divider>\\r\\n        </ng-container>\\r\\n        <div fxFlex=\\\"auto\\\" fxLayout=\\\"column\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Link } from 'src/app/interfaces/link';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { MediaObserver } from '@angular/flex-layout';\r\nimport { Menu } from 'src/app/interfaces/menu';\r\nimport { Router } from '@angular/router';\r\nimport { CoreEvent } from 'src/app/classes/core-event.class';\r\nimport { CoreAction } from 'src/app/interfaces/core-action';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    asideMenus: Menu[]   =   [];\r\n    showDefaultAside    =   true;\r\n    logoWidth           =   0;\r\n    \r\n    constructor(\r\n        private tendoo: TendooService,\r\n        private snackbar: MatSnackBar,\r\n        private mediaObserver: MediaObserver,\r\n        private router: Router,\r\n        private coreEvent: CoreEvent\r\n    ) { \r\n        this.mediaObserver.media$.subscribe( media => {\r\n            switch( media.mqAlias ) {\r\n                case 'xs':\r\n                case 'sm':\r\n                    this.showDefaultAside   =   false;\r\n                    this.logoWidth          =   80;\r\n                break;\r\n                default:\r\n                    this.showDefaultAside   =   true;\r\n                    this.logoWidth          =   (250 - (16*2));\r\n                break;\r\n            }\r\n        });\r\n\r\n        this.coreEvent.subscribe( (event: CoreAction) => {\r\n            if ( [ 'module.enabled', 'module.deleted', 'module.disabled' ].includes( event.type ) ) {\r\n                this.ngOnInit();\r\n            }\r\n        })\r\n    }\r\n    \r\n    ngOnInit() {\r\n        this.tendoo.menus.getMenus( 'dashboard.aside' ).subscribe( menus => {\r\n            this.asideMenus  =   menus;\r\n        }, error => {\r\n            this.snackbar.open( 'Unable to load the dashboard aside bar' );\r\n        })\r\n    }\r\n\r\n    /**\r\n\t * Open/close current menu\r\n\t * @param object menu\r\n\t * @todo probably a bad pratice\r\n\t */\r\n\ttoggle( index:number ) {\r\n\t\tthis.asideMenus.forEach( ( menu, __index ) => {\r\n\t\t\tif ( __index === index ) {\r\n\t\t\t\tmenu.open \t=\tmenu.open ? !menu.open : true;\r\n\t\t\t} else {\r\n\t\t\t\tmenu.open \t=\tfalse;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Close All menus\r\n\t * @return void\r\n\t */\r\n\tcloseAll() {\r\n\t\tthis.asideMenus.forEach( menu => {\r\n\t\t\tmenu.open \t=\tfalse;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * GoTo\r\n\t * @return void\r\n\t */\r\n\tgoTo( menu:Link ) {\r\n\t\t// navigate to the menu path\r\n\t\tthis.router.navigateByUrl( <string>menu.href );\r\n\t}\r\n    \r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<div fxFill fxFlex=\\\"row\\\" class=\\\"bg-content\\\">\\r\\n    Hellow\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class DashboardHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbWVkaWFzLXVwbG9hZC9tZWRpYXMtdXBsb2FkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbWVkaWFzLXVwbG9hZC9tZWRpYXMtdXBsb2FkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\n    <!-- <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 2px; position: absolute\\\" *ngIf=\\\"tendoo.users.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar> -->\\n    <div fxLayout=\\\"row\\\" class=\\\"bg-content p-3 pb-0\\\">\\n        <div fxFlex>\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Media</h1>\\n            <small class=\\\"mat-title\\\">upload a new file</small>\\n        </div>\\n        <div fxFlex fxLayoutAlign=\\\"end start\\\">\\n            <div>\\n                <button mat-button [routerLink]=\\\"'/dashboard/medias'\\\">Back</button>\\n            </div>\\n        </div>    \\n    </div>\\n    <div fxFlex class=\\\"bg-content p-3\\\" fxFlexLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        <div fxLayout=\\\"column\\\" fxFlex.lg=\\\"40%\\\" fxFlex.md=\\\"40%\\\" fxFlex.xl=\\\"40%\\\" id=\\\"drag-zone\\\">\\n            <mat-card [fxFlex]=\\\"dragState === 'over' ? '100px': 'auto'\\\">\\n                <mat-card-content>\\n                    <h3>{{ dragMessage }}</h3>\\n                    <dropzone [config]=\\\"dropzoneConfig\\\" [message]=\\\"dragMessage\\\"></dropzone>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\nimport { TendooService } from 'src/app/services/tendoo.service';\nimport { LoaderService } from 'src/app/services/loader.service';\n\n\n\n@Component({\n    selector: 'app-medias-upload',\n    templateUrl: './medias-upload.component.html',\n    styleUrls: ['./medias-upload.component.css']\n})\nexport class MediasUploadComponent implements OnInit {\n    dragMessage;\n    dragState: string;\n    dropzoneConfig: DropzoneConfigInterface;\n\n    constructor(\n        public tendoo: TendooService\n    ) { }\n    \n    ngOnInit() {\n        this.dropzoneConfig     =   {\n            url: this.tendoo.medias.baseUrl + `tendoo/medias`,\n            maxFilesize: 50,\n            headers: LoaderService.headers\n        }\n\n        this.setDragState();\n    }\n    \n\n    setDragState( state?: string ) {\n        switch( state ) {\n            case 'over':\n                this.dragMessage    =   'Drop the file to upload it...';\n            break;\n            default:\n                this.dragMessage    =   'Click here if you want to select a file';\n            break;\n        }\n\n        this.dragState      =   state;\n    }\n\n    preventDefault( e ) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setDragState( 'over' );\n    }\n\n    handleDrop( event ) {\n        event.preventDefault();\n    }\n}\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.mat-grid-tile {\\r\\n    border: solid 1px #EFEFEF;\\r\\n    background: #EFEFEF;\\r\\n}\\r\\n\\r\\n.overlay {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    position: absolute;\\r\\n    background: rgba(51, 51, 51, 0.29);\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbWVkaWFzL21lZGlhcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtDQUNoQjs7QUFFRDtJQUNJLDBCQUEwQjtJQUMxQixvQkFBb0I7Q0FDdkI7O0FBRUQ7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixtQ0FBbUM7SUFDbkMsT0FBTztJQUNQLFFBQVE7Q0FDWCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL21lZGlhcy9tZWRpYXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLm1hdC1ncmlkLXRpbGUge1xyXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggI0VGRUZFRjtcclxuICAgIGJhY2tncm91bmQ6ICNFRkVGRUY7XHJcbn1cclxuXHJcbi5vdmVybGF5IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSg1MSwgNTEsIDUxLCAwLjI5KTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\n    <!-- <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 2px; position: absolute\\\" *ngIf=\\\"tendoo.users.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar> -->\\n    <div fxLayout=\\\"row\\\" fxFlex=\\\"0 0 auto\\\" class=\\\"bg-content p-3 pb-0\\\">\\n        <div fxFlex>\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Media</h1>\\n            <small class=\\\"mat-title\\\">display all the medias by type</small>\\n        </div>\\n        <div fxFlex fxLayoutAlign=\\\"end start\\\">\\n            <div>\\n                <button mat-button [routerLink]=\\\"'/dashboard/medias/upload'\\\">Upload</button>\\n            </div>\\n        </div>    \\n    </div>\\n    <div fxFlex *ngIf=\\\"medias.length === 0\\\" class=\\\"p-3 bg-content\\\" fxLayoutAlign=\\\"center center\\\">\\n        <span>It seems quite empty right here. <a routerLink=\\\"/dashboard/medias/upload\\\">Upload new content ?</a></span>\\n    </div>\\n    <div fxFlex *ngIf=\\\"medias.length > 0\\\" class=\\\"p-3 bg-content\\\">\\n        <mat-card class=\\\"p-0\\\">\\n            <mat-card-title class=\\\"p-1 mb-0\\\">\\n                <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                    <div fxLayoutAlign=\\\"start center\\\">\\n                        <button *ngIf=\\\"selectedMediasCount > 0\\\" (click)=\\\"reset()\\\" mat-icon-button color=\\\"warn\\\">\\n                            <mat-icon>arrow_back</mat-icon>\\n                        </button>\\n                        <span *ngIf=\\\"selectedMediasCount > 0\\\">\\n                            {{ selectedMediasCount }} <span>selected</span>\\n                        </span>\\n                    </div>\\n                    <div>\\n                        <button *ngIf=\\\"selectedMediasCount > 0\\\" (click)=\\\"deleteSelected()\\\" mat-icon-button color=\\\"warn\\\">\\n                            <mat-icon>delete</mat-icon>\\n                        </button>\\n                        <button (click)=\\\"selectAll()\\\" mat-icon-button color=\\\"primary\\\">\\n                            <mat-icon>check</mat-icon>\\n                        </button>\\n                    </div>\\n                </div>\\n            </mat-card-title>\\n            <mat-divider></mat-divider>\\n            <div class=\\\"p-2\\\">\\n                <mat-grid-list [cols]=\\\"gridCols\\\" gutterSize=\\\"1em\\\" rowHeight=\\\"140px\\\">\\n                    <mat-grid-tile\\n                        (mousedown)=\\\"handle( media )\\\"\\n                        (mouseup)=\\\"cancelBulkSelect()\\\"\\n                        (click)=\\\"openSingle( media )\\\"\\n                        *ngFor=\\\"let media of medias\\\"\\n                        [colspan]=\\\"1\\\"\\n                        [rowspan]=\\\"1\\\">\\n                        <div *ngIf=\\\"[ 'zip' ].indexOf( media.extension ) === -1\\\">\\n                            <img [src]=\\\"media.sizes.thumb\\\" [alt]=\\\"media.name\\\">\\n                        </div>\\n                        <div *ngIf=\\\"[ 'zip' ].indexOf( media.extension ) !== -1\\\">\\n                            <mat-icon>archive</mat-icon>\\n                        </div>\\n                        <div class=\\\"overlay\\\" fxLayoutAlign=\\\"end start\\\" *ngIf=\\\"media.selected\\\">\\n                            <i class=\\\"material-icons m-1\\\" style=\\\"color: white\\\">\\n                            check_circle\\n                            </i>\\n                        </div>\\n                    </mat-grid-tile>\\n                </mat-grid-list>\\n            </div>\\n        </mat-card>\\n    </div>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { TendooMediasService } from 'src/app/services/tendoo-medias.service';\nimport { Media } from 'src/app/interfaces/media';\nimport { forkJoin } from 'rxjs';\nimport { PaginatedResponse } from 'src/app/interfaces/paginated-response';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { ConfirmDialogObject } from 'src/app/interfaces/confirm-dialog';\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\nimport { MediaObserver } from '@angular/flex-layout';\n\n@Component({\n    selector: 'app-medias',\n    templateUrl: './medias.component.html',\n    styleUrls: ['./medias.component.css']\n})\nexport class MediasComponent implements OnInit {\n    medias: Media[]         =   [];\n    pagination: PaginatedResponse;\n    bulkSelectTimeout;\n    bulkSelectEnabled       =   false;\n    hasJustEnabled          =   false;\n    gridCols                =   5;\n\n    constructor(\n        private mediaService: TendooMediasService,\n        private dialog: MatDialog,\n        private snackbar: MatSnackBar,\n        private mediaObserver: MediaObserver\n    ) { }\n    \n    ngOnInit() {\n        this.loadMedias();\n        this.mediaObserver.media$.subscribe( result => {\n            console.log( result.mqAlias );\n            switch( result.mqAlias ) {\n                case 'xs':\n                    this.gridCols    =   2;\n                break;\n                case 'md':\n                    this.gridCols    =   4;\n                break;\n                case 'sm':\n                    this.gridCols    =   3;\n                break;\n                case 'lg':\n                    this.gridCols    =   6;\n                break;\n                case 'xl':\n                    this.gridCols    =   8;\n                break;\n            }\n        })\n    }\n\n    /**\n     * init by loading the medias\n     * @return void\n     */\n    loadMedias() {\n        forkJoin([\n            this.mediaService.getMedias()\n        ]).subscribe( ( results ) => {\n            this.pagination     =   (<PaginatedResponse>results[0]);\n            this.medias         =  (<Media[]>this.pagination.data).map( media => {\n                media.selected  =   false;\n                return media;\n            });\n        });\n    }\n    \n    /**\n     * watch bulk select or open media\n     * @param Media object to select\n     * @return void\n     */\n    handle( media:Media ) {\n        if ( ! this.bulkSelectEnabled ) {\n            this.bulkSelectTimeout  =   setTimeout( () => {\n                this.bulkSelectEnabled  =   true;\n                this.hasJustEnabled     =   true;\n                this.toggleSelected( media );\n            }, 700 );\n        } else {\n            this.hasJustEnabled     =   false;\n        }\n    }\n\n    reset() {\n        this.medias.forEach( media => media.selected = false );\n        this.bulkSelectEnabled  =   false;\n        this.hasJustEnabled     =   false;\n    }\n\n    cancelBulkSelect() {\n        console.log( 'has canceled' );\n        clearTimeout( this.bulkSelectTimeout );\n    }\n    \n    toggleSelected( media: Media ) {\n        media.selected  =   media.selected === undefined ? true : ! media.selected;\n\n        /**\n         * if no more medias are selected\n         * let's disable the selectedMediasCount\n         */\n        if ( this.selectedMediasCount === 0 ) {\n            this.bulkSelectEnabled      =    false;\n        }\n    }\n\n    /**\n     * Redirect to a single page where a media can \n     * be managed\n     * @param media object media\n     */\n    openSingle( media: Media ) {\n        if ( ! this.bulkSelectEnabled ) {\n            console.log( 'should redirect' );\n        } else if ( ! this.hasJustEnabled ) {\n            this.toggleSelected( media );\n        }\n    }\n\n    /**\n     * allow to select all displayed \n     * medias.\n     */\n    selectAll() {\n        this.medias.forEach( media => media.selected = true );\n        this.bulkSelectEnabled  =   true;\n        this.hasJustEnabled     =   false;\n    }\n\n    deleteSelected() {\n        this.dialog.open( ConfirmDialogComponent, {\n            id: 'delete.medias',\n            width: '50%',\n            height: '30%',\n            data: <ConfirmDialogObject>{\n                title: 'Confirm Your Action',\n                message: this.selectedMediasCount == 1 ?\n                    'Would you like to delete this image ?' : \n                    'Would you like to delete the # selected images ?'.replace( '#', this.selectedMediasCount.toString() ),\n                buttons: [\n                    {\n                        label: 'Yes',\n                        namespace: 'confirm',\n                        onClick: () => {\n                            this.confirmDeleteSelected();\n                        }\n                    }, {\n                        label: 'No',\n                        namespace: 'no',\n                        onClick: () => {\n                            this.dialog.getDialogById( 'delete.medias' ).close();\n                        }\n                    }\n                ]\n            }\n        })\n    }\n\n    confirmDeleteSelected() {\n        this.mediaService.deleteMedia( this.selectedMedias ).subscribe( (result: AsyncResponse ) => {\n            this.snackbar.open( result.message, 'OK', { duration : 3000 });\n            this.dialog.getDialogById( 'delete.medias' ).close();\n            this.loadMedias();\n        }, ( error ) => {\n            this.snackbar.open( 'An error has occured', null, { duration: 4000 });\n            this.dialog.getDialogById( 'delete.medias' ).close();\n        });\n    }\n\n    /**\n     * Computed property to a count of \n     * selected medias.\n     * @return number\n     */\n    get selectedMediasCount() {\n        return this.selectedMedias.length;\n    }\n\n    /**\n     * Computed property to get all\n     * selected medias\n     * @return Media[]\n     */\n    get selectedMedias() {\n        return this.medias.filter( media => media.selected );\n    }\n}\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbW9kdWxlcy11cGxvYWQvbW9kdWxlcy11cGxvYWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7Q0FDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9tb2R1bGVzLXVwbG9hZC9tb2R1bGVzLXVwbG9hZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\">\\r\\n    <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 2px; position: relative;margin-bottom: -2px\\\" *ngIf=\\\"tendoo.modules.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n    <div fxLayout=\\\"row\\\" class=\\\"bg-content p-3\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Upload a module</h1>\\r\\n            <span class=\\\"mat-headline\\\">improve or adjust features.</span>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\r\\n            <button routerLink=\\\"/dashboard/modules\\\" mat-button color=\\\"warn\\\">List of modules</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"p-3 pt-0 bg-content\\\" fxFlex>\\r\\n        <mat-card>\\r\\n            <mat-card-title>Upload a file</mat-card-title>\\r\\n            <mat-card-content>\\r\\n                <p>choose the file you would like to upload on Tendoo CMS</p>\\r\\n                <input (change)=\\\"handleFileInput($event.target.files)\\\" type=\\\"file\\\" name=\\\"\\\" id=\\\"\\\">\\r\\n            </mat-card-content>\\r\\n            <mat-card-actions>\\r\\n                <button [disabled]=\\\"tendoo.modules.isLoading\\\" (click)=\\\"upload()\\\" mat-button color=\\\"primary\\\">Upload</button>\\r\\n            </mat-card-actions>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\r\nimport { ConfirmDialogObject } from 'src/app/interfaces/confirm-dialog';\r\nimport { ResponsiveService } from 'src/app/services/responsive.service';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-modules-upload',\r\n    templateUrl: './modules-upload.component.html',\r\n    styleUrls: ['./modules-upload.component.css']\r\n})\r\nexport class ModulesUploadComponent implements OnInit {\r\n    file: FileList;\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private responsive: ResponsiveService,\r\n        private snackbar: MatSnackBar,\r\n        public tendoo: TendooService,\r\n        private router: Router,\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n    }\r\n\r\n    handleFileInput( file ) {\r\n        this.file   =   file;\r\n    }\r\n\r\n    /**\r\n     * Trigger when the user want's to upload \r\n     * a module\r\n     * @return void\r\n     */\r\n    upload() {\r\n        if ( this.file === undefined || this.file.length === 0 ) {\r\n            return this.snackbar.open( 'You need to select a file before uploading.', null, {\r\n                duration: 3000\r\n            });\r\n        }\r\n\r\n        this.dialog.open( ConfirmDialogComponent, {\r\n            id      :   'upload.module',\r\n            data \t:\t<ConfirmDialogObject>{\r\n                title \t\t    :\t'Would you like to confirm ?',\r\n\t\t\t\tmessage \t:\t'Would you like to upload this module.',\r\n\t\t\t\tbuttons \t:\t[{\r\n\t\t\t\t\tlabel \t:\t'Ok',\r\n\t\t\t\t\tonClick \t: () => {\r\n\t\t\t\t\t\tthis.dialog\r\n\t\t\t\t\t\t\t.getDialogById( 'upload.module' )\r\n                            .close();    \r\n\r\n                        this.handleUpload();\r\n\t\t\t\t\t}\r\n\t\t\t\t},{\r\n\t\t\t\t\tlabel \t:\t'Cancel',\r\n\t\t\t\t\tcolor \t:\t'warn',\r\n\t\t\t\t\tonClick \t: () => {\r\n\t\t\t\t\t\tthis.dialog\r\n\t\t\t\t\t\t\t.getDialogById( 'upload.module' )\r\n\t\t\t\t\t\t\t.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n            }, \r\n            height \t:\tthis.responsive.define({\r\n\t\t\t\tlg \t: \t'60%',\r\n\t\t\t\txl  : \t'60%',\r\n\t\t\t\tmd \t: \t'70%',\r\n\t\t\t\tsm \t:\t'70%',\r\n\t\t\t\txs \t:\t'70%'\r\n\t\t\t}),\r\n\t\t\twidth \t:\tthis.responsive.define({\r\n\t\t\t\tlg \t: \t'60%',\r\n\t\t\t\txl  : \t'60%',\r\n\t\t\t\tmd \t: \t'70%',\r\n\t\t\t\tsm \t:\t'70%',\r\n\t\t\t\txs \t:\t'70%'\r\n\t\t\t}),\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Handled uploaded file\r\n     * @return void\r\n     */\r\n    handleUpload() {\r\n        this.tendoo.modules.uploadFile( this.file.item(0) ).subscribe( (result:AsyncResponse) => {\r\n            /**\r\n             * check if a module require a migration\r\n             */\r\n            if ( result.action === 'check-migration' ) {\r\n\r\n            }\r\n\r\n            this.snackbar.open( result.message, null, {\r\n                duration: 3000\r\n            });\r\n\r\n            this.router.navigateByUrl( 'dashboard/modules' );\r\n\r\n        }, ( result: HttpErrorResponse ) => {\r\n            /**\r\n             * An erru ash occured, let's\r\n             * display what happened\r\n             */\r\n            this.snackbar.open( result.error.message, null, {\r\n                duration: 5000\r\n            });\r\n        });\r\n    }\r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbW9kdWxlcy9tb2R1bGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbW9kdWxlcy9tb2R1bGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\">\\r\\n    <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 2px; position: relative;margin-bottom: -2px\\\" *ngIf=\\\"tendoo.modules.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n    <div fxLayout=\\\"row\\\" class=\\\"bg-content p-3\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-h1 mb-0\\\">Modules</h1>\\r\\n            <span>Display and manage all available modules</span>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\r\\n            <button routerLink=\\\"/dashboard/modules/upload\\\" mat-button color=\\\"warn\\\">Upload a module</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"p-3 pt-0 bg-content\\\" fxFlex fxLayoutGap=\\\"3em\\\">\\r\\n        <div \\r\\n            style=\\\"height:150px\\\"\\r\\n            *ngFor=\\\"let module of modules\\\"\\r\\n            fxFlex.xs=\\\"100%\\\" \\r\\n            fxFlex.sm=\\\"50%\\\" \\r\\n            fxFlex.md=\\\"50%\\\" \\r\\n            fxFlex.lg=\\\"25%\\\" \\r\\n            fxFlex.xl=\\\"20%\\\">\\r\\n            <mat-card>\\r\\n                <mat-card-title>\\r\\n                    <h2 class=\\\"mat-h2\\\">{{ module.name }}</h2>\\r\\n                </mat-card-title>\\r\\n                <mat-card-content style=\\\"height: 50px;\\\">{{ module.description }}</mat-card-content>\\r\\n                <mat-divider></mat-divider>\\r\\n                <mat-card-actions>\\r\\n                    <div fxFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxFlex=\\\"0 0 auto\\\">\\r\\n                        <button class=\\\"m-0\\\" [disabled]=\\\"tendoo.modules.isLoading\\\" (click)=\\\"loadModules()\\\" mat-button color=\\\"primary\\\">Details</button>\\r\\n                        <button class=\\\"m-0\\\" [disabled]=\\\"tendoo.modules.isLoading\\\" *ngIf=\\\"module.enabled\\\" (click)=\\\"setStatus( module, 'disable' )\\\"  mat-button color=\\\"primary\\\">Disable</button>\\r\\n                        <button class=\\\"m-0\\\" [disabled]=\\\"tendoo.modules.isLoading\\\" *ngIf=\\\"! module.enabled\\\" (click)=\\\"setStatus( module, 'enable' )\\\"  mat-button color=\\\"accent\\\">Enable</button>\\r\\n                    </div>\\r\\n                </mat-card-actions>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"modules.length === 0\\\" fxFlex fxFill fxLayoutAlign=\\\"center center\\\">\\r\\n            <span>No module has been added yet. <a routerLink=\\\"/dashboard/modules/upload\\\"   >Upload a module ?</a></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { MatDialog, MatSnackBar } from '@angular/material';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nimport { ConfirmDialogObject } from 'src/app/interfaces/confirm-dialog';\r\nimport { ResponsiveService } from 'src/app/services/responsive.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { TendooModule } from 'src/app/interfaces/module.interface';\r\nimport { CoreEvent } from 'src/app/classes/core-event.class';\r\nimport { MigrationDialogComponent } from '../../migration-dialog/migration-dialog.component';\r\n\r\n@Component({\r\n    selector: 'app-modules',\r\n    templateUrl: './modules.component.html',\r\n    styleUrls: ['./modules.component.css']\r\n})\r\nexport class ModulesComponent implements OnInit {\r\n    modules: any[]      =   [];\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        private snackbar: MatSnackBar,\r\n        public dialog: MatDialog,\r\n        private responsive: ResponsiveService,\r\n        private coreEvent: CoreEvent\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.loadModules();\r\n    }\r\n    \r\n    loadModules() {\r\n        this.tendoo.modules.getAll().subscribe( (modules:any[]) => {\r\n            this.modules    =   Object.values( modules );\r\n        })\r\n    }\r\n\r\n    private __deleteModule( module ) {\r\n        this.tendoo.modules.deleteModule( module.namespace ).subscribe( (result:AsyncResponse ) => {\r\n            this.snackbar.open( result.message );\r\n\r\n            /**\r\n             * emit a new event when a module\r\n             * is deleted\r\n             */\r\n            this.coreEvent.emit({\r\n                type: 'module.deleted',\r\n                data: module\r\n            });\r\n\r\n            this.loadModules();\r\n        }, ( result:HttpErrorResponse ) => {\r\n            console.log( result );\r\n        })\r\n    }\r\n\r\n    /**\r\n     * delete a module\r\n     * @return void\r\n     */\r\n    delete( module ) {\r\n        this.dialog.open( ConfirmDialogComponent, {\r\n            id: 'delete.module',\r\n            data: <ConfirmDialogObject>{\r\n                title       :   'Confirm Your Action',\r\n                message     :   'Would you like to delete this module ? This action can\\'t be cancelled.',\r\n                buttons \t:\t[{\r\n\t\t\t\t\tlabel \t:\t'Ok',\r\n\t\t\t\t\tonClick \t: () => {\r\n\t\t\t\t\t\tthis.dialog\r\n\t\t\t\t\t\t\t.getDialogById( 'delete.module' )\r\n                            .close(); \r\n                        this.__deleteModule( module );\r\n\t\t\t\t\t}\r\n\t\t\t\t},{\r\n\t\t\t\t\tlabel \t:\t'Cancel',\r\n\t\t\t\t\tcolor \t:\t'warn',\r\n\t\t\t\t\tonClick \t: () => {\r\n\t\t\t\t\t\tthis.dialog\r\n\t\t\t\t\t\t\t.getDialogById( 'delete.module' )\r\n\t\t\t\t\t\t\t.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n            },\r\n            height \t:\tthis.responsive.define({\r\n\t\t\t\tlg \t: \t'30%',\r\n\t\t\t\txl  : \t'30%',\r\n\t\t\t\tmd \t: \t'40%',\r\n\t\t\t\tsm \t:\t'60%',\r\n\t\t\t\txs \t:\t'80%'\r\n\t\t\t}),\r\n\t\t\twidth \t:\tthis.responsive.define({\r\n\t\t\t\tlg \t: \t'40%',\r\n\t\t\t\txl  : \t'40%',\r\n\t\t\t\tmd \t: \t'40%',\r\n\t\t\t\tsm \t:\t'70%',\r\n\t\t\t\txs \t:\t'95%'\r\n\t\t\t}),\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Change a module\r\n     * status\r\n     * @return void\r\n     */\r\n    setStatus( module, status: string ) {\r\n        switch( status ) {\r\n            case 'enable': \r\n                this.__proceedEnableModule( module );\r\n            break;\r\n            case 'disable':\r\n                this.__proceedDisableModule( module );\r\n            break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proceed Enable Module\r\n     * @return void\r\n     */\r\n    private __proceedEnableModule( module ) {\r\n        this.dialog.open( ConfirmDialogComponent, {\r\n            data: <ConfirmDialogObject>{\r\n                title: 'Please confirm your action',\r\n                message: 'Would you like to enable this module ?',\r\n                buttons: [\r\n                    {\r\n                        label: 'Yes', \r\n                        namespace: 'yes',\r\n                        onClick: () => {\r\n                            this.__enableModule( module );\r\n                        }\r\n                    }, {\r\n                        label: 'No', \r\n                        namespace: 'no',\r\n                        onClick: () => {\r\n                            this.dialog\r\n                                .getDialogById( 'confirm-enable-module' )\r\n                                .close();\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            id: 'confirm-enable-module'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Proceed Disable Module\r\n     * @return void\r\n     */\r\n    private __proceedDisableModule( module ) {\r\n        this.dialog.open( ConfirmDialogComponent, {\r\n            data: <ConfirmDialogObject>{\r\n                title: 'Please confirm your action',\r\n                message: 'Would you like to disable this module ?',\r\n                buttons: [\r\n                    {\r\n                        label: 'Yes', \r\n                        namespace: 'yes',\r\n                        onClick: () => {\r\n                            this.__disableModule( module );\r\n                        }\r\n                    }, {\r\n                        label: 'No', \r\n                        namespace: 'no',\r\n                        onClick: () => {\r\n                            this.dialog\r\n                                .getDialogById( 'disable-enable-module' )\r\n                                .close();\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            id: 'disable-enable-module'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Enable module after\r\n     * the action has been confirmed\r\n     * @return void\r\n     */\r\n    private __enableModule( module:TendooModule )\r\n    {\r\n        this.tendoo.modules.enable( module.namespace ).subscribe( response => {\r\n\r\n            /**\r\n             * emit a new event when a module\r\n             * is enabled\r\n             */\r\n            this.coreEvent.emit({\r\n                type: 'module.enabled',\r\n                data: module\r\n            });\r\n\r\n            this.loadModules();\r\n            this.dialog\r\n                .getDialogById( 'confirm-enable-module' )\r\n                .close();\r\n        }, ( result: HttpErrorResponse ) => {\r\n            console.log( result );\r\n            if ( result.error.class === 'Tendoo/Core/Exceptions/ModuleMigrationRequiredException' ) {\r\n                this.dialog.open( MigrationDialogComponent, {\r\n                    id: 'migration-dialog',\r\n                    data: {\r\n                        migration: result.error.migration\r\n                    },\r\n                    closeOnNavigation: false,\r\n                    disableClose: true,\r\n                })\r\n            } else {\r\n                this.snackbar.open( result.error.message, null, {\r\n                    duration: 4000\r\n                });\r\n            }\r\n            this.dialog\r\n                .getDialogById( 'confirm-enable-module' )\r\n                .close();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Enable module after\r\n     * the action has been confirmed\r\n     * @return void\r\n     */\r\n    private __disableModule( module )\r\n    {\r\n        this.tendoo.modules.disable( module.namespace ).subscribe( response => {\r\n\r\n            /**\r\n             * emit a new event when a module\r\n             * is disabled\r\n             */\r\n            this.coreEvent.emit({\r\n                type: 'module.disabled',\r\n                data: module\r\n            });\r\n\r\n            this.loadModules();\r\n            this.dialog\r\n                .getDialogById( 'disable-enable-module' )\r\n                .close();\r\n        }, ( result: HttpErrorResponse ) => {\r\n            this.snackbar.open( result.error.message, null, {\r\n                duration: 4000\r\n            });\r\n            this.dialog\r\n                .getDialogById( 'disable-enable-module' )\r\n                .close();\r\n        })\r\n    }\r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtDQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<div fxFlex fxFill fxLayoutAlign=\\\"center center\\\" class=\\\"bg-content\\\">\\n    <div fxFlex=\\\"400px\\\" class=\\\"text-center\\\">\\n        <h1>You're Lost !</h1>\\n        <p>The page you're looking for doesn't exists or is not handled by the system. Please call the police or the FBI, the earth is in danger.</p>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".avatar-image {\\r\\n    width: 100px;\\r\\n    border-radius: 50px;\\r\\n}\\r\\n.profile-container {\\r\\n    position: relative;\\r\\n    top: -53px;\\r\\n}\\r\\n.profile-background {\\r\\n    background: #EEE;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isb0JBQW9CO0NBQ3ZCO0FBQ0Q7SUFDSSxtQkFBbUI7SUFDbkIsV0FBVztDQUNkO0FBQ0Q7SUFDSSxpQkFBaUI7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdmF0YXItaW1hZ2Uge1xyXG4gICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcclxufVxyXG4ucHJvZmlsZS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAtNTNweDtcclxufVxyXG4ucHJvZmlsZS1iYWNrZ3JvdW5kIHtcclxuICAgIGJhY2tncm91bmQ6ICNFRUU7XHJcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\r\\n    <div fxFlex=\\\"200px\\\" fxLayout=\\\"row\\\" class=\\\"bg-primary p-3\\\">\\r\\n        <div fxFlex fxLayout=\\\"row\\\">\\r\\n            <div style=\\\"margin-right: 20px\\\">\\r\\n                <img class=\\\"avatar-image\\\" src=\\\"http://laravel-5703.go/tendoo/assets/images/avatar.png\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            <div>\\r\\n                <h1 class=\\\"mat-display-1 mb-0\\\">{{ auth.getUser().username }}</h1>\\r\\n                <span class=\\\"mat-title\\\">{{ auth.getUser().role.name }}</span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxFlex fxLayout=\\\"row\\\" class=\\\"profile-background\\\" fxFill fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"97%\\\" class=\\\"profile-container\\\">\\r\\n            <mat-card class=\\\"p-0\\\" *ngIf=\\\"tabs\\\">\\r\\n                <mat-card-title class=\\\"p-1 mb-0\\\">Profile Settings</mat-card-title>\\r\\n                <mat-divider></mat-divider>\\r\\n                <mat-card-content class=\\\"p-0\\\">\\r\\n                    <mat-tab-group (selectedIndexChange)=\\\"setTabActive($event)\\\">\\r\\n                        <mat-tab *ngFor=\\\"let tab of tabs\\\" [label]=\\\"tab.label\\\">\\r\\n                            <form [formGroup]=\\\"tab.form\\\">\\r\\n                                <div class=\\\"p-2\\\">\\r\\n                                    <app-fields *ngFor=\\\"let field of tab.fields\\\" [field]=\\\"field\\\" [group]=\\\"tab.form\\\"></app-fields>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </mat-tab>\\r\\n                    </mat-tab-group>\\r\\n                </mat-card-content>\\r\\n                <mat-divider></mat-divider>\\r\\n                <mat-card-actions class=\\\"p-1 m-0\\\">\\r\\n                    <button mat-button (click)=\\\"saveTabSettings( activeTab )\\\" color=\\\"primary\\\">Save</button>\\r\\n                </mat-card-actions>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { TendooAuthService } from 'src/app/services/tendoo-auth.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Tab } from 'src/app/interfaces/tab';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\n\r\n@Component({\r\n    selector: 'app-profile',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.css'],\r\n    host: {\r\n        style: `height: 100%`\r\n    }\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n    auth: TendooAuthService;\r\n    tabs: Tab[];\r\n    profileForm: FormGroup;\r\n\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        private snackbar: MatSnackBar\r\n    ) { \r\n        this.auth   =   this.tendoo.auth;\r\n    }\r\n    \r\n    ngOnInit() {\r\n        forkJoin(\r\n            this.tendoo.tabs.getTabs( 'dashboard.profile' )\r\n        ).subscribe( results => {\r\n            this.tabs   =   (<Tab[]>results[0]);\r\n            this.tabs.forEach( (tab, index ) => {\r\n                index === 0 ? tab.active = true : tab.active = false;\r\n                const fields    =   ValidationGenerator.buildFormControls( tab.fields );\r\n                tab.form        =   new FormGroup( fields );\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * set a tab as active\r\n     * @param tab Tab Object\r\n     * @return void\r\n     */\r\n    setTabActive( index ) {\r\n        this.tabs.forEach( (_tab, _index ) => {\r\n            _tab.active         =   false;\r\n            if ( index === _index ) {\r\n                _tab.active     =   true;\r\n            } \r\n        });\r\n    }\r\n\r\n    saveTabSettings( tab: Tab ) {\r\n        ValidationGenerator.touchAllFields( tab.form );\r\n\r\n        if ( ! tab.form.valid ) {\r\n            return this.snackbar.open( 'Unable to proceed the form is not valid.', 'OK', {\r\n                duration: 3000\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Save the settings to the database\r\n         */\r\n        ValidationGenerator.deactivateFields( tab.fields );\r\n\r\n        this.tendoo.forms\r\n            .saveForm( \r\n                this.activeTab.namespace, \r\n                ValidationGenerator.noNullValue( tab.form ) \r\n            ).subscribe( (response: AsyncResponse ) => {\r\n\r\n            /**\r\n             * Enable back field and show success\r\n             * message\r\n             */\r\n            ValidationGenerator.enableFields( tab.fields );\r\n            this.snackbar.open( response.message, 'OK', {\r\n                duration: 3000\r\n            });\r\n\r\n        }, ( result:HttpErrorResponse ) => {\r\n            ValidationGenerator.enableFields( tab.fields );\r\n            ValidationGenerator.throwFieldsError( tab.form, tab.fields, result.error.errors );\r\n            this.snackbar.open( result.error.message, 'OK', {\r\n                duration: 3000\r\n            });\r\n        })\r\n    }\r\n    \r\n    /**\r\n     * get active tab\r\n     * @return object;\r\n     */\r\n    get activeTab() {\r\n        return this.tabs.filter( tab => tab.active )[0];\r\n    }\r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7Q0FDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\r\\n    <!-- <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 2px; position: absolute\\\" *ngIf=\\\"tendoo.users.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar> -->\\r\\n    <div fxLayout=\\\"row\\\" fxFlex=\\\"0 0 auto\\\" class=\\\"bg-content p-3 pb-0\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Settings</h1>\\r\\n            <span class=\\\"mat-title\\\">configure how Tendoo CMS should be used</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"p-3 bg-content\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"column\\\">\\r\\n        <mat-card class=\\\"p-0\\\">\\r\\n            <mat-card-content>\\r\\n                <mat-tab-group (selectedIndexChange)=\\\"setTabActive($event)\\\">\\r\\n                    <mat-tab  *ngFor=\\\"let tab of tabs\\\" [label]=\\\"tab.label\\\">\\r\\n                        <div class=\\\"p-2\\\">\\r\\n                            <form [formGroup]=\\\"tab.form\\\">\\r\\n                                <app-fields *ngFor=\\\"let field of tab.fields\\\" [field]=\\\"field\\\" [group]=\\\"tab.form\\\"></app-fields>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </mat-tab>\\r\\n                </mat-tab-group>\\r\\n            </mat-card-content>\\r\\n            <mat-divider></mat-divider>\\r\\n            <mat-card-actions class=\\\"p-1 m-0\\\">\\r\\n                <button [disabled]=\\\"tendoo.forms.isLoading\\\" mat-button (click)=\\\"saveSettings( activeTab )\\\" color=\\\"primary\\\">Save</button>\\r\\n            </mat-card-actions>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { Tab } from 'src/app/interfaces/tab';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\n\r\n@Component({\r\n    selector: 'app-settings',\r\n    templateUrl: './settings.component.html',\r\n    styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n    tabs: Tab[];\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        public snackbar: MatSnackBar\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.tendoo.tabs.getTabs( 'dashboard.settings' ).subscribe( tabs => {\r\n            tabs.forEach( ( tab: Tab, index ) => {\r\n                index === 0 ? tab.active    =   true : tab.active = false;\r\n                const fields    =   ValidationGenerator.buildFormControls( tab.fields );\r\n                tab.form        =   new FormGroup( fields );\r\n            });\r\n            this.tabs   =   tabs;\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Save the current tab settings\r\n     * @return any\r\n     */\r\n    saveSettings() {\r\n        console.log( this.activeTab );\r\n\r\n        ValidationGenerator.touchAllFields( this.activeTab.form );\r\n\r\n        if ( ! this.activeTab.form.valid ) {\r\n            return this.snackbar.open( 'Unable to proceed, the form is invalid', 'OK', {\r\n                duration: 3000\r\n            });\r\n        }\r\n\r\n        /**\r\n         * let's save the form \r\n         * to the database\r\n         */\r\n        ValidationGenerator.deactivateFields( this.activeTab.fields );\r\n        this.tendoo.forms\r\n            .saveForm( this.activeTab.namespace, this.activeTab.form.value )\r\n            .subscribe( (result: AsyncResponse ) => {\r\n                ValidationGenerator.enableFields( this.activeTab.fields );\r\n                this.snackbar.open( result.message, 'OK', {\r\n                    duration: 3000\r\n                });\r\n            }, (result: HttpErrorResponse) => {\r\n                ValidationGenerator.enableFields( this.activeTab.fields );\r\n                this.snackbar.open( result.error.message );\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * set a tab as active\r\n     * @param $event\r\n     */\r\n    setTabActive( index ) {\r\n        this.tabs.forEach( (_tab, _index ) => {\r\n            _tab.active         =   false;\r\n            if ( index === _index ) {\r\n                _tab.active     =   true;\r\n            } \r\n        });\r\n\r\n        console.log( this.activeTab );\r\n    }\r\n \r\n    /**\r\n     * get the current active tab\r\n     */\r\n    get activeTab() {\r\n        return this.tabs.filter( tab => tab.active )[0];\r\n    }\r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvdXNlcnMtY3JlYXRlL3VzZXJzLWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtDQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3VzZXJzLWNyZWF0ZS91c2Vycy1jcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"bg-content\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\r\\n    <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 2px; position: absolute\\\" *ngIf=\\\"tendoo.users.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n    <div fxLayout=\\\"row\\\" class=\\\"p-3 pb-0\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Users</h1>\\r\\n            <span class=\\\"mat-title\\\">create new users</span>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\r\\n            <button routerLink=\\\"/dashboard/users\\\" mat-button color=\\\"warn\\\">Back to users</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"p-3\\\" fxLayout=\\\"row\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"column\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-title>\\r\\n                Create a new user\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n                <form [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\r\\n                    <app-fields *ngFor=\\\"let field of fields\\\" [field]=\\\"field\\\" [group]=\\\"form\\\"></app-fields>\\r\\n                </form>\\r\\n            </mat-card-content>\\r\\n            <mat-divider></mat-divider>\\r\\n            <mat-card-actions>\\r\\n                <button [disabled]=\\\"tendoo.isLoading\\\" mat-button (click)=\\\"submit()\\\" color=\\\"primary\\\">Submit</button>\\r\\n            </mat-card-actions>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { forkJoin } from 'rxjs';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormUrl } from 'src/app/interfaces/form-url';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-users-create',\r\n    templateUrl: './users-create.component.html',\r\n    styleUrls: ['./users-create.component.css']\r\n})\r\nexport class UsersCreateComponent implements OnInit {\r\n    \r\n    fields: Field[]     =   [];\r\n    form: FormGroup;\r\n    formConfig: {[key: string]: any};\r\n\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        public snackbar: MatSnackBar,\r\n        private router: Router\r\n    ) {}\r\n    \r\n    ngOnInit() {\r\n        forkJoin(\r\n            this.tendoo.forms.getForm( 'dashboard.users.create' ),\r\n        ).subscribe( forkResult => {\r\n            this.fields         =   <Field[]>forkResult[0][ 'fields' ];\r\n            this.formConfig     =   <FormUrl>forkResult[0][ 'url' ]\r\n            const fields        =   ValidationGenerator.buildFormControls( this.fields );\r\n            this.form           =   new FormGroup( fields );\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Submit the current form\r\n     * @return void\r\n     */\r\n    submit() {\r\n        ValidationGenerator.touchAllFields( this.form );\r\n\r\n        if ( ! this.form.valid ) {\r\n            this.snackbar.open( 'The form has some error(s). Please check the form and try again.' );\r\n        }\r\n\r\n        ValidationGenerator.deactivateFields( this.fields );\r\n\r\n        this.tendoo.users.create( this.form.value ).subscribe( (result:AsyncResponse ) => {\r\n            /**\r\n             * enable back fields since they might be edited\r\n             */\r\n            ValidationGenerator.enableFields( this.fields );\r\n\r\n            this.snackbar.open( result.message, 'OK', {\r\n                duration: 4000\r\n            });\r\n            this.router.navigateByUrl( 'dashboard/users' );\r\n\r\n        }, ( result: HttpErrorResponse ) => {\r\n            /**\r\n             * enable back fields since they might be edited\r\n             */\r\n            ValidationGenerator.enableFields( this.fields );\r\n\r\n            this.snackbar.open( result.error.message, 'OK', {\r\n                duration: 4000\r\n            });\r\n\r\n            /**\r\n             * make sure to hightlight \r\n             * the fields which has a problem\r\n             */\r\n            const errors     =   result.error.errors;\r\n            for( let error in errors ) {\r\n                this.form.get( error ).setErrors({ error: true });\r\n                this.fields.forEach( field => {\r\n                    if ( field.name === error ) {\r\n                        field.errors    =   errors[ field.name ];\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3VzZXJzLWVkaXQvdXNlcnMtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"bg-content\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\r\\n    <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 2px; position: absolute\\\" *ngIf=\\\"tendoo.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n    <div fxLayout=\\\"row\\\" class=\\\"p-3 pb-0\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Users</h1>\\r\\n            <span class=\\\"mat-title\\\">create new users</span>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\r\\n            <button routerLink=\\\"/dashboard/users\\\" mat-button color=\\\"warn\\\">Back to users</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"p-2\\\" fxLayout=\\\"row\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\">\\r\\n        <mat-card fxFlex>\\r\\n            <mat-card-title>\\r\\n                Edit a user\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n                <form [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\r\\n                    <app-fields *ngFor=\\\"let field of fields\\\" [field]=\\\"field\\\" [group]=\\\"form\\\"></app-fields>\\r\\n                </form>\\r\\n            </mat-card-content>\\r\\n            <mat-divider></mat-divider>\\r\\n            <mat-card-actions>\\r\\n                <button [disabled]=\\\"tendoo.users.isLoading\\\" mat-button (click)=\\\"submit()\\\" color=\\\"primary\\\">Update</button>\\r\\n                <button [disabled]=\\\"tendoo.users.isLoading\\\" mat-button (click)=\\\"submit( true )\\\" color=\\\"primary\\\">Update & Return</button>\\r\\n            </mat-card-actions>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { FormUrl } from 'src/app/interfaces/form-url';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-users-edit',\r\n    templateUrl: './users-edit.component.html',\r\n    styleUrls: ['./users-edit.component.css']\r\n})\r\nexport class UsersEditComponent implements OnInit {\r\n    \r\n    id: number;\r\n    fields: Field[]     =   [];\r\n    formConfig: FormUrl;   \r\n    form: FormGroup;\r\n\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        private activeRoute: ActivatedRoute,\r\n        private snackbar: MatSnackBar,\r\n        private route: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.id    =   +this.activeRoute.snapshot.paramMap.get( 'id' );\r\n        forkJoin(\r\n            this.tendoo.forms.getForm( 'dashboard.users.edit', this.id ),\r\n        ).subscribe( forkResult => {\r\n            this.fields         =   <Field[]>forkResult[0][ 'fields' ];\r\n            this.formConfig     =   <FormUrl>forkResult[0][ 'url' ]\r\n            const fields        =   ValidationGenerator.buildFormControls( this.fields );\r\n            this.form           =   new FormGroup( fields );\r\n        })\r\n    }\r\n    \r\n    submit( shouldReturn: boolean ) {\r\n        ValidationGenerator.touchAllFields( this.form );\r\n\r\n        if ( ! this.form.valid ) {\r\n            this.snackbar.open( 'The form has some errors, please check it and try again ! ', 'OK', {\r\n                duration: 4000\r\n            });\r\n        }\r\n\r\n        this.tendoo.users.edit( this.id, this.form.value ).subscribe( (result:AsyncResponse) => {\r\n            this.snackbar.open( result.message, 'OK', {\r\n                duration: 3000\r\n            });\r\n\r\n            /**\r\n             * if the user has requested, let's take him back where he has been\r\n             */\r\n            if ( shouldReturn ) {\r\n                this.route.navigateByUrl( '/dashboard/users' );\r\n            }\r\n        }, ( response: HttpErrorResponse ) => {\r\n            this.snackbar.open( response.error.message );\r\n\r\n            /**\r\n             * make sure to hightlight \r\n             * the fields which has a problem\r\n             */\r\n            const errors     =   response.error.errors;\r\n            for( let error in errors ) {\r\n                this.form.get( error ).setErrors({ error: true });\r\n                this.fields.forEach( field => {\r\n                    if ( field.name === error ) {\r\n                        field.errors    =   errors[ field.name ];\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n#search-field {\\r\\n    height: 35px;\\r\\n    border-radius: 5px;\\r\\n    border: solid 1px #DDD;\\r\\n    background: #FFF;\\r\\n    width: 100%;\\r\\n    font-size: 18px;\\r\\n    padding: 0 10px;\\r\\n    margin-right: 10px;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7Q0FDaEI7QUFDRDtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsa0JBQWtCO0NBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG4jc2VhcmNoLWZpZWxkIHtcclxuICAgIGhlaWdodDogMzVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJvcmRlcjogc29saWQgMXB4ICNEREQ7XHJcbiAgICBiYWNrZ3JvdW5kOiAjRkZGO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBwYWRkaW5nOiAwIDEwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\r\\n    <div fxLayout=\\\"row\\\" class=\\\"bg-content p-3 pb-0\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Users</h1>\\r\\n            <span class=\\\"mat-title\\\">Displays and manage all registered users</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"p-3 bg-content\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"column\\\">\\r\\n        <mat-card class=\\\"p-0\\\">\\r\\n            <mat-card-title class=\\\"p-2 mb-0\\\" *ngIf=\\\"searchEnabled\\\" color=\\\"warn\\\">\\r\\n                <div fxFlex=\\\"100%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <button (click)=\\\"toggleSearch( false )\\\" mat-icon-button>\\r\\n                        <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                    <input id=\\\"search-field\\\" [placeholder]=\\\"tableConfig.search.placeholder\\\" type=\\\"text\\\" #searchField>\\r\\n                    <button (click)=\\\"search( searchField )\\\" mat-icon-button>\\r\\n                        <mat-icon>search</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </mat-card-title>\\r\\n            <mat-card-title class=\\\"p-2 mb-0\\\" *ngIf=\\\"! searchEnabled\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                <div fxFlex=\\\"100%\\\" *ngIf=\\\"! hasSelectedEntries\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <button mat-icon-button routerLink=\\\"/dashboard/users/create\\\" mat-button color=\\\"primary\\\">\\r\\n                        <mat-icon>add</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button (click)=\\\"toggleSearch( true )\\\">\\r\\n                        <mat-icon>search</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100%\\\" *ngIf=\\\"hasSelectedEntries\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <div fxLayoutAlign=\\\"start center\\\" fxLayout=\\\"row\\\">\\r\\n                        <button (click)=\\\"cancel()\\\" mat-icon-button>\\r\\n                            <mat-icon>arrow_back</mat-icon>\\r\\n                        </button>\\r\\n                        <span style=\\\"padding: 5px 10px\\\">{{ selectedEntries.length }} selected</span>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <button mat-icon-button color=\\\"primary\\\">\\r\\n                            <mat-icon>import_export</mat-icon>\\r\\n                        </button>\\r\\n                        <button (click)=\\\"deleteSelectedEntries()\\\" *ngIf=\\\"hasSelectedEntries\\\" mat-icon-button color=\\\"warn\\\">\\r\\n                            <mat-icon>delete</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </mat-card-title>\\r\\n            <mat-divider *ngIf=\\\"! tendoo.crud.isLoading\\\"></mat-divider>\\r\\n            <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\" *ngIf=\\\"tendoo.crud.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n            <mat-card-content>\\r\\n                <table matSort (matSortChange)=\\\"sortData($event)\\\" mat-table [dataSource]=\\\"crudResult[ 'data' ]\\\" fxFlex>\\r\\n                    <!--- Note that these columns can be defined in any order.\\r\\n                        The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n                    <ng-container *ngFor=\\\"let column of columns\\\" [matColumnDef]=\\\"column\\\">\\r\\n                        <ng-container  *ngIf=\\\"column === 'id'\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px\\\">\\r\\n                                <mat-checkbox class=\\\"example-margin\\\" (change)=\\\"checkAllCheckboxes()\\\" [(ngModel)]=\\\"checkAll\\\"></mat-checkbox>\\r\\n                            </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px\\\">\\r\\n                                <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"element.$checked\\\"></mat-checkbox>\\r\\n                            </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"column === '$actions'\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef width=\\\"80\\\">{{ rawColumns[ column ].label }}</th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                <mat-menu #tableEntryMenu=\\\"matMenu\\\">\\r\\n                                    <button (click)=\\\"triggerMenu( menu, element )\\\" *ngFor=\\\"let menu of element.$actions\\\" mat-menu-item>{{ menu.label }}</button>\\r\\n                                </mat-menu>\\r\\n                                \\r\\n                                <button mat-icon-button [matMenuTriggerFor]=\\\"tableEntryMenu\\\">\\r\\n                                    <mat-icon>more_vert</mat-icon>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </ng-container>    \\r\\n                        <ng-container *ngIf=\\\"reservedColumns.indexOf( column ) === -1\\\">\\r\\n                            <th [mat-sort-header]=\\\"column\\\" mat-header-cell *matHeaderCellDef>{{ rawColumns[ column ].label }}</th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                                <!--\\r\\n                                    this help to replace the provided value with a replace value\\r\\n                                    provided on the column definition\\r\\n                                -->\\r\\n                                <ng-container *ngIf=\\\"rawColumns[ column ].replace !== undefined\\\">\\r\\n                                    <ng-container *ngIf=\\\"rawColumns[ column ].type === 'boolean'\\\">\\r\\n                                        <ng-container *ngIf=\\\"element[ column ] === false\\\">\\r\\n                                            {{ rawColumns[ column ].replace[0] }}\\r\\n                                        </ng-container>\\r\\n                                        <ng-container *ngIf=\\\"element[ column ] === true\\\">\\r\\n                                            {{ rawColumns[ column ].replace[1] }}\\r\\n                                        </ng-container>\\r\\n                                        <ng-container *ngIf=\\\"element[ column ] !== true && element[ column ] !== false\\\">\\r\\n                                            {{ rawColumns[ column ].replace[ '$default' ] ? rawColumns[ column ].replace[ '$default' ] : 'N/A' }}\\r\\n                                        </ng-container>\\r\\n                                    </ng-container>\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\\"rawColumns[ column ].replace === undefined\\\">\\r\\n                                    {{ element[ column ] }} \\r\\n                                </ng-container>\\r\\n                            </td>\\r\\n                        </ng-container>\\r\\n                    </ng-container>\\r\\n                    \\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"columns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: columns;\\\"></tr>\\r\\n                </table>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { TendooUsersService } from 'src/app/services/tendoo-users.service';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { TableColumnInterface } from 'src/app/interfaces/table-column.interface';\r\nimport { TableEntryInterface } from 'src/app/interfaces/table-entry.interface';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatSnackBar } from '@angular/material';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nimport { ConfirmDialogObject } from 'src/app/interfaces/confirm-dialog';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { TableConfig } from 'src/app/interfaces/table-config.interface';\r\n\r\n@Component({\r\n    selector: 'app-users',\r\n    templateUrl: './users.component.html',\r\n    styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n    columns: string[]                       =   [];\r\n    rawColumns: TableColumnInterface        =   {};\r\n    crudResult                              =   {};\r\n    searchEnabled                           =   false;\r\n    reservedColumns: string[]               =   [ '$actions' ];\r\n    searchValue                             =   '';\r\n    tableConfig: TableConfig;\r\n    checkAll: any;\r\n    @ViewChild( 'searchField' ) searchField: ElementRef;\r\n\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        public router: Router,\r\n        public dialog: MatDialog,\r\n        public snackbar: MatSnackBar\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.tableConfig        =   {\r\n            search: {\r\n                placeholder: 'Search a user'\r\n            }\r\n        }\r\n        this.loadUsers();\r\n    }\r\n\r\n    serialize( obj ) {\r\n        var str = [];\r\n        for ( var p in obj ) {\r\n            if (obj.hasOwnProperty(p)) {\r\n                str.push( encodeURIComponent( p ) + \"=\" + encodeURIComponent( obj[p] ) );\r\n            }\r\n        }\r\n        return str.join( '&' );\r\n    }\r\n\r\n    search( field: HTMLInputElement ) {\r\n        if ( field.value.length !== 0 ) {\r\n            return this.tendoo.crud.getEntries( 'tendoo.dashboard.users', {\r\n                search : field.value\r\n            }).subscribe( ( entries: any ) => {\r\n                this.crudResult     =   entries;\r\n            });\r\n        } \r\n        return this.snackbar.open( 'You need to input something to search.', 'OK', { duration: 3000 });\r\n    }\r\n    \r\n    /**\r\n     * init the users component\r\n     * and load all data\r\n     */\r\n    loadUsers() {\r\n        forkJoin(\r\n            this.tendoo.crud.getEntries( 'tendoo.dashboard.users' ),\r\n            this.tendoo.crud.getColumns( 'tendoo.dashboard.users' )\r\n        )\r\n        .subscribe( ( response ) => {\r\n            this.rawColumns     =   <TableColumnInterface>response[1];\r\n            this.columns        =   Object.keys( this.rawColumns );\r\n            this.crudResult     =   <TableEntryInterface[]>response[0];\r\n        })\r\n    }\r\n\r\n    sortData( event ) {\r\n        this.tendoo\r\n            .crud\r\n            .getEntries( 'tendoo.dashboard.users', event )\r\n            .subscribe( ( response: TableEntryInterface[] ) => {\r\n            this.crudResult         =   response;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * trigger menu\r\n     * @param object menu\r\n     * @return void\r\n     */\r\n    triggerMenu( menu, row ) {\r\n        /**\r\n         * build the url based on the \r\n         * configuration.\r\n         */\r\n        const url   =   menu.url.replace( \"#\", row[ menu.index || 'id' ] );\r\n\r\n        if ( menu.confirm !== undefined ) {\r\n            console.log( menu.namespace );\r\n            this.dialog.open( ConfirmDialogComponent, {\r\n                id: menu.namespace,\r\n                data: <ConfirmDialogObject>{\r\n                    title: menu.confirm.title,\r\n                    message: menu.confirm.message,\r\n                    buttons: [\r\n                        {\r\n                            label: 'Ok',\r\n                            namespace: 'ok',\r\n                            onClick: () => {\r\n                                this.__proceedAction( menu, url );\r\n                            }\r\n                        }, {\r\n                            label: 'Cancel',\r\n                            namespace: 'cancel',\r\n                            onClick: () => {\r\n                                this.dialog.getDialogById( menu.namespace )\r\n                                    .close();\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n        } else {\r\n            this.__proceedAction( menu, url );\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Proceed action after having\r\n     * checked if that action require a confirmation\r\n     * @param object menu\r\n     * @return void\r\n     */\r\n    private __proceedAction( menu, url ) {\r\n        switch( menu.type ) {\r\n            case 'DELETE':\r\n                this.tendoo.delete( url ).subscribe( (result: AsyncResponse ) => {\r\n                    this.ngOnInit();\r\n                    this.dialog.getDialogById( menu.namespace ).close();\r\n                    return this.snackbar.open( result.message, 'OK', {\r\n                        duration: 4000 \r\n                    });\r\n                }, (result: HttpErrorResponse ) => {\r\n                    this.dialog.getDialogById( menu.namespace ).close();\r\n                    return this.snackbar.open( result.error.message, 'OK', {\r\n                        duration: 4000 \r\n                    });\r\n                })\r\n            break;\r\n            case 'GET':\r\n                this.tendoo.get( url )\r\n            break;\r\n            case 'GOTO':\r\n                this.router.navigateByUrl( url );\r\n            break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Make sure to toggle all\r\n     * checkboxes when the main checkbox\r\n     * is clicked\r\n     * @return void\r\n     */\r\n    checkAllCheckboxes() {\r\n        this.crudResult[ 'data' ].forEach( checkbox => {\r\n            checkbox.$checked       =   this.checkAll;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * delete selected entries\r\n     * @param entries\r\n     * @return void\r\n     */\r\n    deleteSelectedEntries( entries ) {\r\n        this.dialog.open( ConfirmDialogComponent, {\r\n            id: 'delete.all.popup',\r\n            data: <ConfirmDialogObject>{\r\n                title: 'Please Confirm Your Action',\r\n                message: 'Would you like to delete all the selected users ? This action can\\'t be canceled !',\r\n                buttons: [\r\n                    {\r\n                        label: 'Delete',\r\n                        namespace: 'delete.all',\r\n                        onClick: () => {\r\n                            this.dialog.getDialogById( 'delete.all.popup' ).close();\r\n                            const result    =   <Observable<AsyncResponse>>this.confirmDeleteSelected();\r\n\r\n                            /**\r\n                             * if no error has been thrown\r\n                             */\r\n                            if ( result instanceof Observable ) {\r\n                                result.subscribe( response => {\r\n                                    /**\r\n                                     * reload the users to \r\n                                     * reflect the changes\r\n                                     */\r\n                                    this.loadUsers();\r\n                                    \r\n                                    this.snackbar.open( response.message, 'OK', {\r\n                                        duration: 3000\r\n                                    });\r\n                                }, (result: HttpErrorResponse ) => {\r\n                                    this.snackbar.open( result.error.message );\r\n                                })\r\n                            } else {\r\n                                /**\r\n                                 * this happen when there is a misconfiguration \r\n                                 * of an entity, for instance TendooUsersService.\r\n                                 */\r\n                                this.snackbar.open( 'A misconfiguration of an entity has occured ! ', 'OK', {\r\n                                    duration: 10000\r\n                                });\r\n                            }\r\n                        }\r\n                    }, {\r\n                        label: 'Cancel',\r\n                        namespace: 'cancel',\r\n                        onClick: () => {\r\n                            this.dialog.getDialogById( 'delete.all.popup' ).close();\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Confirm delete all selected entries\r\n     * @return void\r\n     */\r\n    confirmDeleteSelected() {\r\n        return this.tendoo.crud.deleteBulkEntries( 'tendoo.dashboard.users', this.selectedEntries.map( entry => entry.id ) )\r\n    }\r\n\r\n    /**\r\n     * get if it has a selected entries\r\n     * @return boolean\r\n     */\r\n    get hasSelectedEntries(): boolean {\r\n        return this.selectedEntries.length > 0;\r\n    }\r\n\r\n    /**\r\n     * return selected entries\r\n     * @return array\r\n     */\r\n    get selectedEntries() {\r\n        return this.crudResult[ 'data' ] !== undefined ? this.crudResult[ 'data' ].filter( entry => entry.$checked ) : [];\r\n    }\r\n\r\n    /**\r\n     * canceled all selected entries\r\n     * @return void\r\n     */\r\n    cancel() {\r\n        this.crudResult[ 'data' ].forEach( entry => entry.$checked = false );\r\n        this.checkAll   =   false;\r\n    }\r\n\r\n    /**\r\n     * toggle search. Enable /disable according\r\n     * to the provided parameter\r\n     * @return void\r\n     */\r\n    toggleSearch( param: boolean ) {\r\n        if ( param ) {\r\n            this.searchEnabled = true;\r\n            setTimeout( () => {\r\n                document.getElementById( 'search-field' ).focus();\r\n            }, 100 );\r\n        } else {\r\n            this.searchEnabled  =   false;\r\n            this.searchValue    =   '';\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvYXBwbGljYXRpb24vYXBwbGljYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"applicationForm\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-title>Configuring Application</mat-card-title>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-card-content>\\r\\n            <p style=\\\"margin: 30px 0 20px\\\">The connexion with the database is successful. Now we need to setup the admin account.</p>\\r\\n            <app-fields [field]=\\\"field\\\" [group]=\\\"applicationForm\\\" *ngFor=\\\"let field of fields\\\"></app-fields>\\r\\n        </mat-card-content>\\r\\n        <mat-divider *ngIf=\\\"! setup.isLoading\\\"></mat-divider>\\r\\n        <mat-progress-bar *ngIf=\\\"setup.isLoading\\\" mode=\\\"indeterminate\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\"></mat-progress-bar>\\r\\n        <mat-card-actions>\\r\\n            <button [disabled]=\\\"setup.isLoading\\\" (click)=\\\"setupApplication()\\\" mat-button>Setup Application</button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { SetupService } from 'src/app/services/setup.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\n\r\n@Component({\r\n    selector: 'app-application',\r\n    templateUrl: './application.component.html',\r\n    styleUrls: ['./application.component.css']\r\n})\r\nexport class ApplicationComponent implements OnInit {\r\n    fields: Field[]     =   [];\r\n    applicationForm: FormGroup;\r\n    constructor(\r\n        public setup: SetupService,\r\n        private snackbar: MatSnackBar,\r\n        private router: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.fields     =   [\r\n            {\r\n                name: 'application_name',\r\n                value: 'Tendoo CMS',\r\n                type: 'text',\r\n                validation: 'required',\r\n                description: 'What will be the name of your new installation ?',\r\n                label: 'Application Name'\r\n            }, {\r\n                name: 'username',\r\n                value: 'admin',\r\n                type: 'text',\r\n                validation: 'required|min:5',\r\n                description: 'What is the main account username ?',\r\n                label: 'Username'\r\n            },  {\r\n                name: 'password',\r\n                value: '',\r\n                type: 'password',\r\n                validation: 'required|min:6',\r\n                description: 'Provide a unique and unpredictable password for the main user.',\r\n                label: 'Password'\r\n            }, {\r\n                name: 'password_confirm',\r\n                value: '',\r\n                type: 'password',\r\n                validation: 'required|matches:password',\r\n                description: 'Must be the same as password.',\r\n                label: 'Confirm'\r\n            }, {\r\n                name: 'email',\r\n                value: '',\r\n                type: 'email',\r\n                validation: 'required|email',\r\n                description: 'What is the email used for the main user ?',\r\n                label: 'Email'\r\n            }\r\n        ];\r\n\r\n        const fields    =   ValidationGenerator.buildFormControls( this.fields );\r\n        this.applicationForm    =   new FormGroup( fields );\r\n    }\r\n\r\n    setupApplication() {\r\n        ValidationGenerator.touchAllFields( this.applicationForm );\r\n\r\n        if ( ! this.applicationForm.valid ) {\r\n            return this.snackbar.open( 'Unable to proceed, the form has one or more errors.', null, {\r\n                duration: 3000\r\n            });\r\n        }\r\n\r\n        this.setup.application( this.applicationForm.value ).subscribe( ( result: AsyncResponse ) => {\r\n            this.snackbar.open( result.message );\r\n            this.router.navigateByUrl( '/auth/login' );\r\n        }, ( result: HttpErrorResponse ) => {\r\n            this.snackbar.open( result.error.message );\r\n            this.fields.forEach( field => {\r\n                let formCtrl;\r\n                if ( result.error.errors[ field.name ] !== undefined ){\r\n                    field.control.setErrors({ error : true });\r\n                    field.errors    =   result.error.errors[ field.name ];\r\n                }\r\n            })\r\n        });\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvZGF0YWJhc2UvZGF0YWJhc2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"setupForm\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-title>Configuring Database</mat-card-title>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-card-content>\\r\\n            <p style=\\\"margin: 30px 0 20px\\\">In order to install Tendoo CMS, please provide all the informations required to connect to the database.</p>\\r\\n            <app-fields [field]=\\\"field\\\" [group]=\\\"setupForm\\\" *ngFor=\\\"let field of fields\\\"></app-fields>\\r\\n        </mat-card-content>\\r\\n        <mat-divider *ngIf=\\\"! setup.isLoading\\\"></mat-divider>\\r\\n        <mat-progress-bar *ngIf=\\\"setup.isLoading\\\" mode=\\\"indeterminate\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\"></mat-progress-bar>\\r\\n        <mat-card-actions>\\r\\n            <button [disabled]=\\\"setup.isLoading\\\" (click)=\\\"setupDatabase()\\\" mat-button>Setup Database</button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { SetupService } from 'src/app/services/setup.service';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-database',\r\n    templateUrl: './database.component.html',\r\n    styleUrls: ['./database.component.css']\r\n})\r\nexport class DatabaseComponent implements OnInit {\r\n    \r\n    fields: Field[]     =   [];\r\n    setupForm: FormGroup;\r\n\r\n    constructor(\r\n        private snackbar: MatSnackBar,\r\n        public setup: SetupService,\r\n        private router: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.fields     =   [\r\n            {\r\n                appearance: 'fill',\r\n                name: 'hostname',\r\n                label: 'Host',\r\n                description: 'provide a url to the host',\r\n                type: 'text',\r\n                validation: 'required',\r\n                value: 'localhost',\r\n            }, {\r\n                appearance: 'fill',\r\n                name: 'username',\r\n                label: 'Username',\r\n                description: 'provide a username for the host',\r\n                type: 'text',\r\n                validation: 'required',\r\n                value: 'root',\r\n            }, {\r\n                appearance: 'fill',\r\n                name: 'password',\r\n                label: 'Password',\r\n                description: 'provide a password for the host',\r\n                type: 'password',\r\n            }, {\r\n                appearance: 'fill',\r\n                name: 'db_name',\r\n                label: 'Database',\r\n                description: 'provide the database name',\r\n                type: 'text',\r\n                validation: 'required',\r\n                value: 'laravel-ng'\r\n            }, {\r\n                appearance: 'fill',\r\n                name: 'db_prefix',\r\n                label: 'Tables Prefix',\r\n                description: 'provide a unique table prefix',\r\n                type: 'text',\r\n                value: 'tendoo_'\r\n            }\r\n        ];\r\n\r\n        const fields    =   ValidationGenerator.buildFormControls( this.fields );\r\n        this.setupForm  =   new FormGroup( fields );\r\n    }    \r\n\r\n    /**\r\n     * Setup database\r\n     * @return void\r\n     */\r\n    setupDatabase() {\r\n        ValidationGenerator.touchAllFields( this.setupForm );\r\n\r\n        if ( ! this.setupForm.valid ) {\r\n            return this.snackbar.open( 'Unable to proceed, the database form is invalid !', null, {\r\n                duration: 3000\r\n            });\r\n        }\r\n\r\n        this.__submitForm();\r\n    }\r\n\r\n    /**\r\n     * Submit Form\r\n     * @return void\r\n     */\r\n    private __submitForm() {\r\n\r\n        this.setup.setupDatabase( this.setupForm.value ).subscribe( (result: AsyncResponse ) => {\r\n            this.snackbar.open( result.message )\r\n            this.router.navigateByUrl( '/do-setup/application' );\r\n        }, (response: HttpErrorResponse ) => {\r\n            this.snackbar.open( response.error.message, null, {\r\n                duration: 3000\r\n            });\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvZG8tc2V0dXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div fxFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-content\\\">\\r\\n    <div \\r\\n        fxFlex.xs=\\\"90%\\\" \\r\\n        fxFlex.sm=\\\"70%\\\" \\r\\n        fxFlex.md=\\\"50%\\\" \\r\\n        fxFlex.lg=\\\"40%\\\" \\r\\n        fxFlex.xl=\\\"40%\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-do-setup',\r\n  templateUrl: './do-setup.component.html',\r\n  styleUrls: ['./do-setup.component.css']\r\n})\r\nexport class DoSetupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvc2V0dXAtaG9tZS9zZXR1cC1ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card>\\r\\n    <mat-card-title>Welcome on Tendoo CMS</mat-card-title>\\r\\n    <mat-card-content>\\r\\n        Tendoo CMS is ready to be installed. Let's get started\\r\\n    </mat-card-content>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-card-actions>\\r\\n        <a routerLink=\\\"/do-setup/database\\\" mat-button>Database Configuration</a>\\r\\n    </mat-card-actions>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-setup-home',\r\n    templateUrl: './setup-home.component.html',\r\n    styleUrls: ['./setup-home.component.css']\r\n})\r\nexport class SetupHomeComponent implements OnInit {\r\n    \r\n    constructor() { }\r\n    \r\n    ngOnInit() {\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  home works!\\r\\n</p>\\r\\n<ul>\\r\\n  <li><a routerLink=\\\"do-setup\\\">Setup</a></li>\\r\\n  <li><a routerLink=\\\"auth/login\\\">Login</a></li>\\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWlncmF0aW9uLWRpYWxvZy9taWdyYXRpb24tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  migration-dialog works!\\r\\n</p>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\n\r\n@Component({\r\n\tselector: 'app-migration-dialog',\r\n\ttemplateUrl: './migration-dialog.component.html',\r\n\tstyleUrls: ['./migration-dialog.component.css']\r\n})\r\nexport class MigrationDialogComponent implements OnInit {\r\n\t\r\n\tconstructor(\r\n\t\tprivate dialog: MatDialog,\r\n\t\tpublic tendoo: TendooService,\r\n\t\t@Inject( MAT_DIALOG_DATA ) public data,\r\n\t) { \r\n\t\tconsole.log( this.data );\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t}\r\n\t\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { SetupService } from '../services/setup.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PreventAppInstalledGuard implements CanActivate {\r\n    constructor(\r\n        private setup: SetupService,\r\n        private router: Router,\r\n        private snackbar: MatSnackBar,\r\n    ){}\r\n\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<boolean> | Promise<boolean> | boolean {\r\n        return new Promise( ( resolve, reject ) => {\r\n            // return resolve( true );\r\n            this.setup.ping().subscribe( result => {\r\n            }, result => {\r\n                switch( result.error.class ) {\r\n                    case 'Tendoo/Core/Exceptions/TendooInstalledException':\r\n                        \r\n                        this.router.navigateByUrl( 'auth/login' );\r\n\r\n                        this.snackbar.open( result.error.message, null, {\r\n                            duration: 3000\r\n                        });\r\n                        return resolve( false );\r\n                }\r\n                return resolve( true );\r\n            })\r\n        })\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { SetupService } from '../services/setup.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PreventAppNotInstalledGuard implements CanActivate {\r\n    constructor(\r\n        private setup: SetupService,\r\n        private router: Router,\r\n        private snackbar: MatSnackBar,\r\n    ){}\r\n    \r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n            return new Promise( ( resolve, reject ) => {\r\n                this.setup.ping().subscribe( result => {\r\n                }, result => {\r\n                    switch( result.error.class ) {\r\n                        case 'Tendoo/Core/Exceptions/TendooNotInstalledException':\r\n                        this.router.navigateByUrl( 'do-setup' );\r\n                        this.snackbar.open( result.error.message, null, {\r\n                            duration: 3000\r\n                        });\r\n                        return resolve( false );\r\n                    }\r\n                    return resolve( true );\r\n                })\r\n            })\r\n        }\r\n    }\r\n    ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TendooService } from '../services/tendoo.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CheckRegistrationStatusGuard implements CanActivate {\n    constructor(\n        private tendoo: TendooService,\n        private snackbar: MatSnackBar,\n        private route: Router\n    ) {}\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n            return new Observable( observer => {\n                this.tendoo.options.getOption( 'allow_registration' ).subscribe( result => {\n                    \n                    if ( result.value === null ) {\n                        this.snackbar.open( 'The registration are closed on this website.', 'OK', { duration: 3000 });\n                        this.route.navigateByUrl( 'auth/login' );\n                        observer.next( false );\n                    } else {\n                        observer.next( true );\n                    }\n                    \n                    observer.complete();\n                });\n            })\n        }\n    }\n    ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material';\nimport { TendooService } from '../services/tendoo.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CrudCreateGuard implements CanActivate {\n    constructor(\n        private tendoo: TendooService,\n        private router: Router,\n        private snackbar: MatSnackBar\n    ) {}\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n            return new Promise( ( resolve, reject ) => {\n                const namespace     =   next.paramMap.get( 'namespace' );\n                this.tendoo.crud.canAccess({\n                    type: 'crud.create',\n                    namespace\n                }).subscribe( result => {\n                    resolve( true );\n                }, (result: HttpErrorResponse) => {\n                    if ( result.error.class === 'Tendoo/Core/Exceptions/AccessDenied' ) {\n                        this.router.navigateByUrl( 'dashboard/access-denied' );\n                    } else {\n                        this.snackbar.open( result.error.message || 'Unable to access to the requested page. You may not have access to that page.', 'OK', { duration: 5000 })\n                    }\n                    resolve( false );\n                })\n            })\n        }\n    }\n    ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TendooService } from '../services/tendoo.service';\nimport { MatSnackBar } from '@angular/material';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CrudEditGuard implements CanActivate {\n    constructor(\n        private tendoo: TendooService,\n        private snackbar: MatSnackBar,\n        private router: Router\n    ) {}\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n            return new Promise( ( resolve, reject ) => {\n                const namespace     =   next.paramMap.get( 'namespace' );\n                this.tendoo.crud.canAccess({\n                    type: 'crud.edit',\n                    namespace\n                }).subscribe( result => {\n                    resolve( true );\n                }, (result: HttpErrorResponse) => {\n                    if ( result.error.class === 'Tendoo/Core/Exceptions/AccessDenied' ) {\n                        this.router.navigateByUrl( 'dashboard/access-denied' );\n                    } else {\n                        this.snackbar.open( result.error.message || 'Unable to access to the requested page. You may not have access to that page.', 'OK', { duration: 5000 })\n                    }\n                    resolve( false );\n                })\n            })\n        }\n    }\n    ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TendooService } from '../services/tendoo.service';\nimport { MatSnackBar } from '@angular/material';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CrudListGuard implements CanActivate {\n    constructor(\n        private tendoo: TendooService,\n        private snackbar: MatSnackBar,\n        private router: Router\n    ) {}\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n            return new Promise( ( resolve, reject ) => {\n                const namespace     =   next.paramMap.get( 'namespace' );\n                this.tendoo.crud.canAccess({\n                    type: 'crud.list',\n                    namespace\n                }).subscribe( result => {\n                    resolve( true );\n                }, (result: HttpErrorResponse) => {\n                    if ( result.error.class === 'Tendoo/Core/Exceptions/AccessDenied' ) {\n                        this.router.navigateByUrl( 'dashboard/access-denied' );\n                    } else {\n                        this.snackbar.open( result.error.message || 'Unable to access to the requested page. You may not have access to that page.', 'OK', { duration: 5000 })\n                    }\n                    resolve( false );\n                })\n            })\n        }\n    }\n    ","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoaderService } from '../services/loader.service';\r\nimport { TendooService } from '../services/tendoo.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RequireLoggedGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private tendoo: TendooService\r\n    ){}\r\n\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n            if ( Object.values( LoaderService.headers ).length === 0 ) {\r\n                this.tendoo.auth.intented  =   state.url;\r\n                this.router.navigateByUrl( 'auth/login?notice=login-required' );\r\n                return true;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    ","import { Injectable } from '@angular/core';\r\nimport { AsyncResponse } from '../interfaces/async-response';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HttpResponseParserService {\r\n    \r\n    pipes   =   [];\r\n\r\n    constructor(\r\n        private route: Router,\r\n        private activeRoute: ActivatedRoute,\r\n        private snackbar: MatSnackBar\r\n    ) {\r\n        this.pipes.push( ( response: AsyncResponse ) => {\r\n            return new Promise( ( resolve ) => {\r\n                if ( resolve instanceof ProgressEvent ) {\r\n                    this.snackbar.open( 'Unable to reach the server right now.' );\r\n                }\r\n                resolve( response );\r\n            })\r\n        })\r\n        this.pipes.push( ( response: AsyncResponse ) => {\r\n            return new Promise( resolve => {\r\n                if ( response.class !== undefined && [\r\n                    'Tendoo/Core/Exceptions/TendooNotInstalledException',                            \r\n                    'Tendoo/Core/Exceptions/TendooInstalledException',                                \r\n                ].indexOf( response.class ) !== -1 ) {\r\n                    this.snackbar.open( response.message, 'OK', {\r\n                        duration: 4000\r\n                    });\r\n                }\r\n                return resolve( response );\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Parse Http Response\r\n     * @param http: AsyncResponse\r\n     */\r\n    parse( response: AsyncResponse ) {\r\n        return new Promise( resolve => {\r\n            this.pipes.forEach( async ( parser ) => {\r\n                response  =   await parser( response );\r\n            });\r\n            \r\n            resolve( response );\r\n        })\r\n    }\r\n\r\n    /**\r\n     * push http response parser\r\n     * @param any\r\n     * @return void\r\n     */\r\n    pushParser( parser ) {\r\n        this.pipes.push( parser );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpResponseParserService } from './http-response-parser.service';\r\nimport { AsyncResponse } from '../interfaces/async-response';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\ndeclare const tendoo;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n    bulkDeletePath;\r\n    isLoading   =   false;\r\n    baseUrl     =   tendoo.base_url; \r\n    static headers  =   {};\r\n\r\n    constructor(\r\n        protected http: HttpClient,\r\n        private httpParser: HttpResponseParserService,\r\n        protected snackbar: MatSnackBar\r\n    ) {}\r\n\r\n    /**\r\n     * Submit post request\r\n     * @param {string} url to access\r\n     * @param data data to submit\r\n     */\r\n    post( url:string, data: { [ key:string] : any } ) {\r\n        return new Observable( ( observer ) => {\r\n            this.isLoading  =   true;\r\n            return this.__formDataResponse( <Observable<AsyncResponse>>this.http.post( url, data, {\r\n                headers: LoaderService.headers\r\n            }), observer )\r\n        });\r\n    }\r\n\r\n    private __formDataResponse( http: Observable<AsyncResponse>, observer ) {\r\n        return http.subscribe( (result: AsyncResponse) => {\r\n            this.httpParser.parse( result ).then( () => {\r\n                this.isLoading  =   false;\r\n                observer.next( result );\r\n                observer.complete();\r\n            })\r\n        }, (result: HttpErrorResponse ) => {\r\n            this.httpParser.parse( result.error ).then( () => {\r\n                this.isLoading  =   false;\r\n                observer.error( result );\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Submit put request\r\n     * @param {string} url to access\r\n     * @param data data to submit\r\n     */\r\n    put( url:string, data: { [ key:string] : any } ) {\r\n        return new Observable( ( observer ) => {\r\n            this.isLoading  =   true;\r\n            return this.__formDataResponse( <Observable<AsyncResponse>>this.http.put( url, data, {\r\n                headers: LoaderService.headers\r\n            }), observer )\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Submit DELETE request\r\n     * @param {string} url to access\r\n     * @param data data to submit\r\n     */\r\n    delete( url ) {\r\n        return new Observable( ( observer ) => {\r\n            this.isLoading  =   true;\r\n            return this.http.delete( url, {\r\n                headers: LoaderService.headers\r\n            }).subscribe( result => {\r\n                this.isLoading  =   false;\r\n                observer.next( result );\r\n                observer.complete();\r\n            }, (result: HttpErrorResponse ) => {\r\n                this.httpParser.parse( result.error ).then( () => {\r\n                    this.isLoading  =   false;\r\n                    observer.error( result );\r\n                });\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Submit get request\r\n     * @param {string} url to access\r\n     * @param data data to submit\r\n     */\r\n    get( url ) {\r\n        return new Observable( ( observer ) => {\r\n            this.isLoading  =   true;\r\n            return this.http.get( url, {\r\n                headers: LoaderService.headers\r\n            }).subscribe( (result: AsyncResponse ) => {\r\n                this.httpParser.parse( result ).then( () => {\r\n                    this.isLoading  =   false;\r\n                    observer.next( result );\r\n                    observer.complete();\r\n                })\r\n            }, (result: HttpErrorResponse ) => {\r\n                this.httpParser.parse( result.error ).then( () => {\r\n                    this.isLoading  =   false;\r\n                    observer.error( result );\r\n                });\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * delete Selected entries\r\n     * @param array of id\r\n     * @return AyncResponse\r\n     */\r\n    deleteSelected( ids: number[] ) {\r\n        console.log( this.bulkDeletePath );\r\n        if ( this.bulkDeletePath !== undefined ) {\r\n            return this.post( this.baseUrl + this.bulkDeletePath, {\r\n                ids\r\n            });\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","/* TYPESCRIPT */\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ResponsiveService {\r\n\t\r\n\tconstructor() {\r\n\t\twindow.onresize = this.callSubscribers\r\n\t}\r\n\t\r\n\tprivate callbacks: Function[] = [];\r\n\t\r\n\t// taken from bootstrap's grid system\r\n\tprivate breakpoints = {\r\n\t\txs: '(max-width:575px)',\r\n\t\tsm: '(min-width:576px) and (max-width:767px)',\r\n\t\tmd: '(min-width:768px) and (max-width:991px)',\r\n\t\tlg: '(min-width:992px) and (max-width:1199px)',\r\n\t\txl: '(min-width:1200px)'\r\n\t};\r\n\t\r\n\tprivate xsOrs = this.breakpoints.xs + ',' + this.breakpoints.sm;\r\n\t\r\n\tpublic isXS = () => this.ruleIsMet(this.breakpoints.xs);\r\n\tpublic isSM = () => this.ruleIsMet(this.breakpoints.sm);\r\n\tpublic isMD = () => this.ruleIsMet(this.breakpoints.md);\r\n\tpublic isLG = () => this.ruleIsMet(this.breakpoints.lg);\r\n\tpublic isXL = () => this.ruleIsMet(this.breakpoints.xl);\r\n\t\r\n\tpublic isSmallScreen =  () => this.ruleIsMet(this.xsOrs);\r\n\t\r\n\tpublic registerChangeCallback = (f: Function) => {\r\n\t\tthis.callbacks.push(f);\r\n\t}\r\n\t\r\n\tprivate ruleIsMet = (rule: string) => window.matchMedia(rule).matches;\r\n\t\r\n\tprivate callSubscribers = () => {\r\n\t\tlet len = this.callbacks.length;\r\n\t\t\r\n\t\tif(len == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet i = 0;\r\n\t\t\r\n\t\tfor(;i < len; i++) {\r\n\t\t\tthis.callbacks[i]();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * define values\r\n\t * @param object\r\n\t */\r\n\tpublic define( values: DevicesBreakpoints ) {\r\n\t\tif ( this.isXS() ) {\r\n\t\t\treturn values.xs;\r\n\t\t} else if ( this.isSM() ) {\r\n\t\t\treturn values.sm;\r\n\t\t} else if ( this.isMD() ) {\r\n\t\t\treturn values.md;\r\n\t\t} else if ( this.isLG() ) {\r\n\t\t\treturn values.lg;\r\n\t\t} else if ( this.isXL() ) {\r\n\t\t\treturn values.xl;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface DevicesBreakpoints {\r\n\txl : string;\r\n\tlg : string;\r\n\tmd : string;\r\n\tsm : string;\r\n\txs : string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { LoaderService } from './loader.service';\r\nimport { AsyncResponse } from '../interfaces/async-response';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SetupService extends LoaderService {\r\n\r\n    /**\r\n     * Send post request to the server for db configuration\r\n     * @param fields form field for database configuration\r\n     */\r\n    setupDatabase( fields ) {\r\n        return this.post( this.baseUrl + 'tendoo/do-setup/database', fields );\r\n    }\r\n\r\n    application( fields ) {\r\n        return this.post( this.baseUrl + 'tendoo/do-setup/application', fields );\r\n    }\r\n\r\n    ping(): Observable<AsyncResponse> {\r\n        return <Observable<AsyncResponse>>this.get( this.baseUrl + 'tendoo/ping' );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoaderService } from './loader.service';\r\nimport { User } from '../interfaces/user-interface';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooAuthService extends LoaderService {\r\n\r\n    private user: User;\r\n    intented: string;\r\n    \r\n    /**\r\n     * register a new user from the register UI\r\n     * @param data form data\r\n     */\r\n    register( data ) {\r\n        return this.post( `${this.baseUrl}tendoo/auth/registration`, data );\r\n    }\r\n\r\n    /**\r\n     * attempt to log the user.\r\n     * @param credentials object user credentials\r\n     */\r\n    login( credentials ) {\r\n        return this.post( this.baseUrl + 'tendoo/auth/login', credentials );\r\n    } \r\n\r\n    /**\r\n     * Store the user credentials\r\n     * @param user User Object\r\n     * @param token session token\r\n     */\r\n    setCredentials( user: User, token: string ) {\r\n        LoaderService.headers    =   {\r\n            'X-AUTH-TOKEN'  : token\r\n        }\r\n\r\n        this.user   =   user;\r\n    }\r\n\r\n    /**\r\n     * Logout the logged user\r\n     * @return void\r\n     */\r\n    logout() {\r\n        this.user   =   undefined;\r\n        LoaderService.headers    =   {};\r\n    }\r\n\r\n    /**\r\n     * return the logged user\r\n     * @return User\r\n     */\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { LoaderService } from './loader.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TendooCrudService extends LoaderService {\n    getColumns( namespace ) {\n        return this.get( this.baseUrl + 'tendoo/crud/' + namespace + '/columns' );\n    }\n\n    private serialize( obj ) {\n        var str = [];\n        for ( var p in obj ) {\n            if (obj.hasOwnProperty(p)) {\n                str.push( encodeURIComponent( p ) + \"=\" + encodeURIComponent( obj[p] ) );\n            }\n        }\n        return str.join( '&' );\n    }\n\n    /**\n     * Get entries for a defined Crud Resource\n     * @param namespace crud namespace\n     * @return Observable<TableEntries>\n     */\n    getEntries( namespace, params: { [ key:string ]: string } = null ) {\n        return this.get( this.baseUrl + 'tendoo/crud/' + namespace + ( params !== null ? '?' + this.serialize( params ) : '' ) );\n    }\n    \n    /**\n     * Get a CRUD configuration along with entries\n     * @param namespace crud namespace\n     * @param params route parameters\n     */\n    getConfig( namespace, params: { [ key:string ]: string } = null ) {\n        return this.get( this.baseUrl + 'tendoo/crud/' + namespace + '/config' + ( params !== null ? '?' + this.serialize( params ) : '' ) );\n    }\n\n    /**\n     * delete selected entries\n     * @param array of id\n     * @return Observable<AsyncResponse>\n     */\n    deleteBulkEntries( namespace: string, ids: number[] ) {\n        return this.post( this.baseUrl + 'tendoo/crud/' + namespace + '/bulk-actions', { \n            entries_id : ids,\n            action : 'bulk-delete'\n        })\n    }\n\n    /**\n     * Get form create config\n     * @param string namespace\n     * @return observable\n     */\n    getCreateConfig( namespace: string ) {\n        return this.get( `${this.baseUrl}tendoo/crud/${namespace}/create-config` );\n    }\n\n    /**\n     * post form\n     * @param string namespace\n     * @param object data\n     * @return observable.\n     */\n    postForm( namespace: string, data: {[ key:string]: string | boolean | number }) {\n        return this.post( `${this.baseUrl}tendoo/crud/${namespace}`, data );\n    }\n\n    /**\n     * act as a guard to proceed a crud instance\n     * @param object {type: string, namespace: string }\n     * @return Observable<AsyncResponse>\n     */\n    canAccess( data ) {\n        const { namespace, type }   =   data;\n        return this.post( `${this.baseUrl}tendoo/crud/${namespace}/can-access`, { type });\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TendooAuthService } from './tendoo-auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooFieldsService extends TendooAuthService {\r\n    \r\n    /**\r\n     * Get fieds for a specific namespace\r\n     * @param string field namespace\r\n     * @return Objservable.\r\n     */\r\n    getFields( namespace:string ): Observable<{}> {\r\n        return this.get( this.baseUrl + 'tendoo/fields/' + namespace );\r\n    }\r\n\r\n    /**\r\n     * get public fields using the \r\n     * provided namespace\r\n     * @param string fields namespace\r\n     * @return {Objservable<Field[]>} fields\r\n     */\r\n    getPublicFields( namespace) {\r\n        return this.get( this.baseUrl + 'tendoo/public/fields/' + namespace );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoaderService } from './loader.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooFormsService extends LoaderService {\r\n    /**\r\n     * get a form\r\n     * @param namespace form namespace\r\n     * @param index entry index\r\n     */\r\n    getForm( namespace:string, index?: number ) {\r\n        let url   =   this.baseUrl + 'tendoo/forms/' + namespace;\r\n\r\n        if ( index !== undefined ) {\r\n            url     +=  '/' + index\r\n        }\r\n\r\n        return this.get( url );\r\n    }\r\n    \r\n    /**\r\n     * return a public form available for the frontend\r\n     * @param string namespace\r\n     * @param int number\r\n     * @reutrn Form;\r\n     */\r\n    getPublicForm( namespace: string, index?: number ) {\r\n        let url   =   this.baseUrl + 'tendoo/public/forms/' + namespace;\r\n\r\n        if ( index !== undefined ) {\r\n            url     +=  '/' + index\r\n        }\r\n\r\n        return this.get( url );\r\n    }\r\n\r\n    /**\r\n     * save a form\r\n     * @param string namespace\r\n     * @param array data[ key: any ]\r\n     * @param number index\r\n     */\r\n    saveForm( namespace: string, data : { [ key: string ] : any }, index?: number ) {\r\n        let url     =   this.baseUrl + 'tendoo/forms/' + namespace;\r\n        return this.post( url, data );\r\n    }    \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { LoaderService } from './loader.service';\nimport { Media } from '../interfaces/media';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TendooMediasService extends LoaderService {\n    getMedias() {\n        return this.get( this.baseUrl + 'tendoo/medias' );\n    }\n\n    /**\n     * delete a specific media provided\n     * @param Media media object to delete\n     * @return observable<AsyncResponse>\n     */\n    deleteMedia( medias: Media[] ) {\n        return this.post( this.baseUrl + 'tendoo/medias/delete', { medias });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { LoaderService } from './loader.service';\nimport { Link } from '../interfaces/link';\nimport { Observable } from 'rxjs';\nimport { Menu } from '../interfaces/menu';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TendooMenusService extends LoaderService {\n\n    /**\n     * get menu\n     * @return observable of link\n     */\n    getMenus( namespace: string ): Observable<Menu[]> {\n        return <Observable<Menu[]>>this.get( this.baseUrl + 'tendoo/menus/dashboard.aside' );\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { TendooAuthService } from './tendoo-auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooModulesService extends TendooAuthService {\r\n    getAll() {\r\n        return this.get( this.baseUrl + 'tendoo/modules' );\r\n    }\r\n\r\n    /**\r\n     * upload a zip file to Tendoo CMS \r\n     * server\r\n     * @param file\r\n     * @return void \r\n     */\r\n    uploadFile( file: File ) {\r\n        const endpoint = 'your-destination-url';\r\n        const formData: FormData = new FormData();\r\n        formData.append( 'module', file, file.name);\r\n        return this.post( this.baseUrl + 'tendoo/modules/upload', formData );\r\n    }\r\n\r\n    /**\r\n     * delete a module\r\n     * @param string module namespace\r\n     * @return void\r\n     */\r\n    deleteModule( namespace:string ) {\r\n        return this.delete( this.baseUrl + 'tendoo/modules/' + namespace );\r\n    }\r\n\r\n    /**\r\n     * Enable a module\r\n     * @param string module namespace\r\n     * @return {Observable} AsyncResponse\r\n     */\r\n    enable( module: string ) {\r\n        return this.post( this.baseUrl + 'tendoo/modules/enable', { module });\r\n    }\r\n\r\n    /**\r\n     * Disable a module\r\n     * @param string module namespace\r\n     * @return {Observable} AsyncReponse\r\n     */\r\n    disable( module: string ) {\r\n        return this.post( this.baseUrl + 'tendoo/modules/disable', { module });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { LoaderService } from './loader.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TendooOptionsService extends LoaderService {\n    getOption( key: string ) {\n        return <Observable<{ value: any }>>this.get( `${this.baseUrl}tendoo/options/${key}` );\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { TendooAuthService } from './tendoo-auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooTableService extends TendooAuthService {\r\n\r\n    getColumns( table: string ) {\r\n        return this.get( this.baseUrl + 'tendoo/tables/' + table );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoaderService } from './loader.service';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Tab } from '../interfaces/tab';\r\nimport { Observable, ObservableInput, of } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooTabsService extends LoaderService {\r\n    slug: string    =   'tendoo/tabs';\r\n    getTabs( name: string ) {\r\n        return this.get( `${this.baseUrl}${this.slug}/${name}` ).pipe( \r\n            map( entries => entries ),\r\n            catchError( ( result ) => {\r\n                this.snackbar.open( result.error.message );\r\n                return of(result);\r\n            })\r\n        )\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TendooAuthService } from './tendoo-auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooUsersService extends TendooAuthService {\r\n    /**\r\n     * bulk delete path\r\n     */\r\n    bulkDeletePath      =   'tendoo/users/delete-selected';\r\n\r\n    /**\r\n     * get users\r\n     * @return json\r\n     */\r\n    getUsers( param: string = '' ) {\r\n        return this.get( this.baseUrl + 'tendoo/users?' + param );\r\n    }\r\n\r\n    /**\r\n     * edit a user using a provided id\r\n     * @param int user id\r\n     * @param object data to update\r\n     * @return Objservable of AsyncResponse\r\n     */\r\n    edit( id, data ) {\r\n        return this.put( this.baseUrl + 'tendoo/users/' + id, data );\r\n    }\r\n\r\n    /**\r\n     * create a users using provided data\r\n     * @param data\r\n     * @return Observable<AsyncReponse>\r\n     */\r\n    create( data: { [ key: string ] : any } ) {\r\n        return this.post( this.baseUrl + 'tendoo/users', data );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoaderService } from './loader.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TendooAuthService } from './tendoo-auth.service';\r\nimport { TendooFieldsService } from './tendoo-fields.service';\r\nimport { TendooModulesService } from './tendoo-modules.service';\r\nimport { TendooUsersService } from './tendoo-users.service';\r\nimport { TendooTableService } from './tendoo-table.service';\r\nimport { TendooFormsService } from './tendoo-forms.service';\r\nimport { HttpResponseParserService } from './http-response-parser.service';\r\nimport { TendooTabsService } from './tendoo-tabs.service';\r\nimport { TendooMenusService } from './tendoo-menu.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { TendooMediasService } from './tendoo-medias.service';\r\nimport { TendooCrudService } from './tendoo-crud.service';\r\nimport { TendooOptionsService } from './tendoo-options.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooService extends LoaderService {\r\n    protected http;\r\n    constructor( \r\n        http: HttpClient,\r\n        httpParser: HttpResponseParserService,\r\n        snackbar: MatSnackBar,\r\n        public auth: TendooAuthService,\r\n        public fields: TendooFieldsService,\r\n        public modules: TendooModulesService,\r\n        public users: TendooUsersService,\r\n        public tables: TendooTableService,\r\n        public forms: TendooFormsService,\r\n        public tabs: TendooTabsService,\r\n        public menus: TendooMenusService,\r\n        public medias: TendooMediasService,\r\n        public crud: TendooCrudService,\r\n        public options: TendooOptionsService\r\n    ) {\r\n        super( http, httpParser, snackbar );\r\n    }\r\n}\r\n","module.exports = \".dialog-text {\\r\\n    text-align: center;\\r\\n}\\r\\n:host {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbmZpcm0tZGlhbG9nL2NvbmZpcm0tZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7Q0FDdEI7QUFDRDtJQUNJLFlBQVk7Q0FDZiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb25maXJtLWRpYWxvZy9jb25maXJtLWRpYWxvZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRpYWxvZy10ZXh0IHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG46aG9zdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\">\\r\\n\\t<div fxFlex=\\\"auto\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n\\t\\t<div class=\\\"dialog-text p-2\\\" fxFlex.lg=\\\"80%\\\" fxFlex.md=\\\"80%\\\" fxFlex.xs=\\\"100%\\\" fxFlex.sm=\\\"100%\\\">\\r\\n\\t\\t\\t<p class=\\\"mat-display-1 m-0 py-3\\\">\\r\\n\\t\\t\\t\\t{{ data.title }}\\r\\n\\t\\t\\t</p>\\r\\n\\t\\t\\t<p class=\\\"mat-title\\\">{{ data.message }}</p>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<mat-divider></mat-divider>\\r\\n\\t<div fxLayout=\\\"row\\\" fxFlex=\\\"50px\\\" fxLayoutAlign=\\\"stretch stretch\\\">\\r\\n\\t\\t<ng-container *ngFor=\\\"let button of data.buttons\\\">\\r\\n\\t\\t\\t<button (click)=\\\"handle( button )\\\" fxFlex=\\\"auto\\\" mat-button=\\\"\\\">\\r\\n\\t\\t\\t\\t<span  class=\\\"mat-subheading-2\\\">{{ button.label }}</span>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<mat-divider [vertical]=\\\"true\\\"></mat-divider>\\r\\n\\t\\t</ng-container>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar } from '@angular/material';\r\nimport { Button } from '../../interfaces/button';\r\nimport { ConfirmDialogObject } from 'src/app/interfaces/confirm-dialog';\r\n\r\n@Component({\r\n\tselector: 'app-confirm-dialog',\r\n\ttemplateUrl: './confirm-dialog.component.html',\r\n\tstyleUrls: ['./confirm-dialog.component.css'],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\thost: {\r\n\t\tstyle: 'flex-direction: column; box-sizing: border-box; display: flex; height: 100%;',      \r\n\t}\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\t\r\n\tconstructor(\r\n\t\tpublic dialog: MatDialogRef<ConfirmDialogComponent>,\r\n\t\t@Inject( MAT_DIALOG_DATA ) public data: ConfirmDialogObject,\r\n\t\tprivate snackBar: MatSnackBar\r\n\t) { }\r\n\t\r\n\tngOnInit() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handle Press Events\r\n\t * @param Button\r\n\t * @return void\r\n\t */\r\n\thandle( button: Button ) {\r\n\t\tif ( typeof button.onClick == 'function' ) {\r\n\t\t\tbutton.onClick();\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n#search-field {\\r\\n    height: 35px;\\r\\n    border-radius: 5px;\\r\\n    border: solid 1px #DDD;\\r\\n    background: #FFF;\\r\\n    width: 100%;\\r\\n    font-size: 18px;\\r\\n    padding: 0 10px;\\r\\n    margin-right: 10px;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NydWQtdGFibGUvY3J1ZC10YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtDQUNoQjtBQUNEO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixrQkFBa0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY3J1ZC10YWJsZS9jcnVkLXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuI3NlYXJjaC1maWVsZCB7XHJcbiAgICBoZWlnaHQ6IDM1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBib3JkZXI6IHNvbGlkIDFweCAjREREO1xyXG4gICAgYmFja2dyb3VuZDogI0ZGRjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgcGFkZGluZzogMCAxMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn0iXX0= */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\n    <mat-card-title class=\\\"p-2 mb-0\\\" *ngIf=\\\"searchEnabled\\\" color=\\\"warn\\\">\\n        <div fxFlex=\\\"100%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <button (click)=\\\"toggleSearch( false )\\\" mat-icon-button>\\n                <mat-icon>close</mat-icon>\\n            </button>\\n            <input id=\\\"search-field\\\" [placeholder]=\\\"labels.search\\\" type=\\\"text\\\" #searchField>\\n            <button (click)=\\\"search( searchField )\\\" mat-icon-button>\\n                <mat-icon>search</mat-icon>\\n            </button>\\n        </div>\\n    </mat-card-title>\\n    <mat-card-title class=\\\"p-2 mb-0\\\" *ngIf=\\\"! searchEnabled\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <div fxFlex=\\\"100%\\\" *ngIf=\\\"! hasSelectedEntries\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <button mat-icon-button routerLink=\\\"/dashboard/users/create\\\" mat-button color=\\\"primary\\\">\\n                <mat-icon>add</mat-icon>\\n            </button>\\n            <button mat-icon-button (click)=\\\"toggleSearch( true )\\\">\\n                <mat-icon>search</mat-icon>\\n            </button>\\n        </div>\\n        <div fxFlex=\\\"100%\\\" *ngIf=\\\"hasSelectedEntries\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <div fxLayoutAlign=\\\"start center\\\" fxLayout=\\\"row\\\">\\n                <button (click)=\\\"cancel()\\\" mat-icon-button>\\n                    <mat-icon>arrow_back</mat-icon>\\n                </button>\\n                <span style=\\\"padding: 5px 10px\\\">{{ selectedEntries.length }} selected</span>\\n            </div>\\n            <div>\\n                <button mat-icon-button color=\\\"primary\\\">\\n                    <mat-icon>import_export</mat-icon>\\n                </button>\\n                <button (click)=\\\"deleteSelectedEntries()\\\" *ngIf=\\\"hasSelectedEntries\\\" mat-icon-button color=\\\"warn\\\">\\n                    <mat-icon>delete</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n    </mat-card-title>\\n    <mat-divider *ngIf=\\\"! tendoo.crud.isLoading\\\"></mat-divider>\\n    <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\" *ngIf=\\\"tendoo.crud.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n    <mat-card-content>\\n        <table matSort (matSortChange)=\\\"sortData($event)\\\" mat-table [dataSource]=\\\"crud.results[ 'data' ]\\\" fxFlex>\\n            <!--- Note that these columns can be defined in any order.\\n                The actual rendered columns are set as a property on the row definition\\\" -->\\n            <ng-container *ngFor=\\\"let column of columnsNames\\\" [matColumnDef]=\\\"column\\\">\\n                <ng-container  *ngIf=\\\"column === 'id'\\\">\\n                    <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px\\\">\\n                        <mat-checkbox class=\\\"example-margin\\\" (change)=\\\"checkAllCheckboxes()\\\" [(ngModel)]=\\\"checkAll\\\"></mat-checkbox>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px\\\">\\n                        <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"element.$checked\\\"></mat-checkbox>\\n                    </td>\\n                </ng-container>\\n                <ng-container *ngIf=\\\"column === '$actions'\\\">\\n                    <th mat-header-cell *matHeaderCellDef width=\\\"80\\\">{{ columns[ column ].label }}</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <mat-menu #tableEntryMenu=\\\"matMenu\\\">\\n                            <button (click)=\\\"triggerMenu( menu, element )\\\" *ngFor=\\\"let menu of element.$actions\\\" mat-menu-item>{{ menu.label }}</button>\\n                        </mat-menu>\\n                        \\n                        <button mat-icon-button [matMenuTriggerFor]=\\\"tableEntryMenu\\\">\\n                            <mat-icon>more_vert</mat-icon>\\n                        </button>\\n                    </td>\\n                </ng-container>    \\n                <ng-container *ngIf=\\\"reservedColumns.indexOf( column ) === -1\\\">\\n                    <th [mat-sort-header]=\\\"column\\\" mat-header-cell *matHeaderCellDef>{{ columns[ column ].label }}</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> \\n                        <!--\\n                            this help to replace the provided value with a replace value\\n                            provided on the column definition\\n                        -->\\n                        <ng-container *ngIf=\\\"columns[ column ].replace !== undefined\\\">\\n                            <ng-container *ngIf=\\\"columns[ column ].type === 'boolean'\\\">\\n                                <ng-container *ngIf=\\\"element[ column ] === false\\\">\\n                                    {{ columns[ column ].replace[0] }}\\n                                </ng-container>\\n                                <ng-container *ngIf=\\\"element[ column ] === true\\\">\\n                                    {{ columns[ column ].replace[1] }}\\n                                </ng-container>\\n                                <ng-container *ngIf=\\\"element[ column ] !== true && element[ column ] !== false\\\">\\n                                    {{ columns[ column ].replace[ '$default' ] ? columns[ column ].replace[ '$default' ] : 'N/A' }}\\n                                </ng-container>\\n                            </ng-container>\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"columns[ column ].replace === undefined\\\">\\n                            {{ element[ column ] }} \\n                        </ng-container>\\n                    </td>\\n                </ng-container>\\n            </ng-container>\\n            \\n            <tr mat-header-row *matHeaderRowDef=\\\"columnsNames\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: columnsNames;\\\"></tr>\\n        </table>\\n    </mat-card-content>\\n</mat-card>\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { TableConfig } from 'src/app/interfaces/table-config.interface';\nimport { TableColumnInterface } from 'src/app/interfaces/table-column.interface';\nimport { TableEntryInterface } from 'src/app/interfaces/table-entry.interface';\nimport { EventEmitter } from '@angular/core';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { ConfirmDialogObject } from 'src/app/interfaces/confirm-dialog';\nimport { CoreAction } from 'src/app/interfaces/core-action';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\nimport { TendooService } from 'src/app/services/tendoo.service';\nimport { CrudConfig } from 'src/app/interfaces/crud-config.interface';\n\n@Component({\n    selector: 'app-crud-table',\n    templateUrl: './crud-table.component.html',\n    styleUrls: ['./crud-table.component.css']\n})\nexport class CrudTableComponent implements OnInit {\n    @Input( 'crud' ) crud: CrudConfig;\n    \n    @Output( 'sort' ) sort              =   new EventEmitter();\n    @Output( 'delete' ) delete          =   new EventEmitter();\n    @Output( 'action' ) action          =   new EventEmitter();\n    @Output( 'search' ) searchEvent     =   new EventEmitter();\n\n    columnsNames: string[]                  =   [];\n    searchEnabled                           =   false;\n    reservedColumns: string[]               =   [ '$actions' ];\n    searchValue                             =   '';\n    checkAll: any;\n    \n    constructor(\n        private dialog: MatDialog,\n        private router: Router,\n        private snackbar: MatSnackBar,\n        public tendoo: TendooService\n    ) { }\n    \n    ngOnInit() {\n        this.columnsNames    =   Object.keys( this.crud.columns );\n        console.log( this.columnsNames );\n    }\n\n    sortData( event ) {\n        this.sort.emit( event );\n    }\n\n    search( field: HTMLInputElement ) {\n        if ( field.value.length !== 0 ) {\n            this.searchEvent.emit( \n                field.value.length\n            );\n        } \n        return this.snackbar.open( 'You need to input something to search.', 'OK', { duration: 3000 });\n    }\n\n    /**\n     * trigger menu\n     * @param object menu\n     * @return void\n     */\n    triggerMenu( menu, row ) {\n        /**\n         * build the url based on the \n         * configuration.\n         */\n        const url   =   menu.url.replace( \"#\", row[ menu.index || 'id' ] );\n\n        if ( menu.confirm !== undefined ) {\n            console.log( menu.namespace );\n            this.dialog.open( ConfirmDialogComponent, {\n                id: menu.namespace,\n                data: <ConfirmDialogObject>{\n                    title: menu.confirm.title,\n                    message: menu.confirm.message,\n                    buttons: [\n                        {\n                            label: 'Ok',\n                            namespace: 'ok',\n                            onClick: () => {\n                                this.__proceedAction( menu, url );\n                            }\n                        }, {\n                            label: 'Cancel',\n                            namespace: 'cancel',\n                            onClick: () => {\n                                this.dialog.getDialogById( menu.namespace )\n                                    .close();\n                            }\n                        }\n                    ]\n                }\n            });\n        } else {\n            this.__proceedAction( menu, url );\n        }\n    }\n    \n    /**\n     * Proceed action after having\n     * checked if that action require a confirmation\n     * @param object menu\n     * @return void\n     */\n    private __proceedAction( menu, url ) {\n        this.action.emit({ menu, url });\n    }\n\n    /**\n     * Make sure to toggle all\n     * checkboxes when the main checkbox\n     * is clicked\n     * @return void\n     */\n    checkAllCheckboxes() {\n        this.crud.results[ 'data' ].forEach( checkbox => {\n            checkbox.$checked       =   this.checkAll;\n        });\n    }\n\n    /**\n     * delete selected entries\n     * @param entries\n     * @return void\n     */\n    deleteSelectedEntries( entries ) {\n        this.dialog.open( ConfirmDialogComponent, {\n            id: 'delete.all.popup',\n            data: <ConfirmDialogObject>{\n                title: 'Please Confirm Your Action',\n                message: 'Would you like to delete all the selected users ? This action can\\'t be canceled !',\n                buttons: [\n                    {\n                        label: 'Delete',\n                        namespace: 'delete.selected',\n                        onClick: () => {\n                            this.delete.emit({\n                                entries: this.selectedEntries,\n                                dialog: 'delete.all.popup'\n                            });\n                        }\n                    }, {\n                        label: 'Cancel',\n                        namespace: 'cancel',\n                        onClick: () => {\n                            this.dialog.getDialogById( 'delete.all.popup' ).close();\n                        }\n                    }\n                ]\n            }\n        })\n    }\n    \n    /**\n     * canceled all selected entries\n     * @return void\n     */\n    cancel() {\n        this.crud.results[ 'data' ].forEach( entry => entry.$checked = false );\n        this.checkAll   =   false;\n    }\n\n    /**\n     * toggle search. Enable /disable according\n     * to the provided parameter\n     * @return void\n     */\n    toggleSearch( param: boolean ) {\n        if ( param ) {\n            this.searchEnabled = true;\n            setTimeout( () => {\n                document.getElementById( 'search-field' ).focus();\n            }, 100 );\n        } else {\n            this.searchEnabled  =   false;\n            this.searchValue    =   '';\n        }\n    }\n\n    /**\n     * get if it has a selected entries\n     * @return boolean\n     */\n    get hasSelectedEntries(): boolean {\n        return this.selectedEntries.length > 0;\n    }\n\n    /**\n     * return selected entries\n     * @return array\n     */\n    get selectedEntries() {\n        return this.crud.results[ 'data' ] !== undefined ? this.crud.results[ 'data' ].filter( entry => entry.$checked ) : [];\n    }    \n}\n","module.exports = \"mat-form-field {\\r\\n    margin-bottom: 10px;\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2ZpZWxkcy9maWVsZHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9CQUFvQjtJQUNwQixZQUFZO0NBQ2YiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvZmllbGRzL2ZpZWxkcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<ng-container [formGroup]=\\\"group\\\">\\r\\n\\t<!-- text field field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"[ 'text', 'password', 'email' ].indexOf( field.type ) != -1\\\" class=\\\"example-full-width w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<input [readonly]=\\\"field.readonly\\\" [type]=\\\"field.type\\\" [formControlName]=\\\"field.name\\\" matInput [placeholder]=\\\"field.label\\\" [value]=\\\"field.value ? field.value : ''\\\">\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- date time field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'datetime'\\\" class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<input [readonly]=\\\"field.readonly\\\" [formControlName]=\\\"field.name\\\" matInput [matDatepicker]=\\\"picker\\\" [placeholder]=\\\"field.label\\\">\\r\\n\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n\\t\\t<mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- select field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'select'\\\" class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<mat-select [formControlName]=\\\"field.name\\\" [placeholder]=\\\"field.label\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let option of field.options\\\" [value]=\\\"option.value\\\">\\r\\n\\t\\t\\t{{ option.label }}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'multiple_select'\\\" multiple class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<mat-select [formControlName]=\\\"field.name\\\" [placeholder]=\\\"field.label\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let option of field.options\\\" [value]=\\\"option.value\\\">\\r\\n\\t\\t\\t{{ option.label }}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- textarea field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'textarea'\\\" class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<textarea [formControlName]=\\\"field.name\\\" matInput [placeholder]=\\\"field.label\\\"></textarea>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- text field field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"[ 'number' ].indexOf( field.type ) != -1\\\" class=\\\"example-full-width w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<input [readonly]=\\\"field.readonly\\\" [formControlName]=\\\"field.name\\\" matInput type=\\\"number\\\" [placeholder]=\\\"field.label\\\" [value]=\\\"field.value ? field.value : ''\\\">\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\t\\t\\r\\n\\t</mat-form-field>\\r\\n\\r\\n\\t<!-- switch field -->\\r\\n\\t<ng-container *ngIf=\\\"[ 'switch' ].indexOf( field.type ) != -1\\\">\\r\\n\\t\\t<mat-slide-toggle [formControlName]=\\\"field.name\\\" [checked]=\\\"field.value\\\">{{ field.label }}</mat-slide-toggle>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t\\t<br>\\r\\n\\t\\t<small *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</small>\\r\\n\\t\\t<br>\\r\\n\\t\\t<br>\\r\\n\\t</ng-container>\\r\\n\\r\\n\\t<!-- button -->\\r\\n\\t<button [type]=\\\"field.type\\\" *ngIf=\\\"[ 'button' ].indexOf( field.type ) !== -1\\\" (click)=\\\"field.onClick( group )\\\" mat-raised-button color=\\\"primary\\\">{{ field.label }}</button>\\r\\n</ng-container>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Field } from '../../interfaces/field';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\n\r\n@Component({\r\n\tselector: 'app-fields',\r\n\ttemplateUrl: './fields.component.html',\r\n\tstyleUrls: ['./fields.component.css']\r\n})\r\nexport class FieldsComponent implements OnInit {\r\n\t@Input( 'field' ) field: Field;\r\n\t@Input( 'group' ) group: FormGroup;\r\n\tconstructor() { \r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Check change state\r\n\t */\r\n\tchange() {\r\n\t\t// console.log( this.field.control );\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tif ( [ 'text', 'email', 'select', 'password', 'textarea', 'datetime', 'number', 'multiple_select', 'button', 'switch' ].indexOf( this.field.type ) === -1 ) {\r\n\t\t\tthrow( `Unable to render the field '${this.field.name}' with the field type : '${this.field.type}'. This type is not supported.`);\r\n\t\t}\r\n\r\n\t\tif ( ! ( this.group.get( this.field.name ) instanceof AbstractControl ) ) {\r\n\t\t\tthrow `Unable to retreive the field \"${this.field.name}\" from the [group] provided to the \"app-fields\" component.`\r\n\t\t}\r\n\r\n\t\tthis[ this.field.name ] \t=\tthis.field.control;\r\n\t}\t\r\n}\r\n","module.exports = \"mat-list-item div > div > i {\\r\\n    margin-right: 16px;\\r\\n}\\r\\nmat-nav-list {\\r\\n    padding-top: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL21lbnUtbGlzdC9tZW51LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtDQUN0QjtBQUNEO0lBQ0ksZUFBZTtDQUNsQiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9tZW51LWxpc3QvbWVudS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtbGlzdC1pdGVtIGRpdiA+IGRpdiA+IGkge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG59XHJcbm1hdC1uYXYtbGlzdCB7XHJcbiAgICBwYWRkaW5nLXRvcDogMDtcclxufSJdfQ== */\"","module.exports = \"<mat-nav-list>\\n\\t<ng-container *ngFor=\\\"let menu of sidebarMenus; index as index\\\">\\n\\t\\t<div *ngIf=\\\"menu.childrens?.length > 0\\\" matLine href=\\\"javascript:void(0)\\\" (click)=\\\"toggle( index )\\\">\\n\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" fxFill>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"material-icons\\\">{{ menu.icon ? menu.icon : 'star' }}</i>\\n\\t\\t\\t\\t\\t\\t<span>{{ menu.text }}</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"24px\\\">\\n\\t\\t\\t\\t\\t\\t<i *ngIf=\\\"menu.open\\\"class=\\\"material-icons\\\">arrow_drop_up</i>\\n\\t\\t\\t\\t\\t\\t<i *ngIf=\\\"! menu.open\\\" class=\\\"material-icons\\\">arrow_drop_down</i>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</mat-list-item>\\n\\t\\t\\t<app-sub-menu-list *ngIf=\\\"menu.childrens?.length > 0 && menu.open\\\" [childrens]=\\\"menu.childrens\\\"></app-sub-menu-list>\\n\\t\\t</div>\\n\\t\\t<a *ngIf=\\\"! menu.childrens\\\" matLine (click)=\\\"goTo( menu )\\\">\\n\\t\\t\\t<mat-list-item >\\n\\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"w-100\\\">\\n\\t\\t\\t\\t\\t<div fxFlex=\\\"auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"material-icons\\\">{{ menu.icon ? menu.icon : 'star' }}</i>\\n\\t\\t\\t\\t\\t\\t<span>{{ menu.text }}</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</mat-list-item>\\n\\t\\t</a>\\n\\t</ng-container>\\n</mat-nav-list>\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { Menu } from 'src/app/interfaces/menu';\n\n@Component({\n\tselector: 'app-menu-list',\n\ttemplateUrl: './menu-list.component.html',\n\tstyleUrls: ['./menu-list.component.css']\n})\nexport class MenuListComponent implements OnInit {\n\t@Input( 'menus' ) sidebarMenus: Menu[] \t=\t[];\n\n\tconstructor(\n\t\tprivate router: Router,\n\t) { \n\t}\n\n\tngOnInit() {\n\t}\n\n\t/**\n\t * Open/close current menu\n\t * @param object menu\n\t * @todo probably a bad pratice\n\t */\n\ttoggle( index:number ) {\n\t\tthis.sidebarMenus.forEach( ( menu, __index ) => {\n\t\t\tif ( __index === index ) {\n\t\t\t\tmenu.open \t=\tmenu.open ? !menu.open : true;\n\t\t\t} else {\n\t\t\t\tmenu.open \t=\tfalse;\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Close All menus\n\t * @return void\n\t */\n\tcloseAll() {\n\t\tthis.sidebarMenus.forEach( menu => {\n\t\t\tmenu.open \t=\tfalse;\n\t\t});\n\t}\n\n\t/**\n\t * GoTo\n\t * @return void\n\t */\n\tgoTo( menu:Menu ) {\n\n\t\t// navigate to the menu path\n\t\tthis.router.navigateByUrl( menu.href );\n\t}\n\t\n}\n","module.exports = \"mat-nav-list {\\r\\n    background: rgba(233, 233, 233, 0.5);\\r\\n    border-top: solid 1px #e0e0e0;\\r\\n    border-bottom: solid 1px #e0e0e0;\\r\\n}\\r\\n\\r\\nmat-list-item span {\\r\\n    padding-left: 40px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3N1Yi1tZW51LWxpc3Qvc3ViLW1lbnUtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUNBQXFDO0lBQ3JDLDhCQUE4QjtJQUM5QixpQ0FBaUM7Q0FDcEM7O0FBRUQ7SUFDSSxtQkFBbUI7Q0FDdEIiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvc3ViLW1lbnUtbGlzdC9zdWItbWVudS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtbmF2LWxpc3Qge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyMzMsIDIzMywgMjMzLCAwLjUpO1xyXG4gICAgYm9yZGVyLXRvcDogc29saWQgMXB4ICNlMGUwZTA7XHJcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI2UwZTBlMDtcclxufVxyXG5cclxubWF0LWxpc3QtaXRlbSBzcGFuIHtcclxuICAgIHBhZGRpbmctbGVmdDogNDBweDtcclxufSJdfQ== */\"","module.exports = \"<mat-nav-list class=\\\"pt-0\\\">\\n\\t<a *ngFor=\\\"let menu of subMenus\\\" matLine (click)=\\\"goTo( menu )\\\">\\n\\t\\t<mat-list-item >\\n\\t\\t\\t<span>{{ menu.text }}</span>\\n\\t\\t</mat-list-item>\\n\\t</a>\\n</mat-nav-list>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Menu } from 'src/app/interfaces/menu';\n\n@Component({\n\tselector: 'app-sub-menu-list',\n\ttemplateUrl: './sub-menu-list.component.html',\n\tstyleUrls: ['./sub-menu-list.component.css']\n})\nexport class SubMenuListComponent implements OnInit {\n\t@Input( 'childrens' ) subMenus: Menu[];\n\tconstructor(\n\t\tprivate router: Router,\n\t) { \n\t}\n\t\n\tngOnInit() {\n\t}\n\n\t/**\n\t * GoTo\n\t * @return void\n\t */\n\tgoTo( menu:Menu ) {\n\n\t\tthis.router.navigateByUrl( menu.href );\n\t}\n}\n","import { ValidatorFn, FormGroup, AbstractControl } from \"@angular/forms\";\r\n\r\nexport function MatchesValidator( matches ): ValidatorFn {\r\n    return ( control: AbstractControl ): {[ key: string ] : any } => {\r\n        if( control.value !== control.parent.get( matches ).value ) {\r\n            return {\r\n                'matches'   :   {\r\n                    'formControl'       :   control.parent.get( matches ),\r\n                    'formControlName'   :   matches\r\n                }\r\n            };\r\n        }       \r\n        return null;\r\n    }\r\n}","import { ValidatorFn, AbstractControl } from \"@angular/forms\";\r\n\r\nexport function Numbervalidator(): ValidatorFn {\r\n    return ( control: AbstractControl ): {[ key: string ] : any } => {\r\n        if( ! /^\\d+$/.exec( control.value ) ) {\r\n            return {\r\n                'number'   :   true\r\n            };\r\n        }       \r\n        return null;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { NgModule } from '@angular/core';\r\nimport { MatCheckboxModule, MatDatepickerModule, MatFormFieldModule, MatInputModule, MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule, MatMenuModule, MatSidenavModule, MatToolbarModule, MatCardModule, MatDividerModule, MatExpansionModule, MatGridListModule, MatListModule, MatTabsModule, MatButtonModule, MatIconModule, MatProgressSpinnerModule, MatProgressBarModule, MatRippleModule, MatDialogModule, MatSnackBarModule, MatPaginatorModule, MatSortModule, MatTableModule } from '@angular/material';\r\n\r\nconst MaterialModules   =   [\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatRippleModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule\r\n];\r\n\r\n@NgModule({\r\n    imports: MaterialModules,\r\n    exports: MaterialModules,\r\n})\r\nexport class MaterialModule {}","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { SetupHomeComponent } from \"src/app/components/do-setup/setup-home/setup-home.component\";\r\nimport { DatabaseComponent } from \"src/app/components/do-setup/database/database.component\";\r\nimport { ApplicationComponent } from \"src/app/components/do-setup/application/application.component\";\r\nimport { LoginComponent } from \"src/app/components/auth/login/login.component\";\r\nimport { LogoutComponent } from \"src/app/components/auth/logout/logout.component\";\r\nimport { RegisterComponent } from \"src/app/components/auth/register/register.component\";\r\nimport { DashboardHomeComponent } from \"src/app/components/dashboard/home/home.component\";\r\nimport { UsersComponent } from \"src/app/components/dashboard/users/users.component\";\r\nimport { ModulesComponent } from \"src/app/components/dashboard/modules/modules.component\";\r\nimport { SettingsComponent } from \"src/app/components/dashboard/settings/settings.component\";\r\nimport { DoSetupComponent } from \"src/app/components/do-setup/do-setup.component\";\r\nimport { AuthComponent } from \"src/app/components/auth/auth.component\";\r\nimport { PreventAppInstalledGuard } from \"src/app/guards/app-state.guard\";\r\nimport { HomeComponent } from \"src/app/components/home/home.component\";\r\nimport { DashboardComponent } from \"src/app/components/dashboard/dashboard.component\";\r\nimport { RequireLoggedGuard } from \"src/app/guards/require-logged.guard\";\r\nimport { ModulesUploadComponent } from \"src/app/components/dashboard/modules-upload/modules-upload.component\";\r\nimport { PreventAppNotInstalledGuard } from \"src/app/guards/check-app-installed.guard\";\r\nimport { UsersCreateComponent } from \"src/app/components/dashboard/users-create/users-create.component\";\r\nimport { UsersEditComponent } from \"src/app/components/dashboard/users-edit/users-edit.component\";\r\nimport { ProfileComponent } from \"src/app/components/dashboard/profile/profile.component\";\r\nimport { MediasComponent } from \"src/app/components/dashboard/medias/medias.component\";\r\nimport { MediasUploadComponent } from \"src/app/components/dashboard/medias-upload/medias-upload.component\";\r\nimport { NotFoundComponent } from \"src/app/components/dashboard/not-found/not-found.component\";\r\nimport { CrudComponent } from \"src/app/components/dashboard/crud/crud.component\";\r\nimport { CrudCreateComponent } from \"src/app/components/dashboard/crud-create/crud-create.component\";\r\nimport { CrudEditComponent } from \"src/app/components/dashboard/crud-edit/crud-edit.component\";\r\nimport { CrudCreateGuard } from \"src/app/guards/crud-create.guard\";\r\nimport { AccessDeniedComponent } from \"src/app/components/dashboard/access-denied/access-denied.component\";\r\nimport { CrudListGuard } from \"src/app/guards/crud-list.guard\";\r\nimport { CrudEditGuard } from \"src/app/guards/crud-edit.guard\";\r\nimport { CheckRegistrationStatusGuard } from \"src/app/guards/check-registration-status.guard\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot([\r\n            {\r\n                path: '',\r\n                redirectTo: 'auth/login',\r\n                pathMatch: 'full',\r\n                // component: HomeComponent\r\n            }, {\r\n                path: 'do-setup',\r\n                component: DoSetupComponent,\r\n                canActivate: [ PreventAppInstalledGuard ],\r\n                children: [\r\n                    {\r\n                        path : '',\r\n                        component: SetupHomeComponent\r\n                    }, {\r\n                        path: 'database',\r\n                        component: DatabaseComponent\r\n                    }, {\r\n                        path: 'application',\r\n                        component: ApplicationComponent\r\n                    }\r\n                ]\r\n            }, {\r\n                path: 'auth',\r\n                component: AuthComponent,\r\n                canActivate: [ PreventAppNotInstalledGuard ],\r\n                children: [\r\n                    {\r\n                        path: 'logout',\r\n                        component: LogoutComponent\r\n                    }, {\r\n                        path: 'register',\r\n                        component: RegisterComponent,\r\n                        canActivate: [ CheckRegistrationStatusGuard ]\r\n                    }, {\r\n                        path: 'login',\r\n                        component: LoginComponent\r\n                    }\r\n                ]\r\n            }, {\r\n                path: 'dashboard',\r\n                component: DashboardComponent,\r\n                canActivate: [ RequireLoggedGuard ],\r\n                children: [\r\n                    {\r\n                        path: '',\r\n                        component: DashboardHomeComponent\r\n                    }, {\r\n                        path: 'users',\r\n                        component: UsersComponent\r\n                    }, {\r\n                        path: 'users/edit/:id',\r\n                        component: UsersEditComponent\r\n                    }, {\r\n                        path: 'users/create',\r\n                        component: UsersCreateComponent\r\n                    }, {\r\n                        path: 'profile',\r\n                        component: ProfileComponent\r\n                    }, {\r\n                        path: 'modules',\r\n                        component: ModulesComponent\r\n                    }, {\r\n                        path: 'modules/upload',\r\n                        component: ModulesUploadComponent\r\n                    }, {\r\n                        path: 'settings',\r\n                        component: SettingsComponent\r\n                    }, {\r\n                        path: 'medias',\r\n                        component: MediasComponent\r\n                    }, {\r\n                        path: 'medias/upload',\r\n                        component: MediasUploadComponent\r\n                    }, {\r\n                        path: 'crud/:namespace',\r\n                        component: CrudComponent,\r\n                        canActivate: [\r\n                            CrudListGuard\r\n                        ]\r\n                    }, {\r\n                        path: 'crud/:namespace/create',\r\n                        component: CrudCreateComponent,\r\n                        canActivate: [\r\n                            CrudCreateGuard\r\n                        ]\r\n                    }, {\r\n                        path: 'crud/:namespace/edit/:id',\r\n                        component: CrudEditComponent,\r\n                        canActivate: [\r\n                            CrudEditGuard\r\n                        ]\r\n                    }, {\r\n                        path: 'access-denied',\r\n                        component: AccessDeniedComponent\r\n                    }, {\r\n                        path: '**',\r\n                        component: NotFoundComponent\r\n                    }\r\n                ]\r\n            }\r\n        ])\r\n    ]\r\n})\r\nexport class RoutesModule{}"],"sourceRoot":""}