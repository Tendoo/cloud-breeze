{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classes/validation-generator.class.ts","webpack:///./src/app/components/auth/auth.component.css","webpack:///./src/app/components/auth/auth.component.html","webpack:///./src/app/components/auth/auth.component.ts","webpack:///./src/app/components/auth/login/login.component.css","webpack:///./src/app/components/auth/login/login.component.html","webpack:///./src/app/components/auth/login/login.component.ts","webpack:///./src/app/components/auth/logout/logout.component.css","webpack:///./src/app/components/auth/logout/logout.component.html","webpack:///./src/app/components/auth/logout/logout.component.ts","webpack:///./src/app/components/auth/register/register.component.css","webpack:///./src/app/components/auth/register/register.component.html","webpack:///./src/app/components/auth/register/register.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/dashboard/home/home.component.css","webpack:///./src/app/components/dashboard/home/home.component.html","webpack:///./src/app/components/dashboard/home/home.component.ts","webpack:///./src/app/components/dashboard/modules-upload/modules-upload.component.css","webpack:///./src/app/components/dashboard/modules-upload/modules-upload.component.html","webpack:///./src/app/components/dashboard/modules-upload/modules-upload.component.ts","webpack:///./src/app/components/dashboard/modules/modules.component.css","webpack:///./src/app/components/dashboard/modules/modules.component.html","webpack:///./src/app/components/dashboard/modules/modules.component.ts","webpack:///./src/app/components/dashboard/profile/profile.component.css","webpack:///./src/app/components/dashboard/profile/profile.component.html","webpack:///./src/app/components/dashboard/profile/profile.component.ts","webpack:///./src/app/components/dashboard/settings/settings.component.css","webpack:///./src/app/components/dashboard/settings/settings.component.html","webpack:///./src/app/components/dashboard/settings/settings.component.ts","webpack:///./src/app/components/dashboard/users-create/users-create.component.css","webpack:///./src/app/components/dashboard/users-create/users-create.component.html","webpack:///./src/app/components/dashboard/users-create/users-create.component.ts","webpack:///./src/app/components/dashboard/users-edit/users-edit.component.css","webpack:///./src/app/components/dashboard/users-edit/users-edit.component.html","webpack:///./src/app/components/dashboard/users-edit/users-edit.component.ts","webpack:///./src/app/components/dashboard/users/users.component.css","webpack:///./src/app/components/dashboard/users/users.component.html","webpack:///./src/app/components/dashboard/users/users.component.ts","webpack:///./src/app/components/do-setup/application/application.component.css","webpack:///./src/app/components/do-setup/application/application.component.html","webpack:///./src/app/components/do-setup/application/application.component.ts","webpack:///./src/app/components/do-setup/database/database.component.css","webpack:///./src/app/components/do-setup/database/database.component.html","webpack:///./src/app/components/do-setup/database/database.component.ts","webpack:///./src/app/components/do-setup/do-setup.component.css","webpack:///./src/app/components/do-setup/do-setup.component.html","webpack:///./src/app/components/do-setup/do-setup.component.ts","webpack:///./src/app/components/do-setup/setup-home/setup-home.component.css","webpack:///./src/app/components/do-setup/setup-home/setup-home.component.html","webpack:///./src/app/components/do-setup/setup-home/setup-home.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/guards/app-state.guard.ts","webpack:///./src/app/guards/check-app-installed.guard.ts","webpack:///./src/app/guards/require-logged.guard.ts","webpack:///./src/app/services/http-response-parser.service.ts","webpack:///./src/app/services/loader.service.ts","webpack:///./src/app/services/responsive.service.ts","webpack:///./src/app/services/setup.service.ts","webpack:///./src/app/services/tendoo-auth.service.ts","webpack:///./src/app/services/tendoo-fields.service.ts","webpack:///./src/app/services/tendoo-forms.service.ts","webpack:///./src/app/services/tendoo-modules.service.ts","webpack:///./src/app/services/tendoo-table.service.ts","webpack:///./src/app/services/tendoo-tabs.service.ts","webpack:///./src/app/services/tendoo-users.service.ts","webpack:///./src/app/services/tendoo.service.ts","webpack:///./src/app/shared/confirm-dialog/confirm-dialog.component.css","webpack:///./src/app/shared/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/shared/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/shared/fields/fields.component.css","webpack:///./src/app/shared/fields/fields.component.html","webpack:///./src/app/shared/fields/fields.component.ts","webpack:///./src/app/validators/matches.validator.ts","webpack:///./src/app/validators/number.validator.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/modules/material.module.ts","webpack:///./src/modules/routes.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'tendoo-setup';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/modules/material.module';\r\nimport { SetupHomeComponent } from './components/do-setup/setup-home/setup-home.component';\r\nimport { DatabaseComponent } from './components/do-setup/database/database.component';\r\nimport { ApplicationComponent } from './components/do-setup/application/application.component';\r\nimport { LoginComponent } from './components/auth/login/login.component';\r\nimport { LogoutComponent } from './components/auth/logout/logout.component';\r\nimport { RegisterComponent } from './components/auth/register/register.component';\r\nimport { UsersComponent } from './components/dashboard/users/users.component';\r\nimport { ModulesComponent } from './components/dashboard/modules/modules.component';\r\nimport { SettingsComponent } from './components/dashboard/settings/settings.component';\r\nimport { RoutesModule } from 'src/modules/routes.module';\r\nimport { DashboardHomeComponent } from './components/dashboard/home/home.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FieldsComponent } from './shared/fields/fields.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LoaderService } from './services/loader.service';\r\nimport { DoSetupComponent } from './components/do-setup/do-setup.component';\r\nimport { AuthComponent } from './components/auth/auth.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ModulesUploadComponent } from './components/dashboard/modules-upload/modules-upload.component';\r\nimport { ConfirmDialogComponent } from './shared/confirm-dialog/confirm-dialog.component';\r\nimport { UsersEditComponent } from './components/dashboard/users-edit/users-edit.component';\r\nimport { UsersCreateComponent } from './components/dashboard/users-create/users-create.component';\nimport { ProfileComponent } from './components/dashboard/profile/profile.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        SetupHomeComponent,\r\n        DatabaseComponent,\r\n        ApplicationComponent,\r\n        LoginComponent,\r\n        LogoutComponent,\r\n        RegisterComponent,\r\n        UsersComponent,\r\n        ModulesComponent,\r\n        SettingsComponent,\r\n        DashboardHomeComponent,\r\n        FieldsComponent,\r\n        DoSetupComponent,\r\n        AuthComponent,\r\n        HomeComponent,\r\n        DashboardComponent,\r\n        ModulesUploadComponent,\r\n        ConfirmDialogComponent,\r\n        UsersEditComponent,\r\n        UsersCreateComponent,\r\n        ProfileComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        FlexLayoutModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        MaterialModule,\r\n        RoutesModule,\r\n        FormsModule\r\n    ],\r\n    entryComponents: [\r\n        ConfirmDialogComponent\r\n    ],\r\n    providers: [\r\n        LoaderService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ValidatorFn, Validators, FormControl, AbstractControl, FormGroup } from \"@angular/forms\";\r\nimport { Field } from \"../interfaces/field\";\r\nimport { MatchesValidator } from \"../validators/matches.validator\";\r\nimport { Numbervalidator } from \"../validators/number.validator\";\r\n\r\nexport class ValidationGenerator {\r\n    /**\r\n     * generate a validator from field validation property\r\n     * @param string validation string;\r\n     * @return array of validaiton\r\n     */\r\n    static from( validation: string | any[] ): ValidatorFn[] | null {\r\n\r\n        \r\n        if ( validation ) {\r\n\r\n            /**\r\n             * make sure to skip \r\n             * validation of object\r\n             */\r\n            if ( typeof validation !== 'string' ) {\r\n                validation  =   (<any[]>validation).filter( rule => {\r\n                    return typeof rule === 'string'; \r\n                });\r\n                validation  =   (<any[]>validation).join( '|' );\r\n            }\r\n\r\n            let finalRules          =   [];\r\n            const rules             =   (<string>validation).split( '|' );\r\n            const minRule \t\t\t=\t/(min)\\:([0-9])+/g;\r\n            const maxRule \t\t\t=\t/(max)\\:([0-9])+/g;\r\n            const matchRule         =   /(same):(\\w+)/g;\r\n            let result;\r\n            \r\n            /**\r\n             * Loop and parses the rules\r\n             */\r\n            rules.forEach( rule => {\r\n                if ( rule == 'required' ) {\r\n                    finalRules.push( Validators.required );\r\n                } else if ( rule == 'email' ) {\r\n                    finalRules.push( Validators.email );\r\n                } else if( result =   minRule.exec( rule ) ) {\r\n                    finalRules.push( Validators.minLength( result[2] ) );\r\n                } else if( result = maxRule.exec( rule ) ) {\r\n                    finalRules.push( Validators.maxLength( result[2] ) );\r\n                } else if( result = matchRule.exec( rule ) ) {\r\n                    finalRules.push( MatchesValidator( result[2] ) )\r\n                } else if ( rule == 'number' ) {\r\n                    finalRules.push( Numbervalidator() )\r\n                }\r\n            });\r\n\r\n            return finalRules;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Extract FormControl from Field object\r\n     * @param array fields\r\n     * @return object of FormControl\r\n     */\r\n    static extractControls( fields:Field[], ignoreEmpty = false ): { [key:string] : FormControl } {\r\n        let formControl     =   {};\r\n        fields.forEach( field => {\r\n\r\n            /**\r\n             * the field.control is required in order to extract a control\r\n             * unless if that should ignore empty controls\r\n             */\r\n            if ( field.control === undefined && ignoreEmpty == false ) {\r\n                throw `Unable to use the validation control for the field : \"${field.name}\". Please make sure to define the '.control' property for this field.`\r\n            }\r\n\r\n            if ( field.control ) {\r\n                field.control.setValidators( this.from( field.validation ) );\r\n                formControl[ field.name ]   =   field.control;\r\n            }\r\n        });\r\n\r\n        return formControl;\r\n    }\r\n\r\n    /**\r\n     * Build FormControl from Field object\r\n     * create FormControl if it's not defined and call \r\n     * extractControls to build the FormControl\r\n     * @param Field object\r\n     * @return FormControl\r\n     */\r\n    static buildFormControls( fields: Field[] ): { [ key:string ] : FormControl } {\r\n        let formControls     =   {};\r\n        fields.forEach( ( field:Field ) => {\r\n            if ( field.control == undefined ) {\r\n                field.control   =   new FormControl( field.value ? field.value : null );\r\n            } else {\r\n                field.control.setValue( field.value );\r\n            }\r\n        });\r\n        \r\n        return this.extractControls( fields );\r\n    }\r\n\r\n    /**\r\n     * Build FormControl from Field object.\r\n     * Create FormControl if it's not defined and call \r\n     * extractControls to build the FormControl\r\n     * @param Field object\r\n     * @return FormControl\r\n     */\r\n    static buildFormControl( field: Field ): FormControl {\r\n        if ( field.control == undefined ) {\r\n            field.control   =   new FormControl( field.value || null );\r\n        } else {\r\n            field.control.setValue( field.value || null );\r\n        }\r\n        \r\n        return this.extractControls([ field ])[ field.name ];\r\n    }\r\n\r\n    /**\r\n     * touch all fields of a provided FormGroup\r\n     * @param form \r\n     */\r\n    static touchAllFields( form:FormGroup ) {\r\n        /**\r\n\t\t * Trigger touch even on all fields.\r\n\t\t * Start by looping tabs\r\n\t\t */\r\n\t\tObject.keys( form.controls ).forEach( field => {\r\n            form.get( field ).markAsTouched();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Build From Field Array\r\n     * @param array Field[]\r\n     * @return FormGroup\r\n     */\r\n    static buildFormGroup( fields: Field[] ): { fields: Field[], formGroup: FormGroup } {\r\n        fields.forEach( field => {\r\n            field.control = ValidationGenerator.buildFormControl( field )\r\n        });\r\n\r\n        return {\r\n            fields,\r\n            formGroup   :   new FormGroup( ValidationGenerator.extractControls( fields ) )\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Disable all fields\r\n     * @param array Field[]\r\n     * @return void\r\n     */\r\n    static deactivateFields( fields: Field[] ) {\r\n        fields.forEach( field =>  field.control.disable() );\r\n    }\r\n\r\n    /**\r\n     * Enable all fields\r\n     * @param array Field[]\r\n     * @return void\r\n     */\r\n    static enableFields( fields: Field[] ) {\r\n        fields.forEach( field => field.control.enable() );\r\n    }\r\n\r\n    /**\r\n     * Throw custom errors on fields and FormGroup\r\n     * @param array Field[]\r\n     * @param error FieldError\r\n     * @return void\r\n     */\r\n    static throwFieldsError( group: FormGroup, fields: Field[], errors ) {\r\n        for( let error in errors ) {\r\n            group.get( error ).setErrors({ error: true });\r\n            fields.forEach( field => {\r\n                if ( field.name === error ) {\r\n                    field.errors    =   errors[ field.name ];\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get valid value from FromGroup.\r\n     * This skip null value from the final object\r\n     * @param object FormGroup value\r\n     * @return object result\r\n     */\r\n    static noNullValue( group: FormGroup ) {\r\n        let finalData   =   {};\r\n        for( let key in group.value ) {\r\n            if ( group.value[ key ] !== null ) {\r\n                finalData[ key ]    =   group.value[ key ];\r\n            }\r\n        }\r\n\r\n        return finalData;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9hdXRoLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-content\\\">\\r\\n    <div \\r\\n        fxFlex.xs=\\\"90%\\\" \\r\\n        fxFlex.sm=\\\"70%\\\" \\r\\n        fxFlex.md=\\\"50%\\\" \\r\\n        fxFlex.lg=\\\"30%\\\" \\r\\n        fxFlex.xl=\\\"20%\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-auth',\r\n    templateUrl: './auth.component.html',\r\n    styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n    \r\n    constructor() { }\r\n    \r\n    ngOnInit() {\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form [formGroup]=\\\"loginForm\\\">\\r\\n    <mat-card color=\\\"primary\\\">\\r\\n        <mat-card-title>Authenticating</mat-card-title>\\r\\n        <mat-card-content>\\r\\n            <app-fields [field]=\\\"field\\\" [group]=\\\"loginForm\\\" *ngFor=\\\"let field of fields\\\"></app-fields>\\r\\n        </mat-card-content>\\r\\n        <mat-divider *ngIf=\\\"!tendoo.isLoading\\\"></mat-divider>\\r\\n        <mat-progress-bar *ngIf=\\\"tendoo.auth.isLoading\\\" mode=\\\"indeterminate\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\"></mat-progress-bar>\\r\\n        <mat-card-actions>\\r\\n            <button [disabled]=\\\"tendoo.auth.isLoading\\\" (click)=\\\"login()\\\" mat-button=\\\"\\\">\\r\\n                Login\\r\\n            </button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    fields: Field[]     =   [];\r\n    loginForm: FormGroup;\r\n\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        private snackbar: MatSnackBar,\r\n        private router: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.fields     =   [\r\n            {\r\n                label: 'Username',\r\n                name: 'username',\r\n                type: 'text',\r\n                value: 'admin',\r\n                description: 'Username saved during the registration.',\r\n            }, {\r\n                label: 'Password',\r\n                name: 'password',\r\n                type: 'password',\r\n                value: 'sanches',\r\n                description: 'Only you knows what is the password',\r\n            }\r\n        ];\r\n\r\n        const fields    =   ValidationGenerator.buildFormControls( this.fields );\r\n        this.loginForm  =   new FormGroup( fields );\r\n        // this.login();\r\n    }\r\n\r\n    login() {\r\n        ValidationGenerator.touchAllFields( this.loginForm );\r\n\r\n        if ( ! this.loginForm.valid ) {\r\n            return this.snackbar.open( 'Unable to login, the login form as some erors', 'OK', {\r\n                duration: 3000\r\n            });\r\n        }\r\n\r\n        this.tendoo.auth.login( this.loginForm.value ).subscribe( (result:any) => {\r\n            /**\r\n             * once the user is connected\r\n             * let's save the credential on \r\n             * each outgoing request\r\n             */\r\n            this.tendoo.auth.setCredentials( result.user, result.token );\r\n            this.snackbar.open( result.message, null, {\r\n                duration: 3000\r\n            });\r\n\r\n            /**\r\n             * if the intented has been defined. \r\n             * let's redirect the user to that location\r\n             */\r\n            let path    =   this.tendoo.auth.intented;\r\n            if ( path  !== undefined ) {\r\n                return this.router.navigateByUrl( path );\r\n            }\r\n\r\n            this.router.navigateByUrl( 'dashboard/users' );\r\n\r\n        }, (result: HttpErrorResponse ) => {\r\n            this.snackbar.open( result.error.message );\r\n        })\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9sb2dvdXQvbG9nb3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  logout works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TendooAuthService } from 'src/app/services/tendoo-auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-logout',\r\n    templateUrl: './logout.component.html',\r\n    styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n    \r\n    constructor(\r\n        private auth: TendooAuthService,\r\n        private route: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.auth.logout();\r\n        this.route.navigateByUrl( '/auth/login' );\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  register works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"#aside-nav-list {\\r\\n    padding: 0%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0NBQ2YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNhc2lkZS1uYXYtbGlzdCB7XHJcbiAgICBwYWRkaW5nOiAwJTtcclxufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFill>\\r\\n    <div>\\r\\n        <mat-toolbar color=\\\"primary\\\" fxFlex fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <span>Tendoo CMS</span>\\r\\n            <div>\\r\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"profileMenu\\\">\\r\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">person</mat-icon>\\r\\n                </button>\\r\\n                <mat-menu #profileMenu=\\\"matMenu\\\">\\r\\n                    <button routerLink=\\\"/dashboard/profile\\\" mat-menu-item>Profile</button>\\r\\n                    <button routerLink=\\\"/auth/logout\\\" mat-menu-item>Logout</button>\\r\\n                </mat-menu>\\r\\n            </div>\\r\\n        </mat-toolbar>\\r\\n    </div>\\r\\n    \\r\\n    <div fxFlex fxLayout=\\\"row\\\">\\r\\n        <div fxFlex=\\\"250px\\\"  fxLayout=\\\"column\\\" class=\\\"aside-menu\\\">\\r\\n            <div fxFlex>\\r\\n                <mat-nav-list id=\\\"aside-nav-list\\\">\\r\\n                    <mat-list-item [routerLink]=\\\"link.href\\\" *ngFor=\\\"let link of asideLink\\\">\\r\\n                        <a matLine >{{ link.label }}</a>\\r\\n                    </mat-list-item>\\r\\n                </mat-nav-list>\\r\\n            </div>    \\r\\n        </div>\\r\\n        <mat-divider [vertical]=\\\"true\\\"></mat-divider>\\r\\n        <div fxFlex=\\\"auto\\\" fxLayout=\\\"column\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Link } from 'src/app/interfaces/link';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    asideLink: Link[]   =   [];\r\n    \r\n    constructor() { \r\n        this.asideLink      =   [\r\n            {\r\n                label: 'Dashboard',\r\n                namespace: 'dashboard',\r\n                href: '/dashboard',                \r\n            }, {\r\n                label: 'Users',\r\n                namespace: 'users',\r\n                href: '/dashboard/users',                \r\n            }, {\r\n                label: 'Modules',\r\n                namespace: 'users',\r\n                href: '/dashboard/modules',                \r\n            }\r\n        ]\r\n    }\r\n    \r\n    ngOnInit() {\r\n    }\r\n    \r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<div fxFill fxFlex=\\\"row\\\" class=\\\"bg-content\\\">\\r\\n    Hellow\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class DashboardHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbW9kdWxlcy11cGxvYWQvbW9kdWxlcy11cGxvYWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7Q0FDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9tb2R1bGVzLXVwbG9hZC9tb2R1bGVzLXVwbG9hZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\">\\r\\n    <div fxFlex=\\\"150px\\\" fxLayout=\\\"row\\\" class=\\\"bg-primary p-3\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Upload a module</h1>\\r\\n            <span class=\\\"mat-headline\\\">upload a new module to extend Tendoo CMS features</span>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\r\\n            <button routerLink=\\\"/dashboard/modules\\\" mat-button color=\\\"warn\\\">List of modules</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 1px\\\" *ngIf=\\\"tendoo.modules.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n    <mat-divider *ngIf=\\\"!tendoo.modules.isLoading\\\"></mat-divider>\\r\\n    <div class=\\\"p-2 bg-content\\\" fxFlex>\\r\\n        <mat-card>\\r\\n            <mat-card-title>Upload a file</mat-card-title>\\r\\n            <mat-card-content>\\r\\n                <p>choose the file you would like to upload on Tendoo CMS</p>\\r\\n                <input (change)=\\\"handleFileInput($event.target.files)\\\" type=\\\"file\\\" name=\\\"\\\" id=\\\"\\\">\\r\\n            </mat-card-content>\\r\\n            <mat-card-actions>\\r\\n                <button [disabled]=\\\"tendoo.modules.isLoading\\\" (click)=\\\"upload()\\\" mat-button color=\\\"primary\\\">Upload</button>\\r\\n            </mat-card-actions>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\r\nimport { ConfirmDialogObject } from 'src/app/interfaces/confirm-dialog';\r\nimport { ResponsiveService } from 'src/app/services/responsive.service';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-modules-upload',\r\n    templateUrl: './modules-upload.component.html',\r\n    styleUrls: ['./modules-upload.component.css']\r\n})\r\nexport class ModulesUploadComponent implements OnInit {\r\n    file: FileList;\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private responsive: ResponsiveService,\r\n        private snackbar: MatSnackBar,\r\n        public tendoo: TendooService,\r\n        private router: Router,\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n    }\r\n\r\n    handleFileInput( file ) {\r\n        this.file   =   file;\r\n    }\r\n\r\n    /**\r\n     * Trigger when the user want's to upload \r\n     * a module\r\n     * @return void\r\n     */\r\n    upload() {\r\n        if ( this.file === undefined || this.file.length === 0 ) {\r\n            return this.snackbar.open( 'You need to select a file before uploading.', null, {\r\n                duration: 3000\r\n            });\r\n        }\r\n\r\n        this.dialog.open( ConfirmDialogComponent, {\r\n            id      :   'upload.module',\r\n            data \t:\t<ConfirmDialogObject>{\r\n                title \t\t    :\t'Would you like to confirm ?',\r\n\t\t\t\tmessage \t:\t'Would you like to upload this module.',\r\n\t\t\t\tbuttons \t:\t[{\r\n\t\t\t\t\tlabel \t:\t'Ok',\r\n\t\t\t\t\tonClick \t: () => {\r\n\t\t\t\t\t\tthis.dialog\r\n\t\t\t\t\t\t\t.getDialogById( 'upload.module' )\r\n                            .close();    \r\n\r\n                        this.handleUpload();\r\n\t\t\t\t\t}\r\n\t\t\t\t},{\r\n\t\t\t\t\tlabel \t:\t'Cancel',\r\n\t\t\t\t\tcolor \t:\t'warn',\r\n\t\t\t\t\tonClick \t: () => {\r\n\t\t\t\t\t\tthis.dialog\r\n\t\t\t\t\t\t\t.getDialogById( 'upload.module' )\r\n\t\t\t\t\t\t\t.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n            }, \r\n            height \t:\tthis.responsive.define({\r\n\t\t\t\tlg \t: \t'60%',\r\n\t\t\t\txl  : \t'60%',\r\n\t\t\t\tmd \t: \t'70%',\r\n\t\t\t\tsm \t:\t'70%',\r\n\t\t\t\txs \t:\t'70%'\r\n\t\t\t}),\r\n\t\t\twidth \t:\tthis.responsive.define({\r\n\t\t\t\tlg \t: \t'60%',\r\n\t\t\t\txl  : \t'60%',\r\n\t\t\t\tmd \t: \t'70%',\r\n\t\t\t\tsm \t:\t'70%',\r\n\t\t\t\txs \t:\t'70%'\r\n\t\t\t}),\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Handled uploaded file\r\n     * @return void\r\n     */\r\n    handleUpload() {\r\n        this.tendoo.modules.uploadFile( this.file.item(0) ).subscribe( (result:AsyncResponse) => {\r\n            /**\r\n             * check if a module require a migration\r\n             */\r\n            if ( result.action === 'check-migration' ) {\r\n\r\n            }\r\n\r\n            this.snackbar.open( result.message, null, {\r\n                duration: 3000\r\n            });\r\n\r\n            this.router.navigateByUrl( 'dashboard/modules' );\r\n\r\n        }, ( result: HttpErrorResponse ) => {\r\n            /**\r\n             * An erru ash occured, let's\r\n             * display what happened\r\n             */\r\n            this.snackbar.open( result.error.message, null, {\r\n                duration: 5000\r\n            });\r\n        });\r\n    }\r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbW9kdWxlcy9tb2R1bGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvbW9kdWxlcy9tb2R1bGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\">\\r\\n    <div fxFlex=\\\"150px\\\" fxLayout=\\\"row\\\" class=\\\"bg-primary p-3\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Modules</h1>\\r\\n            <span class=\\\"mat-headline\\\">Display and manage all available modules</span>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\r\\n            <button routerLink=\\\"/dashboard/modules/upload\\\" mat-button color=\\\"warn\\\">Upload a module</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 1px\\\" *ngIf=\\\"tendoo.modules.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n    <mat-divider  *ngIf=\\\"!tendoo.modules.isLoading\\\"></mat-divider>\\r\\n    <div class=\\\"p-2 bg-content\\\" fxFlex fxLayoutGap=\\\"3em\\\">\\r\\n        <div \\r\\n            style=\\\"height:200px\\\"\\r\\n            *ngFor=\\\"let module of modules\\\"\\r\\n            fxFlex.xs=\\\"100%\\\" \\r\\n            fxFlex.sm=\\\"50%\\\" \\r\\n            fxFlex.md=\\\"50%\\\" \\r\\n            fxFlex.lg=\\\"25%\\\" \\r\\n            fxFlex.xl=\\\"20%\\\">\\r\\n            <mat-card fxFill fxLayout=\\\"column\\\">\\r\\n                <mat-card-title>{{ module.name }}</mat-card-title>\\r\\n                <mat-card-content fxFlex>{{ module.description }}</mat-card-content>\\r\\n                <mat-card-actions fxLayoutAlign=\\\"space-between\\\">\\r\\n                    <button [disabled]=\\\"tendoo.modules.isLoading\\\" (click)=\\\"loadModules()\\\" mat-button color=\\\"primary\\\">Details</button>\\r\\n                    <button [disabled]=\\\"tendoo.modules.isLoading\\\" *ngIf=\\\"module.enabled\\\" (click)=\\\"setStatus( module, 'disable' )\\\"  mat-button color=\\\"primary\\\">Disable</button>\\r\\n                    <button [disabled]=\\\"tendoo.modules.isLoading\\\" *ngIf=\\\"! module.enabled\\\" (click)=\\\"setStatus( module, 'enable' )\\\"  mat-button color=\\\"accent\\\">Enable</button>\\r\\n                    <button [disabled]=\\\"tendoo.modules.isLoading\\\" (click)=\\\"delete( module )\\\" mat-button color=\\\"warn\\\">Delete</button>\\r\\n                </mat-card-actions>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n        <div>\\r\\n            <mat-card *ngIf=\\\"modules.length === 0\\\">\\r\\n                <mat-card-title>No module has been yet uploaded</mat-card-title>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { MatDialog, MatSnackBar } from '@angular/material';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nimport { ConfirmDialogObject } from 'src/app/interfaces/confirm-dialog';\r\nimport { ResponsiveService } from 'src/app/services/responsive.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { TendooModule } from 'src/app/interfaces/module.interface';\r\n\r\n@Component({\r\n    selector: 'app-modules',\r\n    templateUrl: './modules.component.html',\r\n    styleUrls: ['./modules.component.css']\r\n})\r\nexport class ModulesComponent implements OnInit {\r\n    modules: any[]      =   [];\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        private snackbar: MatSnackBar,\r\n        public dialog: MatDialog,\r\n        private responsive: ResponsiveService\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.loadModules();\r\n    }\r\n    \r\n    loadModules() {\r\n        this.tendoo.modules.getAll().subscribe( (modules:any[]) => {\r\n            this.modules    =   Object.values( modules );\r\n        })\r\n    }\r\n\r\n    private __deleteModule( module ) {\r\n        this.tendoo.modules.deleteModule( module.namespace ).subscribe( (result:AsyncResponse ) => {\r\n            this.snackbar.open( result.message );\r\n            this.loadModules();\r\n        }, ( result:HttpErrorResponse ) => {\r\n            console.log( result );\r\n        })\r\n    }\r\n\r\n    /**\r\n     * delete a module\r\n     * @return void\r\n     */\r\n    delete( module ) {\r\n        this.dialog.open( ConfirmDialogComponent, {\r\n            id: 'delete.module',\r\n            data: <ConfirmDialogObject>{\r\n                title       :   'Confirm Your Action',\r\n                message     :   'Would you like to delete this module ? This action can\\'t be cancelled.',\r\n                buttons \t:\t[{\r\n\t\t\t\t\tlabel \t:\t'Ok',\r\n\t\t\t\t\tonClick \t: () => {\r\n\t\t\t\t\t\tthis.dialog\r\n\t\t\t\t\t\t\t.getDialogById( 'delete.module' )\r\n                            .close(); \r\n                        this.__deleteModule( module );\r\n\t\t\t\t\t}\r\n\t\t\t\t},{\r\n\t\t\t\t\tlabel \t:\t'Cancel',\r\n\t\t\t\t\tcolor \t:\t'warn',\r\n\t\t\t\t\tonClick \t: () => {\r\n\t\t\t\t\t\tthis.dialog\r\n\t\t\t\t\t\t\t.getDialogById( 'delete.module' )\r\n\t\t\t\t\t\t\t.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n            },\r\n            height \t:\tthis.responsive.define({\r\n\t\t\t\tlg \t: \t'30%',\r\n\t\t\t\txl  : \t'30%',\r\n\t\t\t\tmd \t: \t'40%',\r\n\t\t\t\tsm \t:\t'60%',\r\n\t\t\t\txs \t:\t'80%'\r\n\t\t\t}),\r\n\t\t\twidth \t:\tthis.responsive.define({\r\n\t\t\t\tlg \t: \t'40%',\r\n\t\t\t\txl  : \t'40%',\r\n\t\t\t\tmd \t: \t'40%',\r\n\t\t\t\tsm \t:\t'70%',\r\n\t\t\t\txs \t:\t'95%'\r\n\t\t\t}),\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Change a module\r\n     * status\r\n     * @return void\r\n     */\r\n    setStatus( module, status: string ) {\r\n        switch( status ) {\r\n            case 'enable': \r\n                this.__proceedEnableModule( module );\r\n            break;\r\n            case 'disable':\r\n                this.__proceedDisableModule( module );\r\n            break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proceed Enable Module\r\n     * @return void\r\n     */\r\n    private __proceedEnableModule( module ) {\r\n        this.dialog.open( ConfirmDialogComponent, {\r\n            data: <ConfirmDialogObject>{\r\n                title: 'Please confirm your action',\r\n                message: 'Would you like to enable this module ?',\r\n                buttons: [\r\n                    {\r\n                        label: 'Yes', \r\n                        namespace: 'yes',\r\n                        onClick: () => {\r\n                            this.__enableModule( module );\r\n                        }\r\n                    }, {\r\n                        label: 'No', \r\n                        namespace: 'no',\r\n                        onClick: () => {\r\n                            this.dialog\r\n                                .getDialogById( 'confirm-enable-module' )\r\n                                .close();\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            id: 'confirm-enable-module'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Proceed Disable Module\r\n     * @return void\r\n     */\r\n    private __proceedDisableModule( module ) {\r\n        this.dialog.open( ConfirmDialogComponent, {\r\n            data: <ConfirmDialogObject>{\r\n                title: 'Please confirm your action',\r\n                message: 'Would you like to disable this module ?',\r\n                buttons: [\r\n                    {\r\n                        label: 'Yes', \r\n                        namespace: 'yes',\r\n                        onClick: () => {\r\n                            this.__disableModule( module );\r\n                        }\r\n                    }, {\r\n                        label: 'No', \r\n                        namespace: 'no',\r\n                        onClick: () => {\r\n                            this.dialog\r\n                                .getDialogById( 'disable-enable-module' )\r\n                                .close();\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            id: 'disable-enable-module'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Enable module after\r\n     * the action has been confirmed\r\n     * @return void\r\n     */\r\n    private __enableModule( module:TendooModule )\r\n    {\r\n        this.tendoo.modules.enable( module.namespace ).subscribe( response => {\r\n            this.loadModules();\r\n            this.dialog\r\n                .getDialogById( 'confirm-enable-module' )\r\n                .close();\r\n        }, ( result: HttpErrorResponse ) => {\r\n            this.snackbar.open( result.error.message, null, {\r\n                duration: 4000\r\n            });\r\n            this.dialog\r\n                .getDialogById( 'confirm-enable-module' )\r\n                .close();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Enable module after\r\n     * the action has been confirmed\r\n     * @return void\r\n     */\r\n    private __disableModule( module )\r\n    {\r\n        this.tendoo.modules.disable( module.namespace ).subscribe( response => {\r\n            this.loadModules();\r\n            this.dialog\r\n                .getDialogById( 'disable-enable-module' )\r\n                .close();\r\n        }, ( result: HttpErrorResponse ) => {\r\n            this.snackbar.open( result.error.message, null, {\r\n                duration: 4000\r\n            });\r\n            this.dialog\r\n                .getDialogById( 'disable-enable-module' )\r\n                .close();\r\n        })\r\n    }\r\n}\r\n","module.exports = \".avatar-image {\\r\\n    width: 100px;\\r\\n    border-radius: 50px;\\r\\n}\\r\\n.profile-container {\\r\\n    position: relative;\\r\\n    top: -53px;\\r\\n}\\r\\n.profile-background {\\r\\n    background: #EEE;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isb0JBQW9CO0NBQ3ZCO0FBQ0Q7SUFDSSxtQkFBbUI7SUFDbkIsV0FBVztDQUNkO0FBQ0Q7SUFDSSxpQkFBaUI7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdmF0YXItaW1hZ2Uge1xyXG4gICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcclxufVxyXG4ucHJvZmlsZS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAtNTNweDtcclxufVxyXG4ucHJvZmlsZS1iYWNrZ3JvdW5kIHtcclxuICAgIGJhY2tncm91bmQ6ICNFRUU7XHJcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\n    <div fxFlex=\\\"200px\\\" fxLayout=\\\"row\\\" class=\\\"bg-primary p-3\\\">\\n        <div fxFlex fxLayout=\\\"row\\\">\\n            <div style=\\\"margin-right: 20px\\\">\\n                <img class=\\\"avatar-image\\\" src=\\\"http://laravel-5703.go/tendoo/assets/images/avatar.png\\\" alt=\\\"\\\">\\n            </div>\\n            <div>\\n                <h1 class=\\\"mat-display-1 mb-0\\\">{{ auth.getUser().username }}</h1>\\n                <span class=\\\"mat-title\\\">{{ auth.getUser().role.name }}</span>\\n            </div>\\n        </div>\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\n        </div>\\n    </div>\\n    <div fxFlex fxLayout=\\\"row\\\" class=\\\"profile-background\\\" fxFill fxLayoutAlign=\\\"center\\\">\\n        <div fxFlex=\\\"97%\\\" class=\\\"profile-container\\\">\\n            <mat-card class=\\\"p-0\\\" *ngIf=\\\"tabs\\\">\\n                <mat-card-title class=\\\"p-1 mb-0\\\">Profile Settings</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content class=\\\"p-0\\\">\\n                    <ng-container *ngFor=\\\"let tab of tabs\\\">\\n                        <form [formGroup]=\\\"tab.form\\\"></form>\\n                        <mat-tab-group>\\n                            <mat-tab label=\\\"Security\\\" (click)=\\\"setTabActive( tab )\\\">\\n                                <div class=\\\"p-2\\\">\\n                                    <app-fields *ngFor=\\\"let field of tab.fields\\\" [field]=\\\"field\\\" [group]=\\\"tab.form\\\"></app-fields>\\n                                </div>\\n                            </mat-tab>\\n                        </mat-tab-group>\\n                    </ng-container>\\n                </mat-card-content>\\n                <mat-divider></mat-divider>\\n                <mat-card-actions class=\\\"p-1 m-0\\\">\\n                    <button mat-button (click)=\\\"saveTabSettings( activeTab )\\\" color=\\\"primary\\\">Save</button>\\n                </mat-card-actions>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TendooService } from 'src/app/services/tendoo.service';\nimport { TendooAuthService } from 'src/app/services/tendoo-auth.service';\nimport { forkJoin } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { Tab } from 'src/app/interfaces/tab';\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\nimport { MatSnackBar } from '@angular/material';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.css'],\n    host: {\n        style: `height: 100%`\n    }\n})\nexport class ProfileComponent implements OnInit {\n    auth: TendooAuthService;\n    tabs: Tab[];\n    profileForm: FormGroup;\n\n    constructor(\n        public tendoo: TendooService,\n        private snackbar: MatSnackBar\n    ) { \n        this.auth   =   this.tendoo.auth;\n    }\n    \n    ngOnInit() {\n        forkJoin(\n            this.tendoo.tabs.getTabs( 'dashboard.profile' )\n        ).subscribe( results => {\n            this.tabs   =   (<Tab[]>results[0]);\n            this.tabs.forEach( (tab, index ) => {\n                index === 0 ? tab.active = true : tab.active = false;\n                const fields    =   ValidationGenerator.buildFormControls( tab.fields );\n                tab.form        =   new FormGroup( fields );\n            });\n        })\n    }\n\n    /**\n     * set a tab as active\n     * @param tab Tab Object\n     * @return void\n     */\n    setTabActive( tab ) {\n        tab.active  =   tab.active === undefined ? true : ! tab.active;\n    }\n\n    saveTabSettings( tab: Tab ) {\n        ValidationGenerator.touchAllFields( tab.form );\n\n        if ( ! tab.form.valid ) {\n            return this.snackbar.open( 'Unable to proceed the form is not valid.', 'OK', {\n                duration: 3000\n            });\n        }\n\n        /**\n         * Save the settings to the database\n         */\n        ValidationGenerator.deactivateFields( tab.fields );\n\n        this.tendoo.forms\n            .saveForm( \n                'dashboard.profile', \n                ValidationGenerator.noNullValue( tab.form ) \n            ).subscribe( (response: AsyncResponse ) => {\n\n            /**\n             * Enable back field and show success\n             * message\n             */\n            ValidationGenerator.enableFields( tab.fields );\n            this.snackbar.open( response.message, 'OK', {\n                duration: 3000\n            });\n\n        }, ( result:HttpErrorResponse ) => {\n            ValidationGenerator.enableFields( tab.fields );\n            ValidationGenerator.throwFieldsError( tab.form, tab.fields, result.error.errors );\n            this.snackbar.open( result.error.message, 'OK', {\n                duration: 3000\n            });\n        })\n    }\n    \n    /**\n     * get active tab\n     * @return object;\n     */\n    get activeTab() {\n        return this.tabs.filter( tab => tab.active )[0];\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  settings works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3VzZXJzLWNyZWF0ZS91c2Vycy1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\r\\n    <div fxFlex=\\\"150px\\\" fxLayout=\\\"row\\\" class=\\\"bg-primary p-3\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Users</h1>\\r\\n            <span class=\\\"mat-title\\\">create new users</span>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\r\\n            <button routerLink=\\\"/dashboard/users\\\" mat-button color=\\\"warn\\\">Back to users</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 1px\\\" *ngIf=\\\"tendoo.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n    <div class=\\\"p-2 bg-content\\\" fxLayout=\\\"row\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\">\\r\\n        <mat-card fxFlex>\\r\\n            <mat-card-title>\\r\\n                Create a new user\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n                <form [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\r\\n                    <app-fields *ngFor=\\\"let field of fields\\\" [field]=\\\"field\\\" [group]=\\\"form\\\"></app-fields>\\r\\n                </form>\\r\\n            </mat-card-content>\\r\\n            <mat-divider></mat-divider>\\r\\n            <mat-card-actions>\\r\\n                <button [disabled]=\\\"tendoo.isLoading\\\" mat-button (click)=\\\"submit()\\\" color=\\\"primary\\\">Submit</button>\\r\\n            </mat-card-actions>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { forkJoin } from 'rxjs';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormUrl } from 'src/app/interfaces/form-url';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-users-create',\r\n    templateUrl: './users-create.component.html',\r\n    styleUrls: ['./users-create.component.css']\r\n})\r\nexport class UsersCreateComponent implements OnInit {\r\n    \r\n    fields: Field[]     =   [];\r\n    form: FormGroup;\r\n    formConfig: {[key: string]: any};\r\n\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        public snackbar: MatSnackBar,\r\n        private router: Router\r\n    ) {}\r\n    \r\n    ngOnInit() {\r\n        forkJoin(\r\n            this.tendoo.forms.getForm( 'dashboard.users.create' ),\r\n        ).subscribe( forkResult => {\r\n            this.fields         =   <Field[]>forkResult[0][ 'fields' ];\r\n            this.formConfig     =   <FormUrl>forkResult[0][ 'url' ]\r\n            const fields        =   ValidationGenerator.buildFormControls( this.fields );\r\n            this.form           =   new FormGroup( fields );\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Submit the current form\r\n     * @return void\r\n     */\r\n    submit() {\r\n        ValidationGenerator.touchAllFields( this.form );\r\n\r\n        if ( ! this.form.valid ) {\r\n            this.snackbar.open( 'The form has some error(s). Please check the form and try again.' );\r\n        }\r\n\r\n        this.tendoo.post( this.formConfig.post, this.form.value ).subscribe( (result:AsyncResponse ) => {\r\n            this.snackbar.open( result.message, 'OK', {\r\n                duration: 4000\r\n            });\r\n            this.router.navigateByUrl( 'dashboard/users' );\r\n        }, ( result: HttpErrorResponse ) => {\r\n            this.snackbar.open( result.error.message, 'OK', {\r\n                duration: 4000\r\n            });\r\n\r\n            /**\r\n             * make sure to hightlight \r\n             * the fields which has a problem\r\n             */\r\n            const errors     =   result.error.errors;\r\n            for( let error in errors ) {\r\n                this.form.get( error ).setErrors({ error: true });\r\n                this.fields.forEach( field => {\r\n                    if ( field.name === error ) {\r\n                        field.errors    =   errors[ field.name ];\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3VzZXJzLWVkaXQvdXNlcnMtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\r\\n    <div fxFlex=\\\"150px\\\" fxLayout=\\\"row\\\" class=\\\"bg-primary p-3\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Users</h1>\\r\\n            <span class=\\\"mat-title\\\">create new users</span>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\r\\n            <button routerLink=\\\"/dashboard/users\\\" mat-button color=\\\"warn\\\">Back to users</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 1px\\\" *ngIf=\\\"tendoo.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n    <div class=\\\"p-2 bg-content\\\" fxLayout=\\\"row\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\">\\r\\n        <mat-card fxFlex>\\r\\n            <mat-card-title>\\r\\n                Edit a user\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n                <form [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\r\\n                    <app-fields *ngFor=\\\"let field of fields\\\" [field]=\\\"field\\\" [group]=\\\"form\\\"></app-fields>\\r\\n                </form>\\r\\n            </mat-card-content>\\r\\n            <mat-divider></mat-divider>\\r\\n            <mat-card-actions>\\r\\n                <button [disabled]=\\\"tendoo.users.isLoading\\\" mat-button (click)=\\\"submit()\\\" color=\\\"primary\\\">Update</button>\\r\\n                <button [disabled]=\\\"tendoo.users.isLoading\\\" mat-button (click)=\\\"submit( true )\\\" color=\\\"primary\\\">Update & Return</button>\\r\\n            </mat-card-actions>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { FormUrl } from 'src/app/interfaces/form-url';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-users-edit',\r\n    templateUrl: './users-edit.component.html',\r\n    styleUrls: ['./users-edit.component.css']\r\n})\r\nexport class UsersEditComponent implements OnInit {\r\n    \r\n    id: number;\r\n    fields: Field[]     =   [];\r\n    formConfig: FormUrl;   \r\n    form: FormGroup;\r\n\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        private activeRoute: ActivatedRoute,\r\n        private snackbar: MatSnackBar,\r\n        private route: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.id    =   +this.activeRoute.snapshot.paramMap.get( 'id' );\r\n        forkJoin(\r\n            this.tendoo.forms.getForm( 'dashboard.users.edit', this.id ),\r\n        ).subscribe( forkResult => {\r\n            this.fields         =   <Field[]>forkResult[0][ 'fields' ];\r\n            this.formConfig     =   <FormUrl>forkResult[0][ 'url' ]\r\n            const fields        =   ValidationGenerator.buildFormControls( this.fields );\r\n            this.form           =   new FormGroup( fields );\r\n        })\r\n    }\r\n    \r\n    submit( shouldReturn: boolean ) {\r\n        ValidationGenerator.touchAllFields( this.form );\r\n\r\n        if ( ! this.form.valid ) {\r\n            this.snackbar.open( 'The form has some errors, please check it and try again ! ', 'OK', {\r\n                duration: 4000\r\n            });\r\n        }\r\n\r\n        this.tendoo.users.edit( this.id, this.form.value ).subscribe( (result:AsyncResponse) => {\r\n            this.snackbar.open( result.message, 'OK', {\r\n                duration: 3000\r\n            });\r\n\r\n            /**\r\n             * if the user has requested, let's take him back where he has been\r\n             */\r\n            if ( shouldReturn ) {\r\n                this.route.navigateByUrl( '/dashboard/users' );\r\n            }\r\n        }, ( response: HttpErrorResponse ) => {\r\n            this.snackbar.open( response.error.message );\r\n\r\n            /**\r\n             * make sure to hightlight \r\n             * the fields which has a problem\r\n             */\r\n            const errors     =   response.error.errors;\r\n            for( let error in errors ) {\r\n                this.form.get( error ).setErrors({ error: true });\r\n                this.fields.forEach( field => {\r\n                    if ( field.name === error ) {\r\n                        field.errors    =   errors[ field.name ];\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n","module.exports = \":host {\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7Q0FDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC91c2Vycy91c2Vycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" style=\\\"overflow-y:auto\\\">\\r\\n    <div fxFlex=\\\"150px\\\" fxLayout=\\\"row\\\" class=\\\"bg-primary p-3\\\">\\r\\n        <div fxFlex>\\r\\n            <h1 class=\\\"mat-display-1 mb-0\\\">Users</h1>\\r\\n            <span class=\\\"mat-title\\\">Displays and manage all registered users</span>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" fxLayoutAlign=\\\"end start\\\">\\r\\n            <button routerLink=\\\"/dashboard/users/create\\\" mat-button color=\\\"warn\\\">Create a user</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <mat-progress-bar color=\\\"warn\\\" style=\\\"height: 1px\\\" *ngIf=\\\"tendoo.users.isLoading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n    <mat-divider  *ngIf=\\\"!tendoo.modules.isLoading\\\"></mat-divider>\\r\\n    <div class=\\\"p-2 bg-content\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\">\\r\\n        <table matSort (matSortChange)=\\\"sortData($event)\\\" mat-table [dataSource]=\\\"source\\\" class=\\\"mat-elevation-z8\\\" fxFlex>\\r\\n            <!--- Note that these columns can be defined in any order.\\r\\n                The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n                <ng-container *ngFor=\\\"let column of columns\\\" [matColumnDef]=\\\"column\\\">\\r\\n                    <ng-container  *ngIf=\\\"column === 'id'\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px\\\">\\r\\n                            <mat-checkbox class=\\\"example-margin\\\" (change)=\\\"checkAllCheckboxes()\\\" [(ngModel)]=\\\"checkAll\\\"></mat-checkbox>\\r\\n                        </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px\\\">\\r\\n                            <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"element.$checked\\\"></mat-checkbox>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"column === '$actions'\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef width=\\\"80\\\">{{ rawColumns[ column ].label }}</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <mat-menu #tableEntryMenu=\\\"matMenu\\\">\\r\\n                                <button (click)=\\\"triggerMenu( menu, element )\\\" *ngFor=\\\"let menu of element.$actions\\\" mat-menu-item>{{ menu.label }}</button>\\r\\n                            </mat-menu>\\r\\n                            \\r\\n                            <button mat-icon-button [matMenuTriggerFor]=\\\"tableEntryMenu\\\">\\r\\n                                <mat-icon>more_vert</mat-icon>\\r\\n                            </button>\\r\\n                        </td>\\r\\n                    </ng-container>    \\r\\n                    <ng-container *ngIf=\\\"reservedColumns.indexOf( column ) === -1\\\">\\r\\n                        <th [mat-sort-header]=\\\"column\\\" mat-header-cell *matHeaderCellDef>{{ rawColumns[ column ].label }}</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                            <!--\\r\\n                                this help to replace the provided value with a replace value\\r\\n                                provided on the column definition\\r\\n                            -->\\r\\n                            <ng-container *ngIf=\\\"rawColumns[ column ].replace !== undefined\\\">\\r\\n                                <ng-container *ngIf=\\\"rawColumns[ column ].type === 'boolean'\\\">\\r\\n                                    <ng-container *ngIf=\\\"element[ column ] === false\\\">\\r\\n                                        {{ rawColumns[ column ].replace[0] }}\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"element[ column ] === true\\\">\\r\\n                                        {{ rawColumns[ column ].replace[1] }}\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\\"element[ column ] !== true && element[ column ] !== false\\\">\\r\\n                                        {{ rawColumns[ column ].replace[ '$default' ] ? rawColumns[ column ].replace[ '$default' ] : 'N/A' }}\\r\\n                                    </ng-container>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                            <ng-container *ngIf=\\\"rawColumns[ column ].replace === undefined\\\">\\r\\n                                {{ element[ column ] }} \\r\\n                            </ng-container>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                </ng-container>\\r\\n                \\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"columns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: columns;\\\"></tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TendooUsersService } from 'src/app/services/tendoo-users.service';\r\nimport { TendooService } from 'src/app/services/tendoo.service';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { TableColumnInterface } from 'src/app/interfaces/table-column.interface';\r\nimport { TableEntryInterface } from 'src/app/interfaces/table-entry.interface';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatSnackBar } from '@angular/material';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nimport { ConfirmDialogObject } from 'src/app/interfaces/confirm-dialog';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\n\r\nexport interface PeriodicElement {\r\n    id: number;\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-users',\r\n    templateUrl: './users.component.html',\r\n    styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n    columns: string[]                       =   [];\r\n    rawColumns: TableColumnInterface        =   {};\r\n    source:TableEntryInterface[]            =   [];\r\n    reservedColumns: string[]               =   [ '$actions' ];\r\n    checkAll: any;\r\n\r\n    constructor(\r\n        public tendoo: TendooService,\r\n        public router: Router,\r\n        public dialog: MatDialog,\r\n        public snackbar: MatSnackBar\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        forkJoin(\r\n            this.tendoo.users.getUsers(),\r\n            this.tendoo.tables.getColumns( 'dashboard.users' )\r\n        )\r\n        .subscribe( ( response ) => {\r\n            this.rawColumns     =   <TableColumnInterface>response[1];\r\n            this.columns        =   Object.keys( this.rawColumns );\r\n            this.source         =   <TableEntryInterface[]>response[0];\r\n        })\r\n    }\r\n\r\n    sortData( event ) {\r\n        console.log( event );\r\n    }\r\n\r\n    /**\r\n     * trigger menu\r\n     * @param object menu\r\n     * @return void\r\n     */\r\n    triggerMenu( menu, row ) {\r\n        /**\r\n         * build the url based on the \r\n         * configuration.\r\n         */\r\n        const url   =   menu.url.replace( \"#\", row[ menu.index || 'id' ] );\r\n\r\n        if ( menu.confirm !== undefined ) {\r\n            console.log( menu.namespace );\r\n            this.dialog.open( ConfirmDialogComponent, {\r\n                id: menu.namespace,\r\n                data: <ConfirmDialogObject>{\r\n                    title: menu.confirm.title,\r\n                    message: menu.confirm.message,\r\n                    buttons: [\r\n                        {\r\n                            label: 'Ok',\r\n                            namespace: 'ok',\r\n                            onClick: () => {\r\n                                this.__proceedAction( menu, url );\r\n                            }\r\n                        }, {\r\n                            label: 'Cancel',\r\n                            namespace: 'cancel',\r\n                            onClick: () => {\r\n                                this.dialog.getDialogById( menu.namespace )\r\n                                    .close();\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n        } else {\r\n            this.__proceedAction( menu, url );\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Proceed action after having\r\n     * checked if that action require a confirmation\r\n     * @param object menu\r\n     * @return void\r\n     */\r\n    private __proceedAction( menu, url ) {\r\n        switch( menu.type ) {\r\n            case 'DELETE':\r\n                this.tendoo.delete( url ).subscribe( (result: AsyncResponse ) => {\r\n                    this.ngOnInit();\r\n                    this.dialog.getDialogById( menu.namespace ).close();\r\n                    return this.snackbar.open( result.message, 'OK', {\r\n                        duration: 4000 \r\n                    });\r\n                }, (result: HttpErrorResponse ) => {\r\n                    this.dialog.getDialogById( menu.namespace ).close();\r\n                    return this.snackbar.open( result.error.message, 'OK', {\r\n                        duration: 4000 \r\n                    });\r\n                })\r\n            break;\r\n            case 'GET':\r\n                this.tendoo.get( url )\r\n            break;\r\n            case 'GOTO':\r\n                this.router.navigateByUrl( url );\r\n            break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Make sure to toggle all\r\n     * checkboxes when the main checkbox\r\n     * is clicked\r\n     * @return void\r\n     */\r\n    checkAllCheckboxes() {\r\n        this.source.forEach( checkbox => {\r\n            checkbox.$checked       =   this.checkAll;\r\n        })\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvYXBwbGljYXRpb24vYXBwbGljYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"applicationForm\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-title>Configuring Application</mat-card-title>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-card-content>\\r\\n            <p style=\\\"margin: 30px 0 20px\\\">The connexion with the database is successful. Now we need to setup the admin account.</p>\\r\\n            <app-fields [field]=\\\"field\\\" [group]=\\\"applicationForm\\\" *ngFor=\\\"let field of fields\\\"></app-fields>\\r\\n        </mat-card-content>\\r\\n        <mat-divider *ngIf=\\\"! setup.isLoading\\\"></mat-divider>\\r\\n        <mat-progress-bar *ngIf=\\\"setup.isLoading\\\" mode=\\\"indeterminate\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\"></mat-progress-bar>\\r\\n        <mat-card-actions>\\r\\n            <button [disabled]=\\\"setup.isLoading\\\" (click)=\\\"setupApplication()\\\" mat-button>Setup Application</button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { SetupService } from 'src/app/services/setup.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\n\r\n@Component({\r\n    selector: 'app-application',\r\n    templateUrl: './application.component.html',\r\n    styleUrls: ['./application.component.css']\r\n})\r\nexport class ApplicationComponent implements OnInit {\r\n    fields: Field[]     =   [];\r\n    applicationForm: FormGroup;\r\n    constructor(\r\n        public setup: SetupService,\r\n        private snackbar: MatSnackBar,\r\n        private router: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.fields     =   [\r\n            {\r\n                name: 'application_name',\r\n                value: 'Tendoo CMS',\r\n                type: 'text',\r\n                validation: 'required',\r\n                description: 'What will be the name of your new installation ?',\r\n                label: 'Application Name'\r\n            }, {\r\n                name: 'username',\r\n                value: 'admin',\r\n                type: 'text',\r\n                validation: 'required|min:5',\r\n                description: 'What is the main account username ?',\r\n                label: 'Username'\r\n            },  {\r\n                name: 'password',\r\n                value: '',\r\n                type: 'password',\r\n                validation: 'required|min:6',\r\n                description: 'Provide a unique and unpredictable password for the main user.',\r\n                label: 'Password'\r\n            }, {\r\n                name: 'password_confirm',\r\n                value: '',\r\n                type: 'password',\r\n                validation: 'required|matches:password',\r\n                description: 'Must be the same as password.',\r\n                label: 'Confirm'\r\n            }, {\r\n                name: 'email',\r\n                value: '',\r\n                type: 'email',\r\n                validation: 'required|email',\r\n                description: 'What is the email used for the main user ?',\r\n                label: 'Email'\r\n            }\r\n        ];\r\n\r\n        const fields    =   ValidationGenerator.buildFormControls( this.fields );\r\n        this.applicationForm    =   new FormGroup( fields );\r\n    }\r\n\r\n    setupApplication() {\r\n        ValidationGenerator.touchAllFields( this.applicationForm );\r\n\r\n        if ( ! this.applicationForm.valid ) {\r\n            return this.snackbar.open( 'Unable to proceed, the form has one or more errors.', null, {\r\n                duration: 3000\r\n            });\r\n        }\r\n\r\n        this.setup.application( this.applicationForm.value ).subscribe( ( result: AsyncResponse ) => {\r\n            this.snackbar.open( result.message );\r\n            this.router.navigateByUrl( '/auth/login' );\r\n        }, ( result: HttpErrorResponse ) => {\r\n            this.snackbar.open( result.error.message );\r\n            this.fields.forEach( field => {\r\n                let formCtrl;\r\n                if ( result.error.errors[ field.name ] !== undefined ){\r\n                    field.control.setErrors({ error : true });\r\n                    field.errors    =   result.error.errors[ field.name ];\r\n                }\r\n            })\r\n        });\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvZGF0YWJhc2UvZGF0YWJhc2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"setupForm\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-title>Configuring Database</mat-card-title>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-card-content>\\r\\n            <p style=\\\"margin: 30px 0 20px\\\">In order to install Tendoo CMS, please provide all the informations required to connect to the database.</p>\\r\\n            <app-fields [field]=\\\"field\\\" [group]=\\\"setupForm\\\" *ngFor=\\\"let field of fields\\\"></app-fields>\\r\\n        </mat-card-content>\\r\\n        <mat-divider *ngIf=\\\"! setup.isLoading\\\"></mat-divider>\\r\\n        <mat-progress-bar *ngIf=\\\"setup.isLoading\\\" mode=\\\"indeterminate\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\"></mat-progress-bar>\\r\\n        <mat-card-actions>\\r\\n            <button [disabled]=\\\"setup.isLoading\\\" (click)=\\\"setupDatabase()\\\" mat-button>Setup Database</button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Field } from 'src/app/interfaces/field';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { SetupService } from 'src/app/services/setup.service';\r\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-database',\r\n    templateUrl: './database.component.html',\r\n    styleUrls: ['./database.component.css']\r\n})\r\nexport class DatabaseComponent implements OnInit {\r\n    \r\n    fields: Field[]     =   [];\r\n    setupForm: FormGroup;\r\n\r\n    constructor(\r\n        private snackbar: MatSnackBar,\r\n        public setup: SetupService,\r\n        private router: Router\r\n    ) { }\r\n    \r\n    ngOnInit() {\r\n        this.fields     =   [\r\n            {\r\n                appearance: 'fill',\r\n                name: 'hostname',\r\n                label: 'Host',\r\n                description: 'provide a url to the host',\r\n                type: 'text',\r\n                validation: 'required',\r\n                value: 'localhost',\r\n            }, {\r\n                appearance: 'fill',\r\n                name: 'username',\r\n                label: 'Username',\r\n                description: 'provide a username for the host',\r\n                type: 'text',\r\n                validation: 'required',\r\n                value: 'root',\r\n            }, {\r\n                appearance: 'fill',\r\n                name: 'password',\r\n                label: 'Password',\r\n                description: 'provide a password for the host',\r\n                type: 'password',\r\n            }, {\r\n                appearance: 'fill',\r\n                name: 'db_name',\r\n                label: 'Database',\r\n                description: 'provide the database name',\r\n                type: 'text',\r\n                validation: 'required',\r\n                value: 'laravel-ng'\r\n            }, {\r\n                appearance: 'fill',\r\n                name: 'db_prefix',\r\n                label: 'Tables Prefix',\r\n                description: 'provide a unique table prefix',\r\n                type: 'text',\r\n                value: 'tendoo_'\r\n            }\r\n        ];\r\n\r\n        const fields    =   ValidationGenerator.buildFormControls( this.fields );\r\n        this.setupForm  =   new FormGroup( fields );\r\n    }    \r\n\r\n    /**\r\n     * Setup database\r\n     * @return void\r\n     */\r\n    setupDatabase() {\r\n        ValidationGenerator.touchAllFields( this.setupForm );\r\n\r\n        if ( ! this.setupForm.valid ) {\r\n            return this.snackbar.open( 'Unable to proceed, the database form is invalid !', null, {\r\n                duration: 3000\r\n            });\r\n        }\r\n\r\n        this.__submitForm();\r\n    }\r\n\r\n    /**\r\n     * Submit Form\r\n     * @return void\r\n     */\r\n    private __submitForm() {\r\n\r\n        this.setup.setupDatabase( this.setupForm.value ).subscribe( (result: AsyncResponse ) => {\r\n            this.snackbar.open( result.message )\r\n            this.router.navigateByUrl( '/do-setup/application' );\r\n        }, (response: HttpErrorResponse ) => {\r\n            this.snackbar.open( response.error.message, null, {\r\n                duration: 3000\r\n            });\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvZG8tc2V0dXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div fxFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-content\\\">\\r\\n    <div \\r\\n        fxFlex.xs=\\\"90%\\\" \\r\\n        fxFlex.sm=\\\"70%\\\" \\r\\n        fxFlex.md=\\\"50%\\\" \\r\\n        fxFlex.lg=\\\"40%\\\" \\r\\n        fxFlex.xl=\\\"40%\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-do-setup',\r\n  templateUrl: './do-setup.component.html',\r\n  styleUrls: ['./do-setup.component.css']\r\n})\r\nexport class DoSetupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvc2V0dXAtaG9tZS9zZXR1cC1ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card>\\r\\n    <mat-card-title>Welcome on Tendoo CMS</mat-card-title>\\r\\n    <mat-card-content>\\r\\n        Tendoo CMS is ready to be installed. Let's get started\\r\\n    </mat-card-content>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-card-actions>\\r\\n        <a routerLink=\\\"/do-setup/database\\\" mat-button>Database Configuration</a>\\r\\n    </mat-card-actions>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-setup-home',\r\n    templateUrl: './setup-home.component.html',\r\n    styleUrls: ['./setup-home.component.css']\r\n})\r\nexport class SetupHomeComponent implements OnInit {\r\n    \r\n    constructor() { }\r\n    \r\n    ngOnInit() {\r\n    }\r\n    \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  home works!\\r\\n</p>\\r\\n<ul>\\r\\n  <li><a routerLink=\\\"do-setup\\\">Setup</a></li>\\r\\n  <li><a routerLink=\\\"auth/login\\\">Login</a></li>\\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { SetupService } from '../services/setup.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PreventAppInstalledGuard implements CanActivate {\r\n    constructor(\r\n        private setup: SetupService,\r\n        private router: Router,\r\n        private snackbar: MatSnackBar,\r\n    ){}\r\n\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<boolean> | Promise<boolean> | boolean {\r\n        return new Promise( ( resolve, reject ) => {\r\n            // return resolve( true );\r\n            this.setup.ping().subscribe( result => {\r\n            }, result => {\r\n                switch( result.error.class ) {\r\n                    case 'Tendoo/Core/Exceptions/TendooInstalledException':\r\n                        this.router.navigateByUrl( '' );\r\n                        this.snackbar.open( result.error.message, null, {\r\n                            duration: 3000\r\n                        });\r\n                        return resolve( false );\r\n                }\r\n                return resolve( true );\r\n            })\r\n        })\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { SetupService } from '../services/setup.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PreventAppNotInstalledGuard implements CanActivate {\r\n    constructor(\r\n        private setup: SetupService,\r\n        private router: Router,\r\n        private snackbar: MatSnackBar,\r\n    ){}\r\n    \r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n            return new Promise( ( resolve, reject ) => {\r\n                this.setup.ping().subscribe( result => {\r\n                }, result => {\r\n                    switch( result.error.class ) {\r\n                        case 'Tendoo/Core/Exceptions/TendooNotInstalledException':\r\n                        this.router.navigateByUrl( 'do-setup' );\r\n                        this.snackbar.open( result.error.message, null, {\r\n                            duration: 3000\r\n                        });\r\n                        return resolve( false );\r\n                    }\r\n                    return resolve( true );\r\n                })\r\n            })\r\n        }\r\n    }\r\n    ","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoaderService } from '../services/loader.service';\r\nimport { TendooService } from '../services/tendoo.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RequireLoggedGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private tendoo: TendooService\r\n    ){}\r\n\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n            if ( Object.values( LoaderService.headers ).length === 0 ) {\r\n                this.tendoo.auth.intented  =   state.url;\r\n                this.router.navigateByUrl( 'auth/login?notice=login-required' );\r\n                return true;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    ","import { Injectable } from '@angular/core';\r\nimport { AsyncResponse } from '../interfaces/async-response';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HttpResponseParserService {\r\n    \r\n    pipes   =   [];\r\n\r\n    constructor(\r\n        private route: Router,\r\n        private activeRoute: ActivatedRoute,\r\n        private snackbar: MatSnackBar\r\n    ) {\r\n        this.pipes.push( ( response: AsyncResponse ) => {\r\n            return new Promise( resolve => {\r\n                if ([\r\n                    'Tendoo/Core/Exceptions/TendooNotInstalledException',                            \r\n                    'Tendoo/Core/Exceptions/TendooInstalledException',                                \r\n                ].indexOf( response.class ) !== -1 ) {\r\n                    this.snackbar.open( response.message, 'OK', {\r\n                        duration: 4000\r\n                    });\r\n                }\r\n                return resolve( response );\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Parse Http Response\r\n     * @param http: AsyncResponse\r\n     */\r\n    parse( response: AsyncResponse ) {\r\n        return new Promise( resolve => {\r\n            this.pipes.forEach( async ( parser ) => {\r\n                response  =   await parser( response );\r\n            });\r\n            \r\n            resolve( response );\r\n        })\r\n    }\r\n\r\n    /**\r\n     * push http response parser\r\n     * @param any\r\n     * @return void\r\n     */\r\n    pushParser( parser ) {\r\n        this.pipes.push( parser );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpResponseParserService } from './http-response-parser.service';\r\nimport { AsyncResponse } from '../interfaces/async-response';\r\n\r\ndeclare const tendoo;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n    isLoading   =   false;\r\n    baseUrl     =   tendoo.base_url; \r\n    static headers  =   {};\r\n\r\n    constructor(\r\n        protected http: HttpClient,\r\n        private httpParser: HttpResponseParserService\r\n    ) {}\r\n\r\n    /**\r\n     * Submit post request\r\n     * @param {string} url to access\r\n     * @param data data to submit\r\n     */\r\n    post( url:string, data: { [ key:string] : any } ) {\r\n        return new Observable( ( observer ) => {\r\n            this.isLoading  =   true;\r\n            return this.__formDataResponse( <Observable<AsyncResponse>>this.http.post( url, data, {\r\n                headers: LoaderService.headers\r\n            }), observer )\r\n        });\r\n    }\r\n\r\n    private __formDataResponse( http: Observable<AsyncResponse>, observer ) {\r\n        return http.subscribe( (result: AsyncResponse) => {\r\n            this.httpParser.parse( result ).then( () => {\r\n                this.isLoading  =   false;\r\n                observer.next( result );\r\n                observer.complete();\r\n            })\r\n        }, (result: HttpErrorResponse ) => {\r\n            this.httpParser.parse( result.error ).then( () => {\r\n                this.isLoading  =   false;\r\n                observer.error( result );\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Submit put request\r\n     * @param {string} url to access\r\n     * @param data data to submit\r\n     */\r\n    put( url:string, data: { [ key:string] : any } ) {\r\n        return new Observable( ( observer ) => {\r\n            this.isLoading  =   true;\r\n            return this.__formDataResponse( <Observable<AsyncResponse>>this.http.put( url, data, {\r\n                headers: LoaderService.headers\r\n            }), observer )\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Submit DELETE request\r\n     * @param {string} url to access\r\n     * @param data data to submit\r\n     */\r\n    delete( url ) {\r\n        return new Observable( ( observer ) => {\r\n            this.isLoading  =   true;\r\n            return this.http.delete( url, {\r\n                headers: LoaderService.headers\r\n            }).subscribe( result => {\r\n                this.isLoading  =   false;\r\n                observer.next( result );\r\n                observer.complete();\r\n            }, (result: HttpErrorResponse ) => {\r\n                this.httpParser.parse( result.error ).then( () => {\r\n                    this.isLoading  =   false;\r\n                    observer.error( result );\r\n                });\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Submit get request\r\n     * @param {string} url to access\r\n     * @param data data to submit\r\n     */\r\n    get( url ) {\r\n        return new Observable( ( observer ) => {\r\n            this.isLoading  =   true;\r\n            return this.http.get( url, {\r\n                headers: LoaderService.headers\r\n            }).subscribe( (result: AsyncResponse ) => {\r\n                this.httpParser.parse( result ).then( () => {\r\n                    this.isLoading  =   false;\r\n                    observer.next( result );\r\n                    observer.complete();\r\n                })\r\n            }, (result: HttpErrorResponse ) => {\r\n                this.httpParser.parse( result.error ).then( () => {\r\n                    this.isLoading  =   false;\r\n                    observer.error( result );\r\n                });\r\n            })\r\n        });\r\n    }\r\n}\r\n","/* TYPESCRIPT */\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ResponsiveService {\r\n\t\r\n\tconstructor() {\r\n\t\twindow.onresize = this.callSubscribers\r\n\t}\r\n\t\r\n\tprivate callbacks: Function[] = [];\r\n\t\r\n\t// taken from bootstrap's grid system\r\n\tprivate breakpoints = {\r\n\t\txs: '(max-width:575px)',\r\n\t\tsm: '(min-width:576px) and (max-width:767px)',\r\n\t\tmd: '(min-width:768px) and (max-width:991px)',\r\n\t\tlg: '(min-width:992px) and (max-width:1199px)',\r\n\t\txl: '(min-width:1200px)'\r\n\t};\r\n\t\r\n\tprivate xsOrs = this.breakpoints.xs + ',' + this.breakpoints.sm;\r\n\t\r\n\tpublic isXS = () => this.ruleIsMet(this.breakpoints.xs);\r\n\tpublic isSM = () => this.ruleIsMet(this.breakpoints.sm);\r\n\tpublic isMD = () => this.ruleIsMet(this.breakpoints.md);\r\n\tpublic isLG = () => this.ruleIsMet(this.breakpoints.lg);\r\n\tpublic isXL = () => this.ruleIsMet(this.breakpoints.xl);\r\n\t\r\n\tpublic isSmallScreen =  () => this.ruleIsMet(this.xsOrs);\r\n\t\r\n\tpublic registerChangeCallback = (f: Function) => {\r\n\t\tthis.callbacks.push(f);\r\n\t}\r\n\t\r\n\tprivate ruleIsMet = (rule: string) => window.matchMedia(rule).matches;\r\n\t\r\n\tprivate callSubscribers = () => {\r\n\t\tlet len = this.callbacks.length;\r\n\t\t\r\n\t\tif(len == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet i = 0;\r\n\t\t\r\n\t\tfor(;i < len; i++) {\r\n\t\t\tthis.callbacks[i]();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * define values\r\n\t * @param object\r\n\t */\r\n\tpublic define( values: DevicesBreakpoints ) {\r\n\t\tif ( this.isXS() ) {\r\n\t\t\treturn values.xs;\r\n\t\t} else if ( this.isSM() ) {\r\n\t\t\treturn values.sm;\r\n\t\t} else if ( this.isMD() ) {\r\n\t\t\treturn values.md;\r\n\t\t} else if ( this.isLG() ) {\r\n\t\t\treturn values.lg;\r\n\t\t} else if ( this.isXL() ) {\r\n\t\t\treturn values.xl;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface DevicesBreakpoints {\r\n\txl : string;\r\n\tlg : string;\r\n\tmd : string;\r\n\tsm : string;\r\n\txs : string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { LoaderService } from './loader.service';\r\nimport { AsyncResponse } from '../interfaces/async-response';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SetupService extends LoaderService {\r\n\r\n    /**\r\n     * Send post request to the server for db configuration\r\n     * @param fields form field for database configuration\r\n     */\r\n    setupDatabase( fields ) {\r\n        return this.post( this.baseUrl + 'tendoo/do-setup/database', fields );\r\n    }\r\n\r\n    application( fields ) {\r\n        return this.post( this.baseUrl + 'tendoo/do-setup/application', fields );\r\n    }\r\n\r\n    ping(): Observable<AsyncResponse> {\r\n        return <Observable<AsyncResponse>>this.get( this.baseUrl + 'tendoo/ping' );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoaderService } from './loader.service';\r\nimport { User } from '../interfaces/user-interface';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooAuthService extends LoaderService {\r\n\r\n    private user: User;\r\n    intented: string;\r\n\r\n    /**\r\n     * attempt to log the user.\r\n     * @param credentials object user credentials\r\n     */\r\n    login( credentials ) {\r\n        return this.post( this.baseUrl + 'tendoo/auth/login', credentials );\r\n    } \r\n\r\n    /**\r\n     * Store the user credentials\r\n     * @param user User Object\r\n     * @param token session token\r\n     */\r\n    setCredentials( user: User, token: string ) {\r\n        LoaderService.headers    =   {\r\n            'X-AUTH-TOKEN'  : token\r\n        }\r\n\r\n        this.user   =   user;\r\n    }\r\n\r\n    /**\r\n     * Logout the logged user\r\n     * @return void\r\n     */\r\n    logout() {\r\n        this.user   =   undefined;\r\n        LoaderService.headers    =   {};\r\n    }\r\n\r\n    /**\r\n     * return the logged user\r\n     * @return User\r\n     */\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TendooAuthService } from './tendoo-auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooFieldsService extends TendooAuthService {\r\n    \r\n    /**\r\n     * Get fieds for a specific namespace\r\n     * @param string field namespace\r\n     * @return Objservable.\r\n     */\r\n    getFields( namespace:string ): Observable<{}> {\r\n        return this.get( this.baseUrl + 'tendoo/fields/' + namespace );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoaderService } from './loader.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooFormsService extends LoaderService {\r\n    /**\r\n     * get a form\r\n     * @param namespace form namespace\r\n     * @param index entry index\r\n     */\r\n    getForm( namespace:string, index?: number ) {\r\n        let url   =   this.baseUrl + 'tendoo/forms/' + namespace;\r\n\r\n        if ( index !== undefined ) {\r\n            url     +=  '/' + index\r\n        }\r\n\r\n        return this.get( url );\r\n    }\r\n\r\n    /**\r\n     * save a form\r\n     */\r\n    saveForm( namespace: string, data : { [ key: string ] : any }, index?: number ) {\r\n        let url     =   this.baseUrl + 'tendoo/forms/' + namespace;\r\n        return this.post( url, data );\r\n    }\r\n    \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TendooAuthService } from './tendoo-auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooModulesService extends TendooAuthService {\r\n    getAll() {\r\n        return this.get( this.baseUrl + 'tendoo/modules' );\r\n    }\r\n\r\n    /**\r\n     * upload a zip file to Tendoo CMS \r\n     * server\r\n     * @param file\r\n     * @return void \r\n     */\r\n    uploadFile( file: File ) {\r\n        const endpoint = 'your-destination-url';\r\n        const formData: FormData = new FormData();\r\n        formData.append( 'module', file, file.name);\r\n        return this.post( this.baseUrl + 'tendoo/modules/upload', formData );\r\n    }\r\n\r\n    /**\r\n     * delete a module\r\n     * @param string module namespace\r\n     * @return void\r\n     */\r\n    deleteModule( namespace:string ) {\r\n        return this.delete( this.baseUrl + 'tendoo/modules/' + namespace );\r\n    }\r\n\r\n    /**\r\n     * Enable a module\r\n     * @param string module namespace\r\n     * @return {Observable} AsyncResponse\r\n     */\r\n    enable( module: string ) {\r\n        return this.post( this.baseUrl + 'tendoo/modules/enable', { module });\r\n    }\r\n\r\n    /**\r\n     * Disable a module\r\n     * @param string module namespace\r\n     * @return {Observable} AsyncReponse\r\n     */\r\n    disable( module: string ) {\r\n        return this.post( this.baseUrl + 'tendoo/modules/disable', { module });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TendooAuthService } from './tendoo-auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooTableService extends TendooAuthService {\r\n\r\n    getColumns( table: string ) {\r\n        return this.get( this.baseUrl + 'tendoo/tables/' + table );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { LoaderService } from './loader.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TendooTabsService extends LoaderService {\n    slug: string    =   'tendoo/tabs';\n    getTabs( name: string ) {\n        return this.get( `${this.baseUrl}${this.slug}/${name}` );\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { TendooAuthService } from './tendoo-auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooUsersService extends TendooAuthService {\r\n    /**\r\n     * get users\r\n     * @return json\r\n     */\r\n    getUsers() {\r\n        return this.get( this.baseUrl + 'tendoo/users' );\r\n    }\r\n\r\n    /**\r\n     * edit a user using a provided id\r\n     * @param int user id\r\n     * @param object data to update\r\n     * @return Objservable of AsyncResponse\r\n     */\r\n    edit( id, data ) {\r\n        return this.put( this.baseUrl + 'tendoo/users/' + id, data );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoaderService } from './loader.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TendooAuthService } from './tendoo-auth.service';\r\nimport { TendooFieldsService } from './tendoo-fields.service';\r\nimport { TendooModulesService } from './tendoo-modules.service';\r\nimport { TendooUsersService } from './tendoo-users.service';\r\nimport { TendooTableService } from './tendoo-table.service';\r\nimport { TendooFormsService } from './tendoo-forms.service';\r\nimport { HttpResponseParserService } from './http-response-parser.service';\r\nimport { TendooTabsService } from './tendoo-tabs.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TendooService extends LoaderService {\r\n    protected http;\r\n    constructor( \r\n        http: HttpClient,\r\n        httpParser: HttpResponseParserService,\r\n        public auth: TendooAuthService,\r\n        public fields: TendooFieldsService,\r\n        public modules: TendooModulesService,\r\n        public users: TendooUsersService,\r\n        public tables: TendooTableService,\r\n        public forms: TendooFormsService,\r\n        public tabs: TendooTabsService,\r\n    ) {\r\n        super( http, httpParser );\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb25maXJtLWRpYWxvZy9jb25maXJtLWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div fxFlex=\\\"auto\\\" FxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n\\t<div class=\\\"text-center\\\" fxFlex.lg=\\\"80%\\\" fxFlex.md=\\\"80%\\\" fxFlex.xs=\\\"100%\\\" fxFlex.sm=\\\"100%\\\">\\r\\n\\t\\t<p class=\\\"mat-display-1 m-0 py-3\\\">\\r\\n\\t\\t\\t{{ data.title }}\\r\\n\\t\\t</p>\\r\\n\\t\\t<p class=\\\"mat-title\\\">{{ data.message }}</p>\\r\\n\\t</div>\\r\\n</div>\\r\\n<mat-divider></mat-divider>\\r\\n<div fxLayout=\\\"row\\\" fxFlex=\\\"50px\\\" fxLayoutAlign=\\\"stretch stretch\\\">\\r\\n\\t<ng-container *ngFor=\\\"let button of data.buttons\\\">\\r\\n\\t\\t<button (click)=\\\"handle( button )\\\" fxFlex=\\\"auto\\\" mat-button=\\\"\\\">\\r\\n\\t\\t\\t<span  class=\\\"mat-subheading-2\\\">{{ button.label }}</span>\\r\\n\\t\\t</button>\\r\\n\\t\\t<mat-divider [vertical]=\\\"true\\\"></mat-divider>\\r\\n\\t</ng-container>\\r\\n</div>\"","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar } from '@angular/material';\r\nimport { Button } from '../../interfaces/button';\r\nimport { ConfirmDialogObject } from 'src/app/interfaces/confirm-dialog';\r\n\r\n@Component({\r\n\tselector: 'app-confirm-dialog',\r\n\ttemplateUrl: './confirm-dialog.component.html',\r\n\tstyleUrls: ['./confirm-dialog.component.css'],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\thost: {\r\n\t\tstyle: 'flex-direction: column; box-sizing: border-box; display: flex; height: 100%;',      \r\n\t}\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\t\r\n\tconstructor(\r\n\t\tpublic dialog: MatDialogRef<ConfirmDialogComponent>,\r\n\t\t@Inject( MAT_DIALOG_DATA ) public data: ConfirmDialogObject,\r\n\t\tprivate snackBar: MatSnackBar\r\n\t) { }\r\n\t\r\n\tngOnInit() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handle Press Events\r\n\t * @param Button\r\n\t * @return void\r\n\t */\r\n\thandle( button: Button ) {\r\n\t\tif ( typeof button.onClick == 'function' ) {\r\n\t\t\tbutton.onClick();\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n","module.exports = \"mat-form-field {\\r\\n    margin-bottom: 10px;\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2ZpZWxkcy9maWVsZHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9CQUFvQjtJQUNwQixZQUFZO0NBQ2YiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvZmllbGRzL2ZpZWxkcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<ng-container [formGroup]=\\\"group\\\">\\r\\n\\t<!-- text field field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"[ 'text', 'password', 'email' ].indexOf( field.type ) != -1\\\" class=\\\"example-full-width w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<input [readonly]=\\\"field.readonly\\\" [type]=\\\"field.type\\\" [formControlName]=\\\"field.name\\\" matInput [placeholder]=\\\"field.label\\\" [value]=\\\"field.value ? field.value : ''\\\">\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- date time field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'datetime'\\\" class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<input [readonly]=\\\"field.readonly\\\" [formControlName]=\\\"field.name\\\" matInput [matDatepicker]=\\\"picker\\\" [placeholder]=\\\"field.label\\\">\\r\\n\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n\\t\\t<mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- select field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'select'\\\" class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<mat-select [formControlName]=\\\"field.name\\\" [placeholder]=\\\"field.label\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let option of field.options\\\" [value]=\\\"option.value\\\">\\r\\n\\t\\t\\t{{ option.label }}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'multiple_select'\\\" multiple class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<mat-select [formControlName]=\\\"field.name\\\" [placeholder]=\\\"field.label\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let option of field.options\\\" [value]=\\\"option.value\\\">\\r\\n\\t\\t\\t{{ option.label }}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- textarea field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'textarea'\\\" class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<textarea [formControlName]=\\\"field.name\\\" matInput [placeholder]=\\\"field.label\\\"></textarea>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- text field field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"[ 'number' ].indexOf( field.type ) != -1\\\" class=\\\"example-full-width w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<input [readonly]=\\\"field.readonly\\\" [formControlName]=\\\"field.name\\\" matInput type=\\\"number\\\" [placeholder]=\\\"field.label\\\" [value]=\\\"field.value ? field.value : ''\\\">\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\t\\t\\r\\n\\t</mat-form-field>\\r\\n\\r\\n\\t<!-- button -->\\r\\n\\t<button [type]=\\\"field.type\\\" *ngIf=\\\"[ 'button' ].indexOf( field.type ) !== -1\\\" (click)=\\\"field.onClick( group )\\\" mat-raised-button color=\\\"primary\\\">{{ field.label }}</button>\\r\\n</ng-container>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Field } from '../../interfaces/field';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\n\r\n@Component({\r\n\tselector: 'app-fields',\r\n\ttemplateUrl: './fields.component.html',\r\n\tstyleUrls: ['./fields.component.css']\r\n})\r\nexport class FieldsComponent implements OnInit {\r\n\t@Input( 'field' ) field: Field;\r\n\t@Input( 'group' ) group: FormGroup;\r\n\tconstructor() { \r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Check change state\r\n\t */\r\n\tchange() {\r\n\t\t// console.log( this.field.control );\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tif ( [ 'text', 'email', 'select', 'password', 'textarea', 'datetime', 'number', 'multiple_select', 'button' ].indexOf( this.field.type ) === -1 ) {\r\n\t\t\tthrow( `Unable to render the field '${this.field.name}' with the field type : '${this.field.type}'. This type is not supported.`);\r\n\t\t}\r\n\r\n\t\tif ( ! ( this.group.get( this.field.name ) instanceof AbstractControl ) ) {\r\n\t\t\tthrow `Unable to retreive the field \"${this.field.name}\" from the [group] provided to the \"app-fields\" component.`\r\n\t\t}\r\n\r\n\t\tthis[ this.field.name ] \t=\tthis.field.control;\r\n\t}\r\n\t\r\n}\r\n","import { ValidatorFn, FormGroup, AbstractControl } from \"@angular/forms\";\r\n\r\nexport function MatchesValidator( matches ): ValidatorFn {\r\n    return ( control: AbstractControl ): {[ key: string ] : any } => {\r\n        if( control.value !== control.parent.get( matches ).value ) {\r\n            return {\r\n                'matches'   :   {\r\n                    'formControl'       :   control.parent.get( matches ),\r\n                    'formControlName'   :   matches\r\n                }\r\n            };\r\n        }       \r\n        return null;\r\n    }\r\n}","import { ValidatorFn, AbstractControl } from \"@angular/forms\";\r\n\r\nexport function Numbervalidator(): ValidatorFn {\r\n    return ( control: AbstractControl ): {[ key: string ] : any } => {\r\n        if( ! /^\\d+$/.exec( control.value ) ) {\r\n            return {\r\n                'number'   :   true\r\n            };\r\n        }       \r\n        return null;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { NgModule } from '@angular/core';\r\nimport { MatCheckboxModule, MatDatepickerModule, MatFormFieldModule, MatInputModule, MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule, MatMenuModule, MatSidenavModule, MatToolbarModule, MatCardModule, MatDividerModule, MatExpansionModule, MatGridListModule, MatListModule, MatTabsModule, MatButtonModule, MatIconModule, MatProgressSpinnerModule, MatProgressBarModule, MatRippleModule, MatDialogModule, MatSnackBarModule, MatPaginatorModule, MatSortModule, MatTableModule } from '@angular/material';\r\n\r\nconst MaterialModules   =   [\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatRippleModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule\r\n];\r\n\r\n@NgModule({\r\n    imports: MaterialModules,\r\n    exports: MaterialModules,\r\n})\r\nexport class MaterialModule {}","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { SetupHomeComponent } from \"src/app/components/do-setup/setup-home/setup-home.component\";\r\nimport { DatabaseComponent } from \"src/app/components/do-setup/database/database.component\";\r\nimport { ApplicationComponent } from \"src/app/components/do-setup/application/application.component\";\r\nimport { LoginComponent } from \"src/app/components/auth/login/login.component\";\r\nimport { LogoutComponent } from \"src/app/components/auth/logout/logout.component\";\r\nimport { RegisterComponent } from \"src/app/components/auth/register/register.component\";\r\nimport { DashboardHomeComponent } from \"src/app/components/dashboard/home/home.component\";\r\nimport { UsersComponent } from \"src/app/components/dashboard/users/users.component\";\r\nimport { ModulesComponent } from \"src/app/components/dashboard/modules/modules.component\";\r\nimport { SettingsComponent } from \"src/app/components/dashboard/settings/settings.component\";\r\nimport { DoSetupComponent } from \"src/app/components/do-setup/do-setup.component\";\r\nimport { AuthComponent } from \"src/app/components/auth/auth.component\";\r\nimport { PreventAppInstalledGuard } from \"src/app/guards/app-state.guard\";\r\nimport { HomeComponent } from \"src/app/components/home/home.component\";\r\nimport { DashboardComponent } from \"src/app/components/dashboard/dashboard.component\";\r\nimport { RequireLoggedGuard } from \"src/app/guards/require-logged.guard\";\r\nimport { ModulesUploadComponent } from \"src/app/components/dashboard/modules-upload/modules-upload.component\";\r\nimport { PreventAppNotInstalledGuard } from \"src/app/guards/check-app-installed.guard\";\r\nimport { UsersCreateComponent } from \"src/app/components/dashboard/users-create/users-create.component\";\r\nimport { UsersEditComponent } from \"src/app/components/dashboard/users-edit/users-edit.component\";\r\nimport { ProfileComponent } from \"src/app/components/dashboard/profile/profile.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot([\r\n            {\r\n                path: '',\r\n                component: HomeComponent\r\n            }, {\r\n                path: 'do-setup',\r\n                component: DoSetupComponent,\r\n                canActivate: [ PreventAppInstalledGuard ],\r\n                children: [\r\n                    {\r\n                        path : '',\r\n                        component: SetupHomeComponent\r\n                    }, {\r\n                        path: 'database',\r\n                        component: DatabaseComponent\r\n                    }, {\r\n                        path: 'application',\r\n                        component: ApplicationComponent\r\n                    }\r\n                ]\r\n            }, {\r\n                path: 'auth',\r\n                component: AuthComponent,\r\n                canActivate: [ PreventAppNotInstalledGuard ],\r\n                children: [\r\n                    {\r\n                        path: 'logout',\r\n                        component: LogoutComponent\r\n                    }, {\r\n                        path: 'register',\r\n                        component: RegisterComponent\r\n                    }, {\r\n                        path: 'login',\r\n                        component: LoginComponent\r\n                    }\r\n                ]\r\n            }, {\r\n                path: 'dashboard',\r\n                component: DashboardComponent,\r\n                canActivate: [ RequireLoggedGuard ],\r\n                children: [\r\n                    {\r\n                        path: '',\r\n                        component: DashboardHomeComponent\r\n                    }, {\r\n                        path: 'users',\r\n                        component: UsersComponent\r\n                    }, {\r\n                        path: 'users/edit/:id',\r\n                        component: UsersEditComponent\r\n                    }, {\r\n                        path: 'users/create',\r\n                        component: UsersCreateComponent\r\n                    }, {\r\n                        path: 'profile',\r\n                        component: ProfileComponent\r\n                    }, {\r\n                        path: 'modules',\r\n                        component: ModulesComponent\r\n                    }, {\r\n                        path: 'modules/upload',\r\n                        component: ModulesUploadComponent\r\n                    }, {\r\n                        path: 'settings',\r\n                        component: SettingsComponent\r\n                    }, \r\n                ]\r\n            }\r\n        ])\r\n    ]\r\n})\r\nexport class RoutesModule{}"],"sourceRoot":""}