{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classes/validation-generator.class.ts","webpack:///./src/app/components/auth/auth.component.css","webpack:///./src/app/components/auth/auth.component.html","webpack:///./src/app/components/auth/auth.component.ts","webpack:///./src/app/components/auth/login/login.component.css","webpack:///./src/app/components/auth/login/login.component.html","webpack:///./src/app/components/auth/login/login.component.ts","webpack:///./src/app/components/auth/logout/logout.component.css","webpack:///./src/app/components/auth/logout/logout.component.html","webpack:///./src/app/components/auth/logout/logout.component.ts","webpack:///./src/app/components/auth/register/register.component.css","webpack:///./src/app/components/auth/register/register.component.html","webpack:///./src/app/components/auth/register/register.component.ts","webpack:///./src/app/components/dashboard/home/home.component.css","webpack:///./src/app/components/dashboard/home/home.component.html","webpack:///./src/app/components/dashboard/home/home.component.ts","webpack:///./src/app/components/dashboard/modules/modules.component.css","webpack:///./src/app/components/dashboard/modules/modules.component.html","webpack:///./src/app/components/dashboard/modules/modules.component.ts","webpack:///./src/app/components/dashboard/settings/settings.component.css","webpack:///./src/app/components/dashboard/settings/settings.component.html","webpack:///./src/app/components/dashboard/settings/settings.component.ts","webpack:///./src/app/components/dashboard/users/users.component.css","webpack:///./src/app/components/dashboard/users/users.component.html","webpack:///./src/app/components/dashboard/users/users.component.ts","webpack:///./src/app/components/do-setup/application/application.component.css","webpack:///./src/app/components/do-setup/application/application.component.html","webpack:///./src/app/components/do-setup/application/application.component.ts","webpack:///./src/app/components/do-setup/database/database.component.css","webpack:///./src/app/components/do-setup/database/database.component.html","webpack:///./src/app/components/do-setup/database/database.component.ts","webpack:///./src/app/components/do-setup/do-setup.component.css","webpack:///./src/app/components/do-setup/do-setup.component.html","webpack:///./src/app/components/do-setup/do-setup.component.ts","webpack:///./src/app/components/do-setup/setup-home/setup-home.component.css","webpack:///./src/app/components/do-setup/setup-home/setup-home.component.html","webpack:///./src/app/components/do-setup/setup-home/setup-home.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/guards/app-state.guard.ts","webpack:///./src/app/services/loader.service.ts","webpack:///./src/app/services/setup.service.ts","webpack:///./src/app/shared/fields/fields.component.css","webpack:///./src/app/shared/fields/fields.component.html","webpack:///./src/app/shared/fields/fields.component.ts","webpack:///./src/app/validators/matches.validator.ts","webpack:///./src/app/validators/number.validator.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/modules/material.module.ts","webpack:///./src/modules/routes.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tendoo-setup';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from 'src/modules/material.module';\nimport { SetupHomeComponent } from './components/do-setup/setup-home/setup-home.component';\nimport { DatabaseComponent } from './components/do-setup/database/database.component';\nimport { ApplicationComponent } from './components/do-setup/application/application.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { LogoutComponent } from './components/auth/logout/logout.component';\nimport { RegisterComponent } from './components/auth/register/register.component';\nimport { UsersComponent } from './components/dashboard/users/users.component';\nimport { ModulesComponent } from './components/dashboard/modules/modules.component';\nimport { SettingsComponent } from './components/dashboard/settings/settings.component';\nimport { RoutesModule } from 'src/modules/routes.module';\nimport { DashboardHomeComponent } from './components/dashboard/home/home.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldsComponent } from './shared/fields/fields.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SetupService } from './services/setup.service';\nimport { LoaderService } from './services/loader.service';\nimport { DoSetupComponent } from './components/do-setup/do-setup.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { AppStateGuard } from './guards/app-state.guard';\nimport { HomeComponent } from './components/home/home.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SetupHomeComponent,\n        DatabaseComponent,\n        ApplicationComponent,\n        LoginComponent,\n        LogoutComponent,\n        RegisterComponent,\n        UsersComponent,\n        ModulesComponent,\n        SettingsComponent,\n        DashboardHomeComponent,\n        FieldsComponent,\n        DoSetupComponent,\n        AuthComponent,\n        HomeComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        FlexLayoutModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        MaterialModule,\n        RoutesModule\n    ],\n    providers: [\n        SetupService, \n        LoaderService,\n        AppStateGuard\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ValidatorFn, Validators, FormControl, AbstractControl, FormGroup } from \"@angular/forms\";\r\nimport { Field } from \"../interfaces/field\";\r\nimport { MatchesValidator } from \"../validators/matches.validator\";\r\nimport { Numbervalidator } from \"../validators/number.validator\";\r\n\r\nexport class ValidationGenerator {\r\n    /**\r\n     * generate a validator from field validation property\r\n     * @param string validation string;\r\n     * @return array of validaiton\r\n     */\r\n    static from( validation: string ): ValidatorFn[] | null {\r\n        if ( validation ) {\r\n\r\n            let finalRules          =   [];\r\n            const rules             =   validation.split( '|' );\r\n            const minRule \t\t\t=\t/(min)\\:([0-9])+/g;\r\n            const maxRule \t\t\t=\t/(max)\\:([0-9])+/g;\r\n            const matchRule         =   /(matches):(\\w+)/g;\r\n            let result;\r\n            \r\n            /**\r\n             * Loop and parses the rules\r\n             */\r\n            rules.forEach( rule => {\r\n                if ( rule == 'required' ) {\r\n                    finalRules.push( Validators.required );\r\n                } else if ( rule == 'email' ) {\r\n                    finalRules.push( Validators.email );\r\n                } else if( result =   minRule.exec( rule ) ) {\r\n                    finalRules.push( Validators.minLength( result[2] ) );\r\n                } else if( result = maxRule.exec( rule ) ) {\r\n                    finalRules.push( Validators.maxLength( result[2] ) );\r\n                } else if( result = matchRule.exec( rule ) ) {\r\n                    finalRules.push( MatchesValidator( result[2] ) )\r\n                } else if ( rule == 'number' ) {\r\n                    finalRules.push( Numbervalidator() )\r\n                }\r\n            });\r\n\r\n            return finalRules;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Extract FormControl from Field object\r\n     * @param array fields\r\n     * @return object of FormControl\r\n     */\r\n    static extractControls( fields:Field[], ignoreEmpty = false ): { [key:string] : FormControl } {\r\n        let formControl     =   {};\r\n        fields.forEach( field => {\r\n\r\n            /**\r\n             * the field.control is required in order to extract a control\r\n             * unless if that should ignore empty controls\r\n             */\r\n            if ( field.control === undefined && ignoreEmpty == false ) {\r\n                throw `Unable to use the validation control for the field : \"${field.name}\". Please make sure to define the '.control' property for this field.`\r\n            }\r\n\r\n            if ( field.control ) {\r\n                field.control.setValidators( this.from( field.validation ) );\r\n                formControl[ field.name ]   =   field.control;\r\n            }\r\n        });\r\n\r\n        return formControl;\r\n    }\r\n\r\n    /**\r\n     * Build FormControl from Field object\r\n     * create FormControl if it's not defined and call \r\n     * extractControls to build the FormControl\r\n     * @param Field object\r\n     * @return FormControl\r\n     */\r\n    static buildFormControls( fields: Field[] ): { [ key:string ] : FormControl } {\r\n        let formControls     =   {};\r\n        fields.forEach( ( field:Field ) => {\r\n            if ( field.control == undefined ) {\r\n                field.control   =   new FormControl( field.value ? field.value : null );\r\n            } else {\r\n                field.control.setValue( field.value );\r\n            }\r\n        });\r\n        \r\n        return this.extractControls( fields );\r\n    }\r\n\r\n    /**\r\n     * Build FormControl from Field object\r\n     * create FormControl if it's not defined and call \r\n     * extractControls to build the FormControl\r\n     * @param Field object\r\n     * @return FormControl\r\n     */\r\n    static buildFormControl( field: Field ): FormControl {\r\n        if ( field.control == undefined ) {\r\n            field.control   =   new FormControl( field.value || null );\r\n        } else {\r\n            field.control.setValue( field.value || null );\r\n        }\r\n        \r\n        return this.extractControls([ field ])[ field.name ];\r\n    }\r\n\r\n    /**\r\n     * touch all fields of a provided FormGroup\r\n     * @param form \r\n     */\r\n    static touchAllFields( form:FormGroup ) {\r\n        /**\r\n\t\t * Trigger touch even on all fields.\r\n\t\t * Start by looping tabs\r\n\t\t */\r\n\t\tObject.keys( form.controls ).forEach( field => {\r\n            form.get( field ).markAsTouched();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Build From Field Array\r\n     * @param array Field[]\r\n     * @return FormGroup\r\n     */\r\n    static buildFormGroup( fields: Field[] ): { fields: Field[], formGroup: FormGroup } {\r\n        fields.forEach( field => {\r\n            field.control = ValidationGenerator.buildFormControl( field )\r\n        });\r\n\r\n        return {\r\n            fields,\r\n            formGroup   :   new FormGroup( ValidationGenerator.extractControls( fields ) )\r\n        };\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9hdXRoLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div \\n        fxFlex.xs=\\\"90%\\\" \\n        fxFlex.sm=\\\"70%\\\" \\n        fxFlex.md=\\\"50%\\\" \\n        fxFlex.lg=\\\"40%\\\" \\n        fxFlex.xl=\\\"40%\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-auth',\n    templateUrl: './auth.component.html',\n    styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n    \n    constructor() { }\n    \n    ngOnInit() {\n    }\n    \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  login works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9sb2dvdXQvbG9nb3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  logout works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  register works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class DashboardHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL21vZHVsZXMvbW9kdWxlcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  modules works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modules',\n  templateUrl: './modules.component.html',\n  styleUrls: ['./modules.component.css']\n})\nexport class ModulesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  settings works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  users works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvYXBwbGljYXRpb24vYXBwbGljYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"applicationForm\\\">\\n    <mat-card>\\n        <mat-card-title>Configuring Application</mat-card-title>\\n        <mat-divider></mat-divider>\\n        <mat-card-content>\\n            <p style=\\\"margin: 30px 0 20px\\\">The connexion with the database is successful. Now we need to setup the admin account.</p>\\n            <app-fields [field]=\\\"field\\\" [group]=\\\"applicationForm\\\" *ngFor=\\\"let field of fields\\\"></app-fields>\\n        </mat-card-content>\\n        <mat-divider *ngIf=\\\"! setup.isLoading\\\"></mat-divider>\\n        <mat-progress-bar *ngIf=\\\"setup.isLoading\\\" mode=\\\"indeterminate\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\"></mat-progress-bar>\\n        <mat-card-actions>\\n            <button [disabled]=\\\"setup.isLoading\\\" (click)=\\\"setupApplication()\\\" mat-button>Setup Application</button>\\n        </mat-card-actions>\\n    </mat-card>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Field } from 'src/app/interfaces/field';\nimport { FormGroup } from '@angular/forms';\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\nimport { SetupService } from 'src/app/services/setup.service';\nimport { MatSnackBar } from '@angular/material';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\n\n@Component({\n    selector: 'app-application',\n    templateUrl: './application.component.html',\n    styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n    fields: Field[]     =   [];\n    applicationForm: FormGroup;\n    constructor(\n        public setup: SetupService,\n        private snackbar: MatSnackBar,\n        private router: Router\n    ) { }\n    \n    ngOnInit() {\n        this.fields     =   [\n            {\n                name: 'application_name',\n                value: 'Tendoo CMS',\n                type: 'text',\n                validation: 'required',\n                description: 'What will be the name of your new installation ?',\n                label: 'Application Name'\n            }, {\n                name: 'username',\n                value: 'admin',\n                type: 'text',\n                validation: 'required|min:5',\n                description: 'What is the main account username ?',\n                label: 'Username'\n            },  {\n                name: 'password',\n                value: '',\n                type: 'password',\n                validation: 'required|min:6',\n                description: 'Provide a unique and unpredictable password for the main user.',\n                label: 'Password'\n            }, {\n                name: 'password_confirm',\n                value: '',\n                type: 'password',\n                validation: 'required|matches:password',\n                description: 'Must be the same as password.',\n                label: 'Confirm'\n            }, {\n                name: 'email',\n                value: '',\n                type: 'email',\n                validation: 'required|email',\n                description: 'What is the email used for the main user ?',\n                label: 'Email'\n            }\n        ];\n\n        const fields    =   ValidationGenerator.buildFormControls( this.fields );\n        this.applicationForm    =   new FormGroup( fields );\n    }\n\n    setupApplication() {\n        ValidationGenerator.touchAllFields( this.applicationForm );\n\n        if ( ! this.applicationForm.valid ) {\n            return this.snackbar.open( 'Unable to proceed, the form has one or more errors.', null, {\n                duration: 3000\n            });\n        }\n\n        this.setup.application( this.applicationForm.value ).subscribe( ( result: AsyncResponse ) => {\n            this.snackbar.open( result.message );\n            this.router.navigateByUrl( '/auth/login' );\n        }, ( result: HttpErrorResponse ) => {\n            this.snackbar.open( result.error.message );\n            this.fields.forEach( field => {\n                let formCtrl;\n                if ( result.error.errors[ field.name ] !== undefined ){\n                    field.control.setErrors({ error : true });\n                    field.errors    =   result.error.errors[ field.name ];\n                }\n            })\n        });\n    }\n    \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvZGF0YWJhc2UvZGF0YWJhc2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"setupForm\\\">\\n    <mat-card>\\n        <mat-card-title>Configuring Database</mat-card-title>\\n        <mat-divider></mat-divider>\\n        <mat-card-content>\\n            <p style=\\\"margin: 30px 0 20px\\\">In order to install Tendoo CMS, please provide all the informations required to connect to the database.</p>\\n            <app-fields [field]=\\\"field\\\" [group]=\\\"setupForm\\\" *ngFor=\\\"let field of fields\\\"></app-fields>\\n        </mat-card-content>\\n        <mat-divider *ngIf=\\\"! setup.isLoading\\\"></mat-divider>\\n        <mat-progress-bar *ngIf=\\\"setup.isLoading\\\" mode=\\\"indeterminate\\\" style=\\\"height: 1px;position: absolute;left: 0;\\\"></mat-progress-bar>\\n        <mat-card-actions>\\n            <button [disabled]=\\\"setup.isLoading\\\" (click)=\\\"setupDatabase()\\\" mat-button>Setup Database</button>\\n        </mat-card-actions>\\n    </mat-card>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Field } from 'src/app/interfaces/field';\nimport { FormGroup } from '@angular/forms';\nimport { ValidationGenerator } from 'src/app/classes/validation-generator.class';\nimport { MatSnackBar } from '@angular/material';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { SetupService } from 'src/app/services/setup.service';\nimport { AsyncResponse } from 'src/app/interfaces/async-response';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-database',\n    templateUrl: './database.component.html',\n    styleUrls: ['./database.component.css']\n})\nexport class DatabaseComponent implements OnInit {\n    \n    fields: Field[]     =   [];\n    setupForm: FormGroup;\n\n    constructor(\n        private snackbar: MatSnackBar,\n        public setup: SetupService,\n        private router: Router\n    ) { }\n    \n    ngOnInit() {\n        this.fields     =   [\n            {\n                appearance: 'fill',\n                name: 'hostname',\n                label: 'Host',\n                description: 'provide a url to the host',\n                type: 'text',\n                validation: 'required',\n                value: 'localhost',\n            }, {\n                appearance: 'fill',\n                name: 'username',\n                label: 'Username',\n                description: 'provide a username for the host',\n                type: 'text',\n                validation: 'required',\n                value: 'root',\n            }, {\n                appearance: 'fill',\n                name: 'password',\n                label: 'Password',\n                description: 'provide a password for the host',\n                type: 'password',\n            }, {\n                appearance: 'fill',\n                name: 'db_name',\n                label: 'Database',\n                description: 'provide the database name',\n                type: 'text',\n                validation: 'required',\n                value: 'laravel-ng'\n            }, {\n                appearance: 'fill',\n                name: 'db_prefix',\n                label: 'Tables Prefix',\n                description: 'provide a unique table prefix',\n                type: 'text',\n                value: 'tendoo_'\n            }\n        ];\n\n        const fields    =   ValidationGenerator.buildFormControls( this.fields );\n        this.setupForm  =   new FormGroup( fields );\n    }    \n\n    /**\n     * Setup database\n     * @return void\n     */\n    setupDatabase() {\n        ValidationGenerator.touchAllFields( this.setupForm );\n\n        if ( ! this.setupForm.valid ) {\n            return this.snackbar.open( 'Unable to proceed, the database form is invalid !', null, {\n                duration: 3000\n            });\n        }\n\n        this.__submitForm();\n    }\n\n    /**\n     * Submit Form\n     * @return void\n     */\n    private __submitForm() {\n\n        this.setup.setupDatabase( this.setupForm.value ).subscribe( (result: AsyncResponse ) => {\n            this.snackbar.open( result.message )\n            this.router.navigateByUrl( '/do-setup/application' );\n        }, (response: HttpErrorResponse ) => {\n            this.snackbar.open( response.error.message, null, {\n                duration: 3000\n            });\n        });\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvZG8tc2V0dXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div fxFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div \\n        fxFlex.xs=\\\"90%\\\" \\n        fxFlex.sm=\\\"70%\\\" \\n        fxFlex.md=\\\"50%\\\" \\n        fxFlex.lg=\\\"40%\\\" \\n        fxFlex.xl=\\\"40%\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-do-setup',\n  templateUrl: './do-setup.component.html',\n  styleUrls: ['./do-setup.component.css']\n})\nexport class DoSetupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2V0dXAvc2V0dXAtaG9tZS9zZXR1cC1ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card>\\n    <mat-card-title>Welcome on Tendoo CMS</mat-card-title>\\n    <mat-card-content>\\n        Tendoo CMS is ready to be installed. Let's get started\\n    </mat-card-content>\\n    <mat-divider></mat-divider>\\n    <mat-card-actions>\\n        <a routerLink=\\\"/do-setup/database\\\" mat-button>Database Configuration</a>\\n    </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-setup-home',\n    templateUrl: './setup-home.component.html',\n    styleUrls: ['./setup-home.component.css']\n})\nexport class SetupHomeComponent implements OnInit {\n    \n    constructor() { }\n    \n    ngOnInit() {\n    }\n    \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  home works!\\n</p>\\n<ul>\\n  <li><a routerLink=\\\"do-setup\\\">Setup</a></li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SetupService } from '../services/setup.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppStateGuard implements CanActivate {\n    constructor(\n        private setup: SetupService,\n        private router: Router,\n        private snackbar: MatSnackBar,\n    ){}\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return new Promise( ( resolve, reject ) => {\n            this.setup.ping().subscribe( result => {\n            }, result => {\n                if ( result.error.class === \"Tendoo/Core/Exceptions/TendooInstalledException\" ) {\n                    this.router.navigateByUrl( '' );\n                    this.snackbar.open( result.error.message, null, {\n                        duration: 3000\n                    });\n                    return resolve( false );\n                }\n                resolve( true );\n            })\n        })\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoaderService {\n    isLoading   =   false;\n    constructor(\n        protected http: HttpClient\n    ) { }\n\n    /**\n     * Submit post request\n     * @param {string} url to access\n     * @param data data to submit\n     */\n    post( url:string, data: { [ key:string] : any } ) {\n        return new Observable( ( observer ) => {\n            this.isLoading  =   true;\n            return this.http.post( url, data ).subscribe( result => {\n                this.isLoading  =   false;\n                observer.next( result );\n                observer.complete();\n            }, error => {\n                this.isLoading  =   false;\n                observer.error( error );\n            })\n        });\n    }\n\n    /**\n     * Submit get request\n     * @param {string} url to access\n     * @param data data to submit\n     */\n    get( url ) {\n        return new Observable( ( observer ) => {\n            this.isLoading  =   true;\n            return this.http.get( url ).subscribe( result => {\n                this.isLoading  =   false;\n                observer.next( result );\n                observer.complete();\n            }, error => {\n                this.isLoading  =   false;\n                observer.error( error );\n            })\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { LoaderService } from './loader.service';\n\ndeclare const tendoo;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SetupService extends LoaderService {\n    baseUrl     =   tendoo.base_url; \n\n    /**\n     * Send post request to the server for db configuration\n     * @param fields form field for database configuration\n     */\n    setupDatabase( fields ) {\n        return this.post( this.baseUrl + 'api/do-setup/database', fields );\n    }\n\n    application( fields ) {\n        return this.post( this.baseUrl + 'api/do-setup/application', fields );\n    }\n\n    ping() {\n        return this.get( this.baseUrl + 'api/ping' );\n    }\n}\n","module.exports = \"mat-form-field {\\r\\n    margin-bottom: 10px;\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2ZpZWxkcy9maWVsZHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9CQUFvQjtJQUNwQixZQUFZO0NBQ2YiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvZmllbGRzL2ZpZWxkcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<ng-container [formGroup]=\\\"group\\\">\\r\\n\\t<!-- text field field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"[ 'text', 'password', 'email' ].indexOf( field.type ) != -1\\\" class=\\\"example-full-width w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<input [readonly]=\\\"field.readonly\\\" [type]=\\\"field.type\\\" [formControlName]=\\\"field.name\\\" matInput [placeholder]=\\\"field.label\\\" [value]=\\\"field.value ? field.value : ''\\\">\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- date time field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'datetime'\\\" class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<input [readonly]=\\\"field.readonly\\\" [formControlName]=\\\"field.name\\\" matInput [matDatepicker]=\\\"picker\\\" [placeholder]=\\\"field.label\\\">\\r\\n\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n\\t\\t<mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- select field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'select'\\\" class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<mat-select [formControlName]=\\\"field.name\\\" [placeholder]=\\\"field.label\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let option of field.options\\\" [value]=\\\"option.value\\\">\\r\\n\\t\\t\\t{{ option.label }}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'multiple_select'\\\" multiple class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<mat-select [formControlName]=\\\"field.name\\\" [placeholder]=\\\"field.label\\\">\\r\\n\\t\\t\\t<mat-option *ngFor=\\\"let option of field.options\\\" [value]=\\\"option.value\\\">\\r\\n\\t\\t\\t{{ option.label }}\\r\\n\\t\\t\\t</mat-option>\\r\\n\\t\\t</mat-select>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- textarea field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"field.type == 'textarea'\\\" class=\\\"w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<textarea [formControlName]=\\\"field.name\\\" matInput [placeholder]=\\\"field.label\\\"></textarea>\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\r\\n\\t</mat-form-field>\\r\\n\\t\\r\\n\\t<!-- text field field -->\\r\\n\\t\\r\\n\\t<mat-form-field [appearance]=\\\"field.appearance || 'standard'\\\" *ngIf=\\\"[ 'number' ].indexOf( field.type ) != -1\\\" class=\\\"example-full-width w-100\\\">\\r\\n\\t\\t<mat-label>{{ field.label }}</mat-label>\\r\\n\\t\\t<input [readonly]=\\\"field.readonly\\\" [formControlName]=\\\"field.name\\\" matInput type=\\\"number\\\" [placeholder]=\\\"field.label\\\" [value]=\\\"field.value ? field.value : ''\\\">\\r\\n\\t\\t<mat-hint *ngIf=\\\"field.control.valid || field.control.untouched\\\">{{ field.description }}</mat-hint>\\r\\n\\t\\t<mat-error *ngIf=\\\"field.control.invalid && field.control.touched\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.required\\\">This field is required<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.email\\\">This field is not a valid email<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.minlength\\\">this field doesn't match the required length : {{field.control.errors.minlength.requiredLength }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.matches\\\">this field doesn't match the field : {{ field.control.errors.matches.formControlName }}<br></span>\\r\\n\\t\\t\\t<span *ngIf=\\\"field.control.errors.number\\\">this field require a valid number<br></span>\\r\\n\\t\\t\\t<span *ngFor=\\\"let error of field?.errors\\\">{{ error }}<br></span>\\r\\n\\t\\t</mat-error>\\t\\t\\r\\n\\t</mat-form-field>\\r\\n\\r\\n\\t<!-- button -->\\r\\n\\t<button [type]=\\\"field.type\\\" *ngIf=\\\"[ 'button' ].indexOf( field.type ) !== -1\\\" (click)=\\\"field.onClick( group )\\\" mat-raised-button color=\\\"primary\\\">{{ field.label }}</button>\\r\\n</ng-container>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Field } from '../../interfaces/field';\nimport { FormGroup, AbstractControl } from '@angular/forms';\n\n@Component({\n\tselector: 'app-fields',\n\ttemplateUrl: './fields.component.html',\n\tstyleUrls: ['./fields.component.css']\n})\nexport class FieldsComponent implements OnInit {\n\t@Input( 'field' ) field: Field;\n\t@Input( 'group' ) group: FormGroup;\n\tconstructor() { \n\t\t\n\t}\n\n\t/**\n\t * Check change state\n\t */\n\tchange() {\n\t\t// console.log( this.field.control );\n\t}\n\t\n\tngOnInit() {\n\t\tif ( [ 'text', 'email', 'select', 'password', 'textarea', 'datetime', 'number', 'multiple_select', 'button' ].indexOf( this.field.type ) === -1 ) {\n\t\t\tthrow( `Unable to render the field '${this.field.name}' with the field type : '${this.field.type}'. This type is not supported.`);\n\t\t}\n\n\t\tif ( ! ( this.group.get( this.field.name ) instanceof AbstractControl ) ) {\n\t\t\tthrow `Unable to retreive the field \"${this.field.name}\" from the [group] provided to the \"app-fields\" component.`\n\t\t}\n\n\t\tthis[ this.field.name ] \t=\tthis.field.control;\n\t}\n\t\n}\n","import { ValidatorFn, FormGroup, AbstractControl } from \"@angular/forms\";\r\n\r\nexport function MatchesValidator( matches ): ValidatorFn {\r\n    return ( control: AbstractControl ): {[ key: string ] : any } => {\r\n        if( control.value !== control.parent.get( matches ).value ) {\r\n            return {\r\n                'matches'   :   {\r\n                    'formControl'       :   control.parent.get( matches ),\r\n                    'formControlName'   :   matches\r\n                }\r\n            };\r\n        }       \r\n        return null;\r\n    }\r\n}","import { ValidatorFn, AbstractControl } from \"@angular/forms\";\r\n\r\nexport function Numbervalidator(): ValidatorFn {\r\n    return ( control: AbstractControl ): {[ key: string ] : any } => {\r\n        if( ! /^\\d+$/.exec( control.value ) ) {\r\n            return {\r\n                'number'   :   true\r\n            };\r\n        }       \r\n        return null;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\r\nimport { MatCheckboxModule, MatDatepickerModule, MatFormFieldModule, MatInputModule, MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule, MatMenuModule, MatSidenavModule, MatToolbarModule, MatCardModule, MatDividerModule, MatExpansionModule, MatGridListModule, MatListModule, MatTabsModule, MatButtonModule, MatIconModule, MatProgressSpinnerModule, MatProgressBarModule, MatRippleModule, MatDialogModule, MatSnackBarModule, MatPaginatorModule, MatSortModule, MatTableModule } from '@angular/material';\r\n\r\nconst MaterialModules   =   [\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatRippleModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule\r\n];\r\n\r\n@NgModule({\r\n    imports: MaterialModules,\r\n    exports: MaterialModules,\r\n})\r\nexport class MaterialModule {}","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { SetupHomeComponent } from \"src/app/components/do-setup/setup-home/setup-home.component\";\r\nimport { DatabaseComponent } from \"src/app/components/do-setup/database/database.component\";\r\nimport { ApplicationComponent } from \"src/app/components/do-setup/application/application.component\";\r\nimport { LoginComponent } from \"src/app/components/auth/login/login.component\";\r\nimport { LogoutComponent } from \"src/app/components/auth/logout/logout.component\";\r\nimport { RegisterComponent } from \"src/app/components/auth/register/register.component\";\r\nimport { DashboardHomeComponent } from \"src/app/components/dashboard/home/home.component\";\r\nimport { UsersComponent } from \"src/app/components/dashboard/users/users.component\";\r\nimport { ModulesComponent } from \"src/app/components/dashboard/modules/modules.component\";\r\nimport { SettingsComponent } from \"src/app/components/dashboard/settings/settings.component\";\r\nimport { DoSetupComponent } from \"src/app/components/do-setup/do-setup.component\";\r\nimport { AuthComponent } from \"src/app/components/auth/auth.component\";\r\nimport { AppStateGuard } from \"src/app/guards/app-state.guard\";\r\nimport { HomeComponent } from \"src/app/components/home/home.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot([\r\n            {\r\n                path: '',\r\n                component: HomeComponent\r\n            }, {\r\n                path: 'do-setup',\r\n                component: DoSetupComponent,\r\n                canActivate: [\r\n                    AppStateGuard\r\n                ],\r\n                children: [\r\n                    {\r\n                        path : '',\r\n                        component: SetupHomeComponent\r\n                    }, {\r\n                        path: 'database',\r\n                        component: DatabaseComponent\r\n                    }, {\r\n                        path: 'application',\r\n                        component: ApplicationComponent\r\n                    }\r\n                ]\r\n            }, {\r\n                path: 'auth',\r\n                component: AuthComponent,\r\n                children: [\r\n                    {\r\n                        path: 'logout',\r\n                        component: LogoutComponent\r\n                    }, {\r\n                        path: 'register',\r\n                        component: RegisterComponent\r\n                    }, {\r\n                        path: 'login',\r\n                        component: LoginComponent\r\n                    }\r\n                ]\r\n            }, {\r\n                path: 'dashboard',\r\n                children: [\r\n                    {\r\n                        path: '',\r\n                        component: DashboardHomeComponent\r\n                    }, {\r\n                        path: 'users',\r\n                        component: UsersComponent\r\n                    }, {\r\n                        path: 'modules',\r\n                        component: ModulesComponent\r\n                    }, {\r\n                        path: 'settings',\r\n                        component: SettingsComponent\r\n                    }, \r\n                ]\r\n            }\r\n        ])\r\n    ]\r\n})\r\nexport class RoutesModule{}"],"sourceRoot":""}